<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>花开两朵，天各一方！ • Posts by &#34;note&#34; tag</title>
        <link>https://fairyxxx.github.io</link>
        <description>我很喜欢枫叶，可惜，枫叶红时，总多离别。</description>
        <language>zh-CN</language>
        <pubDate>Tue, 11 Jul 2023 16:30:09 +0800</pubDate>
        <lastBuildDate>Tue, 11 Jul 2023 16:30:09 +0800</lastBuildDate>
        <category>note</category>
        <category>emotion</category>
        <item>
            <guid isPermalink="true">https://fairyxxx.github.io/2023/07/11/Fairyxxx.Favorites.note5/</guid>
            <title>Docker基础</title>
            <link>https://fairyxxx.github.io/2023/07/11/Fairyxxx.Favorites.note5/</link>
            <category>note</category>
            <pubDate>Tue, 11 Jul 2023 16:30:09 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;a name=&#34;eSQ51&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;docker简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker简介&#34;&gt;#&lt;/a&gt; Docker 简介&lt;/h1&gt;
&lt;p&gt;Docker 是一个用于 构建、运行、传送 、应用程序的平台&lt;br&gt;
&lt;a name=&#34;M5fb9&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;docker和虚拟机的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker和虚拟机的区别&#34;&gt;#&lt;/a&gt; Docker 和虚拟机的区别&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;xRLGg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;虚拟机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#虚拟机&#34;&gt;#&lt;/a&gt; 虚拟机：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2023/png/34696645/1689045667982-2c694651-3c2d-40ff-ae9f-edf18718f47e.png#averageHue=%231273c3&amp;amp;clientId=ube4b60be-7a10-4&amp;amp;from=paste&amp;amp;height=515&amp;amp;id=ua77292ce&amp;amp;originHeight=644&amp;amp;originWidth=1571&amp;amp;originalType=binary&amp;amp;ratio=1.25&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=292740&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ue00b0250-28e0-4e25-a627-11628332a16&amp;amp;title=&amp;amp;width=1256.8&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;虚拟机在一定程度上实现了资源的整合，可以将一台服务器的计算能力、存储能力、网络资源分配给多个逻辑服务器，实现多台服务器的功能&lt;/li&gt;
&lt;li&gt;缺点：每台虚拟机都需要占用大量的资源，启动速度慢，大部分情况下，一台服务器上只需要运行一个主要对外提供服务的应用程序就可以了，并不需要一个完整的操作系统。&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2023/png/34696645/1689046632032-71dd91b0-7037-4573-b271-e040187cfb48.png#averageHue=%231372c4&amp;amp;clientId=ube4b60be-7a10-4&amp;amp;from=paste&amp;amp;height=381&amp;amp;id=uddce8c67&amp;amp;originHeight=476&amp;amp;originWidth=766&amp;amp;originalType=binary&amp;amp;ratio=1.25&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=179338&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u460e5ac8-d55c-4b3c-a164-38a085a3b2b&amp;amp;title=&amp;amp;width=612.8&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;fm6g0&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;容器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#容器&#34;&gt;#&lt;/a&gt; 容器：&lt;/h2&gt;
&lt;p&gt;Docker 和容器是两个不同的概念&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Docker 只是容器的一种实现，是一个容器化的解决方案和平台&lt;/li&gt;
&lt;li&gt;容器是一种虚拟化技术，和虚拟机类似也是一个独立的环境。和虚拟机不同的是，它并不需要在容器中运行一个完整的操作系统。&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2023/png/34696645/1689046641835-16337b61-f871-4e8e-80c8-cad5a2566a30.png#averageHue=%230a6fbf&amp;amp;clientId=ube4b60be-7a10-4&amp;amp;from=paste&amp;amp;height=385&amp;amp;id=u6d6ba680&amp;amp;originHeight=481&amp;amp;originWidth=761&amp;amp;originalType=binary&amp;amp;ratio=1.25&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=140750&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ufddc217b-1e8d-446f-aaf7-add7fa978f9&amp;amp;title=&amp;amp;width=608.8&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;HaT1V&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;基本原理和概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基本原理和概念&#34;&gt;#&lt;/a&gt; 基本原理和概念&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2023/png/34696645/1689046877294-5e82a3e7-90a9-424f-be75-a388ba093da7.png#averageHue=%2395fdca&amp;amp;clientId=ube4b60be-7a10-4&amp;amp;from=paste&amp;amp;height=564&amp;amp;id=u17c59eb3&amp;amp;originHeight=705&amp;amp;originWidth=1589&amp;amp;originalType=binary&amp;amp;ratio=1.25&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=305069&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u73128ec6-44ff-4234-a417-e0b64fed81a&amp;amp;title=&amp;amp;width=1271.2&#34; alt=&#34;image.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;images&lt;/code&gt;  镜像，镜像是一个只读的模板，它可以用来创建容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;containers&lt;/code&gt;  容器，容器是 Docker 的运行实例，它提供一个独立的可移植的环境，可以在这个环境中运行应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker 仓库：是用来存储 Docker 镜像的地方，最流行和最常用的仓库就是 &lt;code&gt;Dockerhub&lt;/code&gt; ：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9odWItc3RhZ2UuZG9ja2VyLmNvbS8=&#34;&gt;https://hub-stage.docker.com/&lt;/span&gt;&lt;br&gt;
&lt;a name=&#34;vqvXG&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;docker的安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker的安装&#34;&gt;#&lt;/a&gt; Docker 的安装&lt;/h1&gt;
&lt;p&gt;Docker 官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZG9ja2VyLmNvbS8=&#34;&gt;https://www.docker.com/&lt;/span&gt;&lt;br /&gt;Windows 系统：需要开启 &lt;code&gt;Hyper-V&lt;/code&gt; &lt;br /&gt; &lt;code&gt;docker version&lt;/code&gt;  查看版本信息&lt;br /&gt; Docker 是使用 &lt;code&gt;Client-Server&lt;/code&gt;  架构模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Docker Client&lt;/code&gt;  和 &lt;code&gt;Docker Daemon&lt;/code&gt;  之间通过 &lt;code&gt;Socket&lt;/code&gt;  或者 &lt;code&gt;RESTful API&lt;/code&gt;  进行通信&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Docker Daemon&lt;/code&gt;  就是服务端的守护进程，负责管理 Docker 的各种资源&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Docker Client&lt;/code&gt;  负责向 &lt;code&gt;Docker Daemon&lt;/code&gt;  发送请求， &lt;code&gt;Docker Daemon&lt;/code&gt;  收到请求之后进行处理，然后将结果返回给 &lt;code&gt;Docker Client&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;pnJTj&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;容器化和dockerfile&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#容器化和dockerfile&#34;&gt;#&lt;/a&gt; 容器化和 &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;容器化：将应用程序打包成容器，然后在容器中运行应用程序的过程，可分为三个步骤。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建一个 &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;Dockerfile&lt;/code&gt;  构建镜像&lt;/li&gt;
&lt;li&gt;使用镜像创建和运行容器&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;Dockerfile&lt;/code&gt;  是一个文本文件，里面包含了一条条指令，用来告诉 Docker 如何来构建镜像。&lt;br&gt;
&lt;a name=&#34;hbiQX&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;docker-compose&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker-compose&#34;&gt;#&lt;/a&gt; Docker Compose&lt;/h1&gt;
&lt;p&gt;Docker Compose&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于定义和运行多容器 Docker 应用程序的工具&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;YAML&lt;/code&gt;  文件来配置应用程序的服务&lt;/li&gt;
&lt;li&gt;一条命令即可创建并启动所有服务&lt;br&gt;
&lt;a name=&#34;g8lpD&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;docker常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker常用命令&#34;&gt;#&lt;/a&gt; Docker 常用命令&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;TZ7xC&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;镜像管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#镜像管理&#34;&gt;#&lt;/a&gt; 镜像管理：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker image ls / docker images&lt;/code&gt;  查看镜像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker search [image]&lt;/code&gt;  检索镜像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker pull [image]&lt;/code&gt;  拉取镜像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker push [image]&lt;/code&gt;  上传镜像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker save [image] -o FILE &lt;/code&gt;  保存镜像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker save [image] &amp;gt; FILE&lt;/code&gt;  保存镜像
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker save geekhour/hello-docker:latest &amp;gt; hello-docker.tar&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker load -i FILE&lt;/code&gt;  导入镜像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker rmi [image] / docker image rm [image]&lt;/code&gt;  删除镜像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker image prune&lt;/code&gt;  删除不再使用的镜像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker import [URL/FILE]&lt;/code&gt;  将文件系统导入为镜像&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker commit [container] [image]&lt;/code&gt;  从容器创建镜像&lt;br&gt;
&lt;a name=&#34;xjWpx&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;网络管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络管理&#34;&gt;#&lt;/a&gt; 网络管理：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker network ls&lt;/code&gt;  列出可用网络&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker network inspect [network]&lt;/code&gt;  查看网络详细信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker network create [network]&lt;/code&gt;  创建一个新的网络&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker network rm [network]&lt;/code&gt;  删除一个网络&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker network connect [network] [container]&lt;/code&gt;  将容器连接到网络&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker network disconnect [network] [container]&lt;/code&gt;  将容器从网络断开&lt;br&gt;
&lt;a name=&#34;VJ4Ya&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;插件管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#插件管理&#34;&gt;#&lt;/a&gt; 插件管理：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker plugin ls&lt;/code&gt;  列出插件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker plugin install [plugin]&lt;/code&gt;  安装插件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker plugin enable [plugin]&lt;/code&gt;  启用插件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker plugin disable [plugin]&lt;/code&gt;  禁用插件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker plugin rm [plugin]&lt;/code&gt;  卸载插件&lt;br&gt;
&lt;a name=&#34;rVVI2&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;容器管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#容器管理&#34;&gt;#&lt;/a&gt; 容器管理：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker create [image]&lt;/code&gt;  创建容器（仅创建，不运行）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run [image]&lt;/code&gt;  创建并运行容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker start [container]&lt;/code&gt;  启动容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker stop [container]&lt;/code&gt;  停止容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker restart [container]&lt;/code&gt;  重启容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker ps / docker container ls&lt;/code&gt;  列出正在运行的容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker ps -a / docker container ls -a&lt;/code&gt;  列出所有容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker exec -it [container] bash / docker attach [container]&lt;/code&gt;  以交互模式进入容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker export [container] -o FILE / docker export [container] &amp;gt; FILE&lt;/code&gt;  导出容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker import FILE&lt;/code&gt;  导入容器快照&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker logs [container]&lt;/code&gt;   查看容器⽇志&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker rm [container] / docker container rm [container]  &lt;/code&gt;   删除容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker port [container]&lt;/code&gt;    查看容器端⼝映射&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker top [container]&lt;/code&gt;   显示容器内进程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker cp [FILE] [container]:[PATH]&lt;/code&gt;    复制本地⽂件 到容器内的指定路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker diff [container]&lt;/code&gt;   显示容器内的变化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker stats [container]&lt;/code&gt;    显示容器资源使⽤情况&lt;br&gt;
&lt;a name=&#34;fywXl&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数据卷管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据卷管理&#34;&gt;#&lt;/a&gt; 数据卷管理：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker volume create [volume]&lt;/code&gt;   创建⼀个数据卷&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker volume ls&lt;/code&gt;    查看数据卷&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker volume inspect [volume]&lt;/code&gt;    查看数据卷详细信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker volume rm [volume]&lt;/code&gt;    删除数据卷&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker volume prune&lt;/code&gt;    删除所有未使⽤的数据卷&lt;br&gt;
&lt;a name=&#34;IktNY&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;日常操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#日常操作&#34;&gt;#&lt;/a&gt; 日常操作：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker info&lt;/code&gt;  查看 docker 系统信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker version&lt;/code&gt;    查看 Docker 版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker --help&lt;/code&gt;    查看 Docker 帮助⽂档&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker [command] --help&lt;/code&gt;    查看 Docker 命令帮助&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker login/logout&lt;/code&gt;    登录 / 退出 DockerHub&lt;br&gt;
&lt;a name=&#34;CwKfo&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;容器运行&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#容器运行&#34;&gt;#&lt;/a&gt; 容器运行：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker run [options] image [command] [arg...]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run --name [name] [image]&lt;/code&gt;     创建 运⾏并命名容器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -d [image]&lt;/code&gt;    创建⼀个容器并后台运⾏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -p [hostPort]:[containerPort] [image]&lt;/code&gt;    创建⼀个容器并指定端⼝映射&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -P [image]&lt;/code&gt;    创建⼀个容器并指定端⼝映射（随机分配）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -e [key=value] [image]&lt;/code&gt;   创建⼀个容器并指定环境变量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -w [PATH] [image]&lt;/code&gt;    创建⼀个容器并指定⼯作⽬录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -name [name] [image]&lt;/code&gt;    创建⼀个容器并指定容器名称&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run [image] [command]&lt;/code&gt;   创建⼀个容器并在容器中执⾏命令（交互模式）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -d -p [hostPort]:[containerPort] -e [key=value] -w [PATH] --name [name] [image]&lt;/code&gt;   创建⼀个容器，并指定容器名称，后台运⾏，端⼝映射 环境变量，⼯作⽬录
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker run -it nginx:latest /bin/bash&lt;/code&gt;    使⽤镜像 &lt;code&gt;nginx:latest&lt;/code&gt;  来启动⼀个容器， 并在容器内执⾏交互式 &lt;code&gt;bash shell  &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -it -p 3316:3306 -v /data:/data -d mysql:latest &lt;/code&gt;   创建⼀个 mysql 容器，后台模式启动，主机 &lt;code&gt;80&lt;/code&gt;  端⼝ 映射到容器 &lt;code&gt;80&lt;/code&gt;  端⼝，主机 &lt;code&gt;/data&lt;/code&gt;  ⽬录映射到容器 &lt;code&gt;/data&lt;/code&gt;  ⽬录&lt;br&gt;
&lt;a name=&#34;Hic4g&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用dockerfile指令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常用dockerfile指令&#34;&gt;#&lt;/a&gt; 常用 &lt;code&gt;Dockerfile&lt;/code&gt;  指令：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FROM [base_image]&lt;/code&gt;    指定基础镜像，必须为 Dockerfile 的第⼀条指令；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ADD&lt;/code&gt;    ⽤于将⽂件复制到镜像中，源可以使 URL 或者本地⽂件，也可 以⼀个压缩⽂件（⾃动解压）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COPY [--chown=&amp;lt;user&amp;gt;:&amp;lt;group&amp;gt;] [源路径] [⽬标路径]&lt;/code&gt;  ⽤于将⽂件拷⻉到镜像中，源只能是本地⽂件；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WORKDIR [PATH] &lt;/code&gt;   ⽤于指定⼯作⽬录，可以使⽤多个 &lt;code&gt;WORKDIR&lt;/code&gt;  指令，如果使⽤ 相对路径，则是相对于上⼀条 &lt;code&gt;WORKDIR&lt;/code&gt;  指令所指定的⽬录；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ENV &amp;lt;key&amp;gt; &amp;lt;value&amp;gt; / ENV &amp;lt;key&amp;gt;=&amp;lt;value1&amp;gt; &amp;lt;key2&amp;gt;=&amp;lt;value2&amp;gt;...&lt;/code&gt;  ⽤于设置环境变量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMD &amp;lt;命令&amp;gt; /  CMD [&amp;quot;可执⾏⽂件&amp;quot;, &amp;quot;参数1&amp;quot;, &amp;quot;参数2&amp;quot; ...]&lt;/code&gt;   ⽤于指定默认的容器主进程，每个 &lt;code&gt;Dockerfile&lt;/code&gt;  中只能有⼀条 &lt;code&gt;CMD&lt;/code&gt;  指令，如果有多条，则只有最后⼀条会⽣效；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VOLUME &amp;lt;路径&amp;gt; /  VOLUME [&amp;quot;路径1&amp;quot;, &amp;quot;路径2&amp;quot;...]&lt;/code&gt;   ⽤于定义匿名卷（持久化⽬录）&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note4/</guid>
            <title>Nmap基础</title>
            <link>https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note4/</link>
            <category>note</category>
            <pubDate>Mon, 10 Jul 2023 16:52:27 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;a name=&#34;LjDCe&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;nmap的介绍与安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nmap的介绍与安装&#34;&gt;#&lt;/a&gt; Nmap 的介绍与安装&lt;/h1&gt;
&lt;p&gt;Nmap 介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nmap 是一款开源、免费的网络探测、安全审计的工具。&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1672104829214-c624e5d6-bc48-4a33-ad90-a3c006e5df9d.png#averageHue=%23fcfcfc&amp;amp;clientId=ub64b62f9-a6a7-4&amp;amp;from=paste&amp;amp;height=409&amp;amp;id=u0f2a314d&amp;amp;originHeight=409&amp;amp;originWidth=662&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=89269&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uf72fbfe0-7475-4cd1-b11f-1ad5e31a29b&amp;amp;title=&amp;amp;width=662&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;通过 Nmap 探测服务器存活以及开发的服务，以及对目标进行安全审计。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nmap 获取：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nmap 的获取，建议无论任何软件的获取，都是通过对应官网获取。&lt;/li&gt;
&lt;li&gt;Namp 官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ubWFwLm9yZy8=&#34;&gt;https://nmap.org/&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nmap 安装（Windows）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nmap 下载界面：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ubWFwLm9yZy9kb3dubG9hZC5odG1sI3dpbmRvd3M=&#34;&gt;https://nmap.org/download.html#windows&lt;/span&gt;，打开之后直接下载，双击 exe 文件安装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nmap 安装（linux）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于大多数 Linux，可以直接利用 RPM 包管理直接安装，以下给出对应命令操作。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ubWFwLm9yZy9kb3dubG9hZC5odG1sI2xpbnV4LXJwbQ==&#34;&gt;https://nmap.org/download.html#linux-rpm&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;mZeTA&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;nmap列举远程机器开放的端口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nmap列举远程机器开放的端口&#34;&gt;#&lt;/a&gt; Nmap 列举远程机器开放的端口&lt;/h1&gt;
&lt;p&gt;Nmap 列举远程机器开放的端口原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nmap 扫描原理图：&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1672112381686-f249212b-b928-4afc-bdc1-dd1102908f18.png#averageHue=%23fafafa&amp;amp;clientId=uc7b4bd5d-19ef-4&amp;amp;from=paste&amp;amp;height=270&amp;amp;id=uffc958ad&amp;amp;originHeight=338&amp;amp;originWidth=854&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=89376&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ua812751a-fee1-4326-a2d7-6132a7fdcd1&amp;amp;title=&amp;amp;width=683.2&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;首先判断 nmap 输入的命令行中是否包含域名，如果包含需要利用 DNS 服务器进行域名解析，然后发送 ICMP Echo Request 来探测主机存活性。&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 &lt;code&gt;nmap scanme.nmap.org&lt;/code&gt;  来列举该站点的端口信息。&lt;br /&gt;nmap 进行探测之前要把域名通过 DNS 服务器解析为 IP 地址，我们也可以使用指定的 DNS 服务器进行解析。使用 &lt;code&gt;--dns-servers&lt;/code&gt;  参数来指定。&lt;br /&gt;对于已经知道主机存活或者防火墙开启的机器，可以使用 &lt;code&gt;-Pn&lt;/code&gt;  参数来停止探测之前的 ICMP 请求。以达到不触发防火墙安全机制。&lt;br /&gt;对于默认的端口范围，并不能满足日常工作需要。可以使用 &lt;code&gt;-p m-n&lt;/code&gt;  来指定探测端口范围为 m-n 之间的所有端口。&lt;br /&gt;端口状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;open：表示端口处于开放状态&lt;/li&gt;
&lt;li&gt;closed：表示端口处于关闭状态&lt;/li&gt;
&lt;li&gt;Filterd：表示端口处于过滤无法收到返回的 probe 状态&lt;/li&gt;
&lt;li&gt;UnFiltered：表示端口收到返回的 probe，但是无法确认&lt;/li&gt;
&lt;li&gt;Opend/UnFiltered：表示端口处于开放或者未过滤状态&lt;/li&gt;
&lt;li&gt;Closed/UnFiltered：表示端口处于关闭或者未过滤状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nmap 扫描技术查看：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在命令行中，输入 &lt;code&gt;nmap -h&lt;/code&gt;  来查看 nmap 自带的帮助信息&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;jx6uT&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;nmap识别目标机器上服务的指纹&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nmap识别目标机器上服务的指纹&#34;&gt;#&lt;/a&gt; Nmap 识别目标机器上服务的指纹&lt;/h1&gt;
&lt;p&gt;服务指纹：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为了确保有一个成功的渗透测试或网络设备监控，必须需要知道目标系统中服务的指纹信息。服务指纹信息包括服务端口、服务名和版本等&lt;/li&gt;
&lt;li&gt;通过分析目标往 Nmap 发送的数据包中某些协议标记、选项和数据，我们可以推断发送这些数据包的操作系统等&lt;/li&gt;
&lt;li&gt;nmap 通过向目标主机发送多个 UDP 与 TCP 数据包并分析其响应来进行操作系统指纹识别工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nmap 识别服务指纹：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用命令  &lt;code&gt;nmap -sV IP&lt;/code&gt;  地址来识别目标机器的服务信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nmap 侵略性的探测&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用命令 &lt;code&gt;nmap -A -v -T4 IP地址&lt;/code&gt; 来探测目标机器的操作系统、服务等信息
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt;  表示使用侵略性的策略探测&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;  持续输出返回解析&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T4&lt;/code&gt;  表示加快速度来探测，范围：1~5&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;nmap -sC -sV -O IP地址&lt;/code&gt; 来探测目标机器的操作系统、服务信息、
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-sC&lt;/code&gt;  参数表示使用 Nmap 脚本探测&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sV&lt;/code&gt; ：表示探测目标机器上的服务信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-O&lt;/code&gt; ：表示探测目标机器的操作系统信息&lt;br&gt;
&lt;a name=&#34;xAoCA&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;nmap发现局域网中存活主机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nmap发现局域网中存活主机&#34;&gt;#&lt;/a&gt; Nmap 发现局域网中存活主机&lt;/h1&gt;
&lt;p&gt;主机发现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个局域网中肯定是连接着多台设备，那么我们如何获取那些设备正在开机状态呢？
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;ping IP地址&lt;/code&gt; 进行探测，但是如果一个网络很大的情况下，这样的手工探测显得很费劲。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可以使用不同的工具来进行批量探测，在探测之前需要明白 CIDR 的含义
&lt;ul&gt;
&lt;li&gt;CIDR（无类别间路由，Classless Inter-Domain Routing），可以快速表示一个网络&lt;/li&gt;
&lt;li&gt;比如：172.16.1.1/24 表示在 172.16.1.1~172.16.1.255 之间的所有主机 IP 地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nmap 主机发现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Nmap 命令： &lt;code&gt;nmap -sP CIDR&lt;/code&gt;  对该网络中所有主机进行 ping 扫描，以探测主机存活性。扫描过程中使用了 TCP SYN 扫描、ICMP echo Request 来探测主机存活。&lt;/li&gt;
&lt;li&gt;使用 Nmap 命令： &lt;code&gt;nmap -sn CIDR&lt;/code&gt;  对该网络中所有主机进行 ping 扫描，以探测主机存活性。&lt;/li&gt;
&lt;li&gt;结果输出：
&lt;ul&gt;
&lt;li&gt;使用 Nmap 命令： &lt;code&gt;nmap -sn CIDR -oX test.xml&lt;/code&gt;  对该网络中所有主机进行 ping 扫描，以探测主机存活性。&lt;/li&gt;
&lt;li&gt;同时将结果输出到 test.xml 文件中，以便后续使用。&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;xIXSI&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;nmap端口探测技巧&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nmap端口探测技巧&#34;&gt;#&lt;/a&gt; Nmap 端口探测技巧&lt;/h1&gt;
&lt;p&gt;实际场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在实际环境中，当系统管理员对设备进行管理时，或者渗透测速人员对设备进行检测时，并不一定对所有的服务进行操作。极有可能是对某个或某个范围内的服务进行检测。
&lt;ul&gt;
&lt;li&gt;如果对所有服务进行探测，那么就会出现耗时长，费力不讨好的情况。针对这样的情况，我们很有必要了解如何使用 Nmap 来更加灵活的进行服务探测，避免全端口探测对服务器造成压力。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note3/</guid>
            <title>网络安全</title>
            <link>https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note3/</link>
            <category>note</category>
            <pubDate>Mon, 10 Jul 2023 16:40:23 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;a name=&#34;D9yDD&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-网络连接的核心-ip地址和端口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-网络连接的核心-ip地址和端口&#34;&gt;#&lt;/a&gt; 1、网络连接的核心 - IP 地址和端口&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;JmUCx&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;内网局域网ip和公网互联网ip&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内网局域网ip和公网互联网ip&#34;&gt;#&lt;/a&gt; 内网（局域网）IP 和公网（互联网）IP&lt;/h2&gt;
&lt;p&gt;内网 IP：路由以内的网络，可以连接互联网，但是互联网无法直接连接内网（需要端口映射）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：安全，解决 IPv4 地址耗尽问题&lt;/li&gt;
&lt;li&gt;缺点：互联网无法直接连接内网&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;公网 IP：顾名思义，互联网 IP 地址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：可以直接和互联网资源互通&lt;/li&gt;
&lt;li&gt;缺点：安全性较低，IPv4 地址资源耗尽&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ipconfig&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a name=&#34;necXZ&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;tcp逻辑端口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcp逻辑端口&#34;&gt;#&lt;/a&gt; TCP 逻辑端口&lt;/h2&gt;
&lt;p&gt;端口是应用程序（服务）在计算机中的唯一标识&lt;br /&gt;“端口” 英文 port ，可以认为是设备与外界通讯交流的出口。端口分为虚拟端口和物理端口，其中虚拟端口指计算机内部或交换机路由器内的端口，不可见。&lt;br /&gt;源端口（客户机）端口随机，目标端口（服务器）端口固定开启监听。端口范围 0~65535&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;netstat &lt;span class=&#34;literal&#34;&gt;-ano&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;netstat -anltup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a name=&#34;QWES9&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-http超文本传输协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-http超文本传输协议&#34;&gt;#&lt;/a&gt; 2、HTTP 超文本传输协议&lt;/h1&gt;
&lt;p&gt;传输协议定义了浏览器和客户端传输数据的格式&lt;br&gt;
&lt;a name=&#34;NMOd9&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;http协议特点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#http协议特点&#34;&gt;#&lt;/a&gt; HTTP 协议特点：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670904377550-68946cd8-af9b-483f-8f0d-c28fb8be995c.png#averageHue=%23c7daec&amp;amp;clientId=u6d143f45-fb19-4&amp;amp;from=paste&amp;amp;height=128&amp;amp;id=u83313d61&amp;amp;originHeight=160&amp;amp;originWidth=684&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=64967&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u9478f9b4-52e6-4d2f-a6b3-60174f1df2d&amp;amp;title=&amp;amp;width=547.2&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;基于 tcp/ip 协议&lt;/li&gt;
&lt;li&gt;默认端口号为 80&lt;/li&gt;
&lt;li&gt;请求和响应一 一对应&lt;/li&gt;
&lt;li&gt;每次请求相互独立，是无状态协议&lt;br&gt;
&lt;a name=&#34;zxFqD&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;请求消息-request&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#请求消息-request&#34;&gt;#&lt;/a&gt; 请求消息 - request：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670904499437-808aaebc-40cd-4f06-a734-7bc33941d95f.png#averageHue=%23fdfdf9&amp;amp;clientId=u6d143f45-fb19-4&amp;amp;from=paste&amp;amp;height=308&amp;amp;id=u51c54c7f&amp;amp;originHeight=385&amp;amp;originWidth=560&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=193541&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ucffdad5b-1e48-40d0-b6ee-91d77e2563e&amp;amp;title=&amp;amp;width=448&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;HTTP 常见有八种（所有不止八种）请求方式，常见 GET、POST&lt;/li&gt;
&lt;li&gt;GET 请求：请求参数在 URL 地址中，URL 有长度限制  GET 请求只能传输字符数据&lt;/li&gt;
&lt;li&gt;POST 请求：请求参数在请求体中，无大小限制   POST 请求可以传输字符或字节数&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670904542458-fb651a48-4193-4cc6-9d7c-4ecd61f66a38.png#averageHue=%23fefefb&amp;amp;clientId=u6d143f45-fb19-4&amp;amp;from=paste&amp;amp;height=248&amp;amp;id=ud3841d0c&amp;amp;originHeight=310&amp;amp;originWidth=676&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=186096&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uc8420f51-82f3-4779-8a17-0a7f2eb916c&amp;amp;title=&amp;amp;width=540.8&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670904549649-8b376180-08b6-4689-aecd-9fdd3bf288c8.png#averageHue=%23fefefa&amp;amp;clientId=u6d143f45-fb19-4&amp;amp;from=paste&amp;amp;height=295&amp;amp;id=u30a717f3&amp;amp;originHeight=369&amp;amp;originWidth=685&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=220833&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u05eff6a0-74bd-4d43-a365-da53a419639&amp;amp;title=&amp;amp;width=548&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;o7INg&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;请求头&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#请求头&#34;&gt;#&lt;/a&gt; 请求头：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Host：请求主机域名 / IP 地址&lt;/li&gt;
&lt;li&gt;User-Agent：告诉服务器浏览器的版本信息，供服务器解决浏览器兼容问题&lt;/li&gt;
&lt;li&gt;Accept：传输文件类型&lt;/li&gt;
&lt;li&gt;Referer：告诉服务器从哪里来（防盗链）&lt;/li&gt;
&lt;li&gt;Cookie：存储在用户本地终端上的数据&lt;br&gt;
&lt;a name=&#34;hAU9d&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;响应消息-response&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#响应消息-response&#34;&gt;#&lt;/a&gt; 响应消息 - response：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670910989765-446a101f-1d5a-49e1-9ce8-c0eb83d2bc04.png#averageHue=%23fefdfa&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=257&amp;amp;id=u46c76a48&amp;amp;originHeight=321&amp;amp;originWidth=673&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=162765&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u74a9c802-ca5b-47a8-9121-5b6a90eaecd&amp;amp;title=&amp;amp;width=538.4&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670910995404-520039fd-5f0a-4048-a84a-686cf705e5e7.png#averageHue=%23f8f8f7&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=333&amp;amp;id=uaf1e6437&amp;amp;originHeight=416&amp;amp;originWidth=470&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=144641&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uea0ad49c-3029-4e58-acad-14bfcc97ab2&amp;amp;title=&amp;amp;width=376&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;dYXPE&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;响应状态码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#响应状态码&#34;&gt;#&lt;/a&gt; 响应状态码：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;响应状态码：服务器告诉浏览器本次请求和响应的状态&lt;/li&gt;
&lt;li&gt;1xx：服务器接收浏览器消息未完成，发送 1xx 状态码&lt;/li&gt;
&lt;li&gt;2xx：成功， 200&lt;/li&gt;
&lt;li&gt;3xx：重定向，302，304（访问缓存）&lt;/li&gt;
&lt;li&gt;4xx：客户端错误，404（没有找到对应的资源），405（请求方法不被允许）&lt;/li&gt;
&lt;li&gt;5xx：服务器错误，500（服务器内部出现异常）&lt;br&gt;
&lt;a name=&#34;u1lD7&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-kali安装docker&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-kali安装docker&#34;&gt;#&lt;/a&gt; 3、kali 安装 docker&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;kali 切换 root 用户： &lt;code&gt;sudo su&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;kali 安装 docker： &lt;code&gt;apt install docker.io&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;pMs7c&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-快速搭建漏洞靶场&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-快速搭建漏洞靶场&#34;&gt;#&lt;/a&gt; 4、快速搭建漏洞靶场&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;TR6ZX&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;快速搭建dvwa&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#快速搭建dvwa&#34;&gt;#&lt;/a&gt; 快速搭建 DVWA&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1. 下载并安装 PHPstudy：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueHAuY24vZG93bmxvYWQuaHRtbA==&#34;&gt;https://www.xp.cn/download.html&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;2. 将解压后的 DVWA 源代码放置 phpstudy 安装目录的 WWW 文件夹&lt;/li&gt;
&lt;li&gt;3. 进入 DVWA/config 目录，将 config,inc.php.dist 最后的.dst 删去&lt;/li&gt;
&lt;li&gt;4. 打开刚刚重命名的 config.inc.php 文件，修改 db_user 和 db_password&lt;/li&gt;
&lt;li&gt;5. 浏览器访问&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS9EVldBL3NldHVwLnBocA==&#34;&gt; http://127.0.0.1/DVWA/setup.php&lt;/span&gt;，点击最下方的 Create Database&lt;/li&gt;
&lt;li&gt;6. 浏览器访问&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMS9EVldBLw==&#34;&gt; http://127.0.0.1/DVWA/&lt;/span&gt;，输入用户名 admin，密码 password 登录 dvwa&lt;br&gt;
&lt;a name=&#34;XQ9Yj&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;docker快速搭建漏洞靶场&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker快速搭建漏洞靶场&#34;&gt;#&lt;/a&gt; docker 快速搭建漏洞靶场&lt;/h2&gt;
&lt;p&gt;&lt;a name=&#34;uyXyh&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;docker的基础命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker的基础命令&#34;&gt;#&lt;/a&gt; docker 的基础命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;启动 docker 服务： &lt;code&gt;systemctl start docker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重启 docker 服务： &lt;code&gt;systemctl restart docker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;关闭 docker 服务： &lt;code&gt;docker service docker stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;列出镜像： &lt;code&gt;docker images&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;列出容器： &lt;code&gt;docker ps -a / docker container ls -a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除镜像： &lt;code&gt;docker rmi [image_id]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除容器： &lt;code&gt;docker rm [container_id]&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;VCWNs&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;docker搭建dvwa靶场&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker搭建dvwa靶场&#34;&gt;#&lt;/a&gt; docker 搭建 DVWA 靶场&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DVWA 是 OWASP 官方编写的 PHP 网站，包含了各种网站常见漏洞，可以学习攻击及修复方式。&lt;/li&gt;
&lt;li&gt;下载镜像： &lt;code&gt;docker pull vulnerables/web-dvwa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;通过镜像启动容器： &lt;code&gt;docker  run --rm -it -p 80:80 vulnerables/web-dvwa&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;xvuMn&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vulhub搭建漏洞复现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vulhub搭建漏洞复现&#34;&gt;#&lt;/a&gt; vulhub 搭建漏洞复现&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWxodWIub3Jn&#34;&gt;https://vulhub.org&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Download the latest version of the vulhub（下载最新版本的 vulhub）： &lt;code&gt;git clone [https://github.com/vulhub/vulhub.git](https://github.com/vulhub/vulhub.git)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Entry vulnerability directory： &lt;code&gt;cd /path/to/vuln/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Compile (optional) （编译）： &lt;code&gt;docker-compose build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;开启靶场容器： &lt;code&gt;docker -compose up -d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;关闭靶场容器： &lt;code&gt;docker -compose down&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;bklXI&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-漏洞&#34;&gt;#&lt;/a&gt; 5、漏洞&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;SPZB1&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;常见的网址漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见的网址漏洞&#34;&gt;#&lt;/a&gt; 常见的网址漏洞&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SQL 注入：泄露破坏数据库，数据库中可能有账号密码等敏感信息&lt;/li&gt;
&lt;li&gt;命令执行：获取目标机器命令权限，执行非法命令，破坏或控制受害机&lt;/li&gt;
&lt;li&gt;文件上传：上传后门病毒木马到网站中，破坏网站甚至系统&lt;br&gt;
&lt;a name=&#34;Wq5Vn&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;命令执行漏洞详解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命令执行漏洞详解&#34;&gt;#&lt;/a&gt; 命令执行漏洞详解&lt;/h2&gt;
&lt;p&gt;一般出现这种漏洞，是因为应用系统从设计上需要给用户提供指定的远程命令操作的接口，例如常见的路由器、防火墙、入侵检测等设备的 web 管理界面上，一般会给用户提供一个 ping 操作的 web 界面，用户从 web 界面输入目标 ip，提交后 后台会对该 IP 地址进行一次 ping 测试并返回测试结果。如果设计者在完成该功能时，没有做严格的安全控制，则可能会导致攻击者通过该接口提交恶意命令，让后台服务器执行，从而获取后台服务器权限。&lt;br&gt;
&lt;a name=&#34;XH9IS&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;command-injection命令执行注入漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#command-injection命令执行注入漏洞&#34;&gt;#&lt;/a&gt; Command Injection 命令执行（注入）漏洞&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;漏洞利用初探，修改 requests 请求参数远程执行命令（网站有网络连接检测功能，在输入 IP 地址后再拼接其它命令。）&lt;/li&gt;
&lt;li&gt;执行： &lt;code&gt;127.0.0.1 &amp;amp; whoami&lt;/code&gt;      （&amp;amp; 为命令拼接符，通用的）
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670911990569-19245ad5-906b-450c-9866-c1c98338b5f9.png#averageHue=%23f5f5f5&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=267&amp;amp;id=ufcd1c1d3&amp;amp;originHeight=334&amp;amp;originWidth=957&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=90651&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u120da602-2f54-465e-9c38-45ff508314b&amp;amp;title=&amp;amp;width=765.6&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Linux 中： &lt;code&gt;rm -rf /  &lt;/code&gt;    删除操作系统中所有内容，包括操作系统（命令执行需要权限的限制）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whoami&lt;/code&gt;  ：所有操作系统都可使用（目标网站所使用的操作系统可能不明确）&lt;br&gt;
&lt;a name=&#34;wNeYl&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;command-injection防御&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#command-injection防御&#34;&gt;#&lt;/a&gt; Command Injection 防御&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;low 模式下的源码（无任何防御措施）
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912082628-51013e3d-74d6-49a7-bdd5-ee7ea5950d40.png#averageHue=%23fdfaf9&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=377&amp;amp;id=u323f4613&amp;amp;originHeight=471&amp;amp;originWidth=1491&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=146878&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u18c60de2-ee26-474a-a66a-bbc957fb9f8&amp;amp;title=&amp;amp;width=1192.8&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;防御命令执行的最高效的方法，就是过滤命令连接符（将这些符号替换成空，或判断用户输入这些符号就终止执行）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;命令连接符：|    ;    &amp;amp;    ||   &amp;amp;&amp;amp;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912138202-bf94ef8b-c625-4d4d-9864-a141deb80d44.png#averageHue=%23fefdfd&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=224&amp;amp;id=u745c3209&amp;amp;originHeight=280&amp;amp;originWidth=642&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=119521&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u6a87994c-5659-47cd-8fc0-f2c50cad52e&amp;amp;title=&amp;amp;width=513.6&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;medium 模式下的源码（只防御了部分的命令连接符）
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912220030-1922115a-f03d-41cd-9b57-cfcb1fa215d8.png#averageHue=%23fbf8f7&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=364&amp;amp;id=u0ca5897d&amp;amp;originHeight=455&amp;amp;originWidth=1545&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=207028&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ud6247598-d0ab-46ba-af45-ef7967c3be9&amp;amp;title=&amp;amp;width=1236&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;渗透测试解决方法：
&lt;ul&gt;
&lt;li&gt;白盒测试：可以看到源代码，查看源代码过滤机制&lt;/li&gt;
&lt;li&gt;黑盒测试：看不到源代码，依次尝试常见命令连接符&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;high 模式下的源码（开发人员出现编写代码时的错误，而产生漏洞）
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912405352-53f402c4-4af0-4ef4-a13c-c01a9b7d32c6.png#averageHue=%23fbfbfb&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=390&amp;amp;id=ua3ffcd00&amp;amp;originHeight=488&amp;amp;originWidth=1433&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=137823&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ua71526ef-403b-4ac9-9d2a-0a6c9c9368c&amp;amp;title=&amp;amp;width=1146.4&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;impossible 模式下的源码
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912419975-24423a2f-4134-4f7f-a575-31b7f8af7ec7.png#averageHue=%23fbfafa&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=358&amp;amp;id=u4156484c&amp;amp;originHeight=447&amp;amp;originWidth=1597&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=239447&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u4449c73b-4826-4607-82d2-a9e8a607c2d&amp;amp;title=&amp;amp;width=1277.6&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法原理：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912436544-03d3d5ef-f03e-4515-9b9d-d61588d3f6b9.png#averageHue=%23f5f0f0&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=290&amp;amp;id=ucd2d5ca2&amp;amp;originHeight=362&amp;amp;originWidth=1601&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=274607&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u968569c7-a72a-4ff2-85b6-b2f66169641&amp;amp;title=&amp;amp;width=1280.8&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;qh8LS&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sql注入漏洞详解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql注入漏洞详解&#34;&gt;#&lt;/a&gt; SQL 注入漏洞详解&lt;/h2&gt;
&lt;p&gt;SQL 注入（SQL injection），也称 SQL 注入或 SQL 注码，是发生于应用程序与数据库层的安全漏洞。是在输入的字符串之中注入 SQL 指令，在设计不良的程序当中忽略了字符检测，那么这些注入进去的恶意指令就会被数据库服务器误认为是正常的 SQL 指令而运行，因此遭到破坏或入侵。&lt;br /&gt;SQL：Structured Query Language 结构化查询语言（用于操控数据库的语言）&lt;br&gt;
&lt;a name=&#34;lRINt&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;sql-injection-low-怎么判断sql注入漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-injection-low-怎么判断sql注入漏洞&#34;&gt;#&lt;/a&gt; SQL injection low 怎么判断 SQL 注入漏洞&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;输入： &lt;code&gt;1&#39; and 1=1#&lt;/code&gt; :
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912698434-e3137fab-8dc2-4d58-8ae6-0a333822812a.png#averageHue=%23fefdfd&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=245&amp;amp;id=u942d925e&amp;amp;originHeight=306&amp;amp;originWidth=1039&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=157796&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u9a1bb75f-9e4c-4233-98dd-f165da3b5cb&amp;amp;title=&amp;amp;width=831.2&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;#：作用是注释（移除）后续 SQL 语句&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;输入： &lt;code&gt;1&#39; and 1=2#&lt;/code&gt; :
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912761818-15d103f6-f7d4-4a1a-8375-6bf66cae36a0.png#averageHue=%23fefafa&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=354&amp;amp;id=u9d8c1c74&amp;amp;originHeight=442&amp;amp;originWidth=1405&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=262076&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u8372db3f-5641-41d2-9658-31740117fad&amp;amp;title=&amp;amp;width=1124&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;两次尝试 1=1 正常输出，1=2 错误输出，证明 SQL 语句生效，存在 SQL 注入漏洞。&lt;br&gt;
&lt;a name=&#34;ldUkO&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sql-injection-怎么利用sql注入漏洞&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-injection-怎么利用sql注入漏洞&#34;&gt;#&lt;/a&gt; SQL injection ：怎么利用 SQL 注入漏洞&lt;/h3&gt;
&lt;p&gt;&lt;a name=&#34;K8VeP&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;一般步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一般步骤&#34;&gt;#&lt;/a&gt; 一般步骤：&lt;/h4&gt;
&lt;p&gt;1. 判断列 / 字段数： &lt;code&gt;order by [column_num]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912850579-805e2b70-1eb0-438e-a4e6-2366c739aa79.png#averageHue=%23fefafa&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=174&amp;amp;id=u85f1701b&amp;amp;originHeight=218&amp;amp;originWidth=1255&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=166105&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uc80bc74b-a1fc-487e-bee9-5008fe44072&amp;amp;title=&amp;amp;width=1004&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2. 联合查询其他信息： &lt;code&gt;union select [sql1],[sql2] &lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[sql1] 和 [sql2] 表示用户输入的 sql 语句&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912913846-fa130f86-674b-4ea6-bfe4-0b8f171481c4.png#averageHue=%23fefaf9&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=109&amp;amp;id=ud0fd2587&amp;amp;originHeight=136&amp;amp;originWidth=1486&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=95924&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u6a48b48a-c72f-4969-a5e4-8cb330828c9&amp;amp;title=&amp;amp;width=1188.8&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;用户输入 SQL 语句，执行了 MYSQL 内置函数 &lt;code&gt;user()&lt;/code&gt;  和 &lt;code&gt;database()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user()&lt;/code&gt; ：返回当前数据库连接用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;database()&lt;/code&gt; ：返回当前数据库名称&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3. 联合查询表： &lt;code&gt;union select table_name,table_schema from information_schema.tables where table_schema=&#39;[database_name]&#39;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913002078-d3d7d0f9-a36c-47ad-adcf-ab6af38152b7.png#averageHue=%23fef5f4&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=176&amp;amp;id=u37b8e149&amp;amp;originHeight=220&amp;amp;originWidth=1440&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=191664&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u84bb115c-175f-4658-8790-8159ba232d6&amp;amp;title=&amp;amp;width=1152&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;用户输入 SQL 语句，从 information_schema 数据库中查询 dvwa 数据库表&lt;/li&gt;
&lt;li&gt;information_schema 意思：信息提要&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4. 联合查询信息： &lt;code&gt;union [query_sql]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入： &lt;code&gt;1&#39; union select user,password from users#&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913061286-038df450-71d7-4b64-81f7-5d4e7daeab89.png#averageHue=%23fefbfb&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=176&amp;amp;id=uc6f0b4d6&amp;amp;originHeight=220&amp;amp;originWidth=1443&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=92825&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ufbff20c6-a409-405e-8964-e3c3fdb8071&amp;amp;title=&amp;amp;width=1154.4&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;JE9rC&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;sqlmap把复杂的利用过程自动化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap把复杂的利用过程自动化&#34;&gt;#&lt;/a&gt; SQLmap：把复杂的利用过程自动化&lt;/h4&gt;
&lt;p&gt;SQLmap 官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcWxtYXAub3JnLw==&#34;&gt;https://sqlmap.org/&lt;/span&gt;&lt;br&gt;
&lt;a name=&#34;fg86t&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;下载方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载方法&#34;&gt;#&lt;/a&gt; 下载方法：&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;1. 可下载源代码，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1weXRob25zcWxtYXAtb3Y4c3QwN3RsNXdjaDlmM3k2ZnFqMmEucHk=&#34;&gt;直接使用 python 运行 sqlmap.py&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;2. 安装 kali 操作系统，kali 自带 sqlmap，可以直接输入 sqlmap 执行&lt;br&gt;
&lt;a name=&#34;MqT4S&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;sqlmap自动化sql注入利用过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sqlmap自动化sql注入利用过程&#34;&gt;#&lt;/a&gt; SQLmap 自动化 SQL 注入利用过程：&lt;/h5&gt;
&lt;p&gt;第一步：检测漏洞&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913246574-b8252f4f-7c18-49ae-85bf-b600c8c7b2d0.png#averageHue=%23efeeee&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=93&amp;amp;id=u85979e94&amp;amp;originHeight=116&amp;amp;originWidth=1023&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=57628&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u306f2782-9631-49fd-8395-066a28ae2af&amp;amp;title=&amp;amp;width=818.4&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt; ：url 地址，即需要检测的网址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--cookie&lt;/code&gt; ：因为 DVWA 需要登录，可以在浏览器控制台里查看请求消息头中获取 cookie&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二步：获取数据库名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913298766-86a09a61-b7c7-48e5-8243-e8c9f0d28f89.png#averageHue=%23ededed&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=134&amp;amp;id=u8c54c997&amp;amp;originHeight=168&amp;amp;originWidth=1431&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=96114&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uf1a516c7-9518-47d0-a865-a180d3f86c8&amp;amp;title=&amp;amp;width=1144.8&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--dbs&lt;/code&gt; ：database server 获取所有数据库名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第三步：获取指定数据库表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913338885-16176e5d-4784-488f-84d5-f0da255df863.png#averageHue=%23eeeded&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=142&amp;amp;id=u01c3d715&amp;amp;originHeight=178&amp;amp;originWidth=1467&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=107683&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u3c4a7d04-2ae8-4591-8e0f-ceff97daca3&amp;amp;title=&amp;amp;width=1173.6&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D&lt;/code&gt; ：database 指定想要获取的数据库名为 dvwa&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--tables&lt;/code&gt; ：列出数据库表&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第四步：获取指定数据库列 / 表项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913370985-41138f96-27b1-4607-98c8-c94ff5eed969.png#averageHue=%23efeeee&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=159&amp;amp;id=ufdff0c8e&amp;amp;originHeight=199&amp;amp;originWidth=1425&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=117738&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ufd59255f-6cd9-46e5-ae93-969fa767788&amp;amp;title=&amp;amp;width=1140&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D&lt;/code&gt; ：Database 指定想要获取的数据库名为 dvwa&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T&lt;/code&gt; ：Table 指定想要获取的表名为 users&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--columns&lt;/code&gt; ：列出表项 / 列&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第五步：获取数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913403935-a5b3c5cb-b7ae-4529-87fc-e14cfa11f44e.png#averageHue=%23f0efef&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=165&amp;amp;id=u0fa7987a&amp;amp;originHeight=206&amp;amp;originWidth=1454&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=101641&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u73026e41-3a74-4e66-8941-27dd1769121&amp;amp;title=&amp;amp;width=1163.2&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--dump&lt;/code&gt; ：读取数据&lt;br&gt;
&lt;a name=&#34;cdP5b&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sql-injection防御&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql-injection防御&#34;&gt;#&lt;/a&gt; SQL injection 防御&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;防御命令执行的最高效的方法，就是过滤用户输入内容，不让输入 sql 语句&lt;/li&gt;
&lt;li&gt;将特殊符号替换成空，或判断用户输入 SQL 语句就终止执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQL injection medium 模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源码：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913610482-62126b6b-082d-47ec-9235-c7eecedfba05.png#averageHue=%23fcf9f9&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=342&amp;amp;id=ua93b86c1&amp;amp;originHeight=428&amp;amp;originWidth=1495&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=159901&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ua3c49c79-90b6-494a-82ae-8021e37bef8&amp;amp;title=&amp;amp;width=1196&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;防御：将单引号前加上反斜杠，使 SQL 语句错误，无法正常运行。
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913654040-cd3fbbcf-73f8-49f3-8647-d23b13189ace.png#averageHue=%23fef9f8&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=346&amp;amp;id=u57707307&amp;amp;originHeight=433&amp;amp;originWidth=1330&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=258411&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u08b25d92-4f27-4734-a0d0-36070eb307d&amp;amp;title=&amp;amp;width=1064&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解决办法：在输入的内容中避免特殊字符的存在
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913668239-e6cb0a72-d614-4be5-9750-749a10659b01.png#averageHue=%23fef6f5&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=259&amp;amp;id=ua1902dc4&amp;amp;originHeight=324&amp;amp;originWidth=1305&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=244182&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uf1b9e647-2016-4226-aaf4-257400b9f02&amp;amp;title=&amp;amp;width=1044&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQL injection high 模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源码：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913731256-7dad1e47-8914-428a-b7a1-ebe377481a9f.png#averageHue=%23fbf9f8&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=355&amp;amp;id=u6ba97c33&amp;amp;originHeight=444&amp;amp;originWidth=1449&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=181790&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u2136685f-4753-4268-90c3-207ecbc7799&amp;amp;title=&amp;amp;width=1159.2&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DVWA high 防御中缺少传入数据的过滤，无法防御输入漏洞。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQL injection impossible 模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源码：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913768030-96480cf8-e644-4d29-a1dc-65b5b47885ea.png#averageHue=%23faf7f6&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=418&amp;amp;id=ufdbafc59&amp;amp;originHeight=523&amp;amp;originWidth=1320&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=246724&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u8be9a8b6-a551-4b10-8ece-828c3e15376&amp;amp;title=&amp;amp;width=1056&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PDO：PHP Data Objects，配合正确的过滤和 SQL 语句能避免 SQL 注入。&lt;/li&gt;
&lt;li&gt;算法原理：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913787623-5d6f90aa-5b3c-4083-96d2-e2617e7cb570.png#averageHue=%23f8f3f3&amp;amp;clientId=u8bb3099b-8e0e-4&amp;amp;from=paste&amp;amp;height=310&amp;amp;id=u84637ea0&amp;amp;originHeight=387&amp;amp;originWidth=1273&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=207490&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u56b7e02e-569a-485d-b522-c94cd797e34&amp;amp;title=&amp;amp;width=1018.4&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;impossible 的三次整型验证加 PDO 预处理，完全解决了 SQL 主人隐患，其他后端语言也可实现相应算法。&lt;br&gt;
&lt;a name=&#34;hjmOW&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;文件上传漏洞详解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件上传漏洞详解&#34;&gt;#&lt;/a&gt; 文件上传漏洞详解&lt;/h2&gt;
&lt;p&gt;文件上传漏洞简介：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;顾名思义，文件上传就是客户端的文件上传到服务器的过程称为文件上传。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上传文件是很多网站都具有的功能，如果开发者没有对文件做严格的限制，就会导致安全隐患。&lt;br /&gt;后门文件简介：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;webshell：网站后门。webshell 就是以 asp、php、jsp 或者 cgi 等网页文件形式存在的一种命令执行环境，也可以将其称为一种网页后门。黑客在入侵了一个网站后，通常会将 asp 或 php 后门文件与网站服务器 WEB 目录下正常的网页文件混在一起，以达到控制网站服务器的目的。&lt;br&gt;
webshell 的分类：&lt;/li&gt;
&lt;li&gt;大马：
&lt;ul&gt;
&lt;li&gt;体积大、功能全&lt;/li&gt;
&lt;li&gt;会调用系统的关键函数&lt;/li&gt;
&lt;li&gt;以代码加密进行隐藏&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;小马：
&lt;ul&gt;
&lt;li&gt;体积小、功能少&lt;/li&gt;
&lt;li&gt;只有一个上传功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一句话木马：
&lt;ul&gt;
&lt;li&gt;代码短、只有一行代码&lt;/li&gt;
&lt;li&gt;使用场景大，可单独生成可插入文件&lt;/li&gt;
&lt;li&gt;安全性高，隐匿性强，可变形免杀&lt;/li&gt;
&lt;li&gt;框架不便，数据执行（数据传递）&lt;br&gt;
php 一句话木马:  &lt;code&gt;&amp;lt;?php @eval($_GET[ &#39;pass&#39; ]);?&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;php 的代码要写在里面，服务器才能认出来这是 php 代码，然后才去解析。&lt;/li&gt;
&lt;li&gt;@符号的意思是不报错，即使执行错误，也不报错。&lt;/li&gt;
&lt;li&gt;eval 将字符串当作 php 代码执行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;怎样上传网站后门：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670935533172-2f875fa9-883b-4787-b9b2-d63fc9cc686f.png#averageHue=%23f4f4f4&amp;amp;clientId=u509bc43d-d655-4&amp;amp;from=paste&amp;amp;height=173&amp;amp;id=u1906bcc9&amp;amp;originHeight=173&amp;amp;originWidth=1109&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=48740&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u9452c547-20eb-4a7b-8d51-3d6843bef4e&amp;amp;title=&amp;amp;width=1109&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;ybYKc&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;file-upload-low-找到文件上传到了哪里&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#file-upload-low-找到文件上传到了哪里&#34;&gt;#&lt;/a&gt; File Upload low 找到文件上传到了哪里&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在本地创建后门文件，并上传至服务器，得到上传地址。
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670937124429-efb86344-6bbe-4c2a-901b-14df9bbb9fe5.png#averageHue=%23fefbfb&amp;amp;clientId=u509bc43d-d655-4&amp;amp;from=paste&amp;amp;height=420&amp;amp;id=uedeab374&amp;amp;originHeight=420&amp;amp;originWidth=1398&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=235303&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ue8e5c18e-6be6-48c7-a840-4c6e66932fe&amp;amp;title=&amp;amp;width=1398&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;../&lt;/code&gt;  代表当前目录的上一级目录&lt;br&gt;
&lt;a name=&#34;yUl52&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;file-upload-low-上传之后怎么使用木马&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#file-upload-low-上传之后怎么使用木马&#34;&gt;#&lt;/a&gt; File Upload low 上传之后怎么使用木马&lt;/h3&gt;
&lt;p&gt;方法一：在浏览器安装 hackbar 插件，post data 里面输入： pass=[php 代码]&lt;br /&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670939339785-71d58a39-2b93-43e1-b8a7-6161b29122de.png#averageHue=%23fcfcfc&amp;amp;clientId=u509bc43d-d655-4&amp;amp;from=paste&amp;amp;height=511&amp;amp;id=u459e1237&amp;amp;originHeight=511&amp;amp;originWidth=1024&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=99233&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ubbe8a8f2-7c05-48de-9815-8ca5dd6eb59&amp;amp;title=&amp;amp;width=1024&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
 方法二：蚁剑自动管理 webshell 使用 webshell 管理工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Webshell 管理工具介绍 - 中国蚁剑（其中一款）：
&lt;ul&gt;
&lt;li&gt;中国蚁剑是一款开源的跨平台网站管理工具，它主要面向于合法授权的渗透测试安全人员以及进行常规操作的网站管理员。&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0FudFN3b3JkUHJvamVjdC9BbnRTd29yZC1Mb2FkZXI=&#34;&gt;https://github.com/AntSwordProject/AntSword-Loader&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第一步：右键添加数据
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670942468856-4bb4cb55-a11b-412a-9a32-ed25881e2ccb.png#averageHue=%23fcfcfc&amp;amp;clientId=u509bc43d-d655-4&amp;amp;from=paste&amp;amp;height=502&amp;amp;id=u271201e6&amp;amp;originHeight=502&amp;amp;originWidth=1214&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=118300&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uf9d95614-d87f-41ad-bbb9-d3fe16e09c5&amp;amp;title=&amp;amp;width=1214&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第二步：添加数据
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670942551634-ac04870c-feda-4a74-b006-a48fff31d8be.png#averageHue=%23fbfbfb&amp;amp;clientId=u509bc43d-d655-4&amp;amp;from=paste&amp;amp;height=535&amp;amp;id=u94c3902d&amp;amp;originHeight=535&amp;amp;originWidth=1461&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=180334&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ucd6c49fa-2e48-4eef-b3ec-c92f3bf0f96&amp;amp;title=&amp;amp;width=1461&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;url 地址即上传的后门地址&lt;/li&gt;
&lt;li&gt;连接密码即 webshell [] 包裹的字符串： &lt;code&gt;&amp;lt;?php @eval($_GET[ &#39;pass&#39; ]);?&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第三步：连接 webshell，控制网站
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670942789518-deea8745-f201-4cc7-8215-92b3fa504d11.png#averageHue=%23f5f5f5&amp;amp;clientId=u509bc43d-d655-4&amp;amp;from=paste&amp;amp;height=389&amp;amp;id=ue5a78863&amp;amp;originHeight=389&amp;amp;originWidth=833&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=60574&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ube8ee183-d57a-4360-865d-60844fb2f14&amp;amp;title=&amp;amp;width=833&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;uBS4f&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;file-upload-low-防御&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#file-upload-low-防御&#34;&gt;#&lt;/a&gt; File Upload low 防御&lt;/h3&gt;
&lt;p&gt;防御文件上传的方法各种各样：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;限制文件上传类型（不让上传 php 文件，只允许上传图片）&lt;/li&gt;
&lt;li&gt;给上传的文件重命名，让攻击者找不到自己传的文件在哪&lt;/li&gt;
&lt;li&gt;限制文件上传大小&lt;/li&gt;
&lt;li&gt;压缩上传文件&lt;/li&gt;
&lt;li&gt;把上传的文件存储在文件服务器或 oss 平台（没存在原本服务器，传了也没用）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;File Upload 防御 medium 模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源码：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670981323460-aa5c7eba-f1d0-4e18-b710-b18bd9f940fb.png#averageHue=%23f8f5f4&amp;amp;clientId=uc3be0a95-3a01-4&amp;amp;from=paste&amp;amp;height=429&amp;amp;id=uf2dd555d&amp;amp;originHeight=429&amp;amp;originWidth=1389&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=207732&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ub98368da-45d0-4d8f-abae-294ae3a9812&amp;amp;title=&amp;amp;width=1389&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;渗透测试解决办法：
&lt;ul&gt;
&lt;li&gt;通过抓包，修改 requests 请求消息中的文件类型。&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670981866148-fc83e698-eb04-4669-b354-c19583b73681.png#averageHue=%23f4f3f2&amp;amp;clientId=uc3be0a95-3a01-4&amp;amp;from=paste&amp;amp;height=701&amp;amp;id=u8b076108&amp;amp;originHeight=701&amp;amp;originWidth=590&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=190703&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ub854a7c6-c1ef-41d6-a5a1-61ee0f18b27&amp;amp;title=&amp;amp;width=590&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1670981887927-65b72e0b-9436-4223-a0ff-3f51e4862a2c.png#averageHue=%23fef3f2&amp;amp;clientId=uc3be0a95-3a01-4&amp;amp;from=paste&amp;amp;height=227&amp;amp;id=u282dbdcd&amp;amp;originHeight=227&amp;amp;originWidth=717&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=80419&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=ube4cfe79-ecf3-48cc-8d4a-159ec470406&amp;amp;title=&amp;amp;width=717&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;File Upload 防御 high&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源码：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1671259138281-65181d3b-1fc6-4a8d-bbc3-873cf5a96f69.png#averageHue=%23f7f3f2&amp;amp;clientId=u95d2833a-66a5-4&amp;amp;from=paste&amp;amp;height=362&amp;amp;id=u6eae5241&amp;amp;originHeight=453&amp;amp;originWidth=1538&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=336816&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u7c245715-7a3e-4a98-898e-313fb256de4&amp;amp;title=&amp;amp;width=1230.4&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;渗透测试解决方法：
&lt;ul&gt;
&lt;li&gt;用真实的图片做木马，并上传&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copy /b 1.jpg+webshell.php 2.jpg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1671259828240-59ed443f-a815-4039-973d-05a0d9705ef2.png#averageHue=%23151515&amp;amp;clientId=u95d2833a-66a5-4&amp;amp;from=paste&amp;amp;height=126&amp;amp;id=uc5eb1e84&amp;amp;originHeight=157&amp;amp;originWidth=839&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=36727&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u59bf3c67-eb9b-486e-aaa2-3e540a9f668&amp;amp;title=&amp;amp;width=671.2&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;上传 jpg 图片访问只会打开图片，不会解析 webshell&lt;/li&gt;
&lt;li&gt;解决方法之一：
&lt;ul&gt;
&lt;li&gt;利用 DVWA 的文件包含漏洞组合利用 [文件包含会把读取的文件当做 PHP 代码执行]&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1671260064903-cd0ed5ca-cc17-4ecb-957e-5d71ea3cbdf1.png#averageHue=%23f8f8f8&amp;amp;clientId=u95d2833a-66a5-4&amp;amp;from=paste&amp;amp;height=164&amp;amp;id=ua89585f3&amp;amp;originHeight=205&amp;amp;originWidth=1520&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=135352&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uf72e49a5-9054-42ba-be48-54a8d096098&amp;amp;title=&amp;amp;width=1216&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;蚁剑连接&lt;/li&gt;
&lt;li&gt;因 DVWA 需要登录，故要在请求信息中加入 Cookie 信息 [浏览器 F12 能看到]&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1671260375456-7aea5a40-76ae-4736-9891-a538a55b31dd.png#averageHue=%23f5f5f5&amp;amp;clientId=u95d2833a-66a5-4&amp;amp;from=paste&amp;amp;height=495&amp;amp;id=uaa450d5f&amp;amp;originHeight=619&amp;amp;originWidth=721&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=92934&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=uffa1b275-de48-4fd4-b441-7db9bba6d35&amp;amp;title=&amp;amp;width=576.8&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;File Upload 防御 impossible&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源码：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1671260448477-1b4364fc-baa9-4187-b0fe-d4eb4643c966.png#averageHue=%23fbf9f8&amp;amp;clientId=u95d2833a-66a5-4&amp;amp;from=paste&amp;amp;height=516&amp;amp;id=ue1148789&amp;amp;originHeight=645&amp;amp;originWidth=1400&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=347598&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u1a28de44-c55c-4378-8801-f441099f024&amp;amp;title=&amp;amp;width=1120&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;算法：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1671260569798-9e33e3aa-1a42-4a0b-86cb-72fcfbc1e308.png#averageHue=%23f8f8f8&amp;amp;clientId=u95d2833a-66a5-4&amp;amp;from=paste&amp;amp;height=302&amp;amp;id=u195eeb7a&amp;amp;originHeight=378&amp;amp;originWidth=1454&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=180317&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u6fcac296-ada6-4cea-9176-122a4c2b338&amp;amp;title=&amp;amp;width=1163.2&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;high 的过滤验证解决了上传不是图片的问题，impossible 更是让服务器重新生成图片，从根本上完全避免了图片马等其他变形后门。其他后端语言也可实现相应算法&lt;br&gt;
&lt;a name=&#34;FY0DX&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-常用的命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-常用的命令&#34;&gt;#&lt;/a&gt; 6、常用的命令&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;OkRcn&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;docker的基础命令-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#docker的基础命令-2&#34;&gt;#&lt;/a&gt; docker 的基础命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;启动 docker 服务： &lt;code&gt;systemctl start docker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重启 docker 服务： &lt;code&gt;systemctl restart docker&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;关闭 docker 服务： &lt;code&gt;docker service docker stop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;列出镜像： &lt;code&gt;docker images&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;列出容器： &lt;code&gt;docker ps -a / docker container ls -a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除镜像： &lt;code&gt;docker rmi [image_id]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除容器： &lt;code&gt;docker rm [container_id]&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;TtKzo&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用的cmd命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常用的cmd命令&#34;&gt;#&lt;/a&gt; 常用的 cmd 命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;whoami&lt;/code&gt;   查看当前用户名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipconfig&lt;/code&gt;   查看网卡信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shutdown -s -t 0 &lt;/code&gt;   关机（t 为时间 0 秒）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;net user [username] [password] /add &lt;/code&gt;  增加一个用户名为 username 密码为 password 的新用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type [file_name]&lt;/code&gt;   查看 filename 文件内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;bvqPI&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;7-metasploit框架&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7-metasploit框架&#34;&gt;#&lt;/a&gt; 7、metasploit 框架&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;qZ2C7&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;metasploit目录结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#metasploit目录结构&#34;&gt;#&lt;/a&gt; metasploit 目录结构&lt;/h2&gt;
&lt;p&gt;metasploit 框架介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MSF：metasploit Framework 的简称。metasploit Framework 高度模块化，即框架由多个 module 组成，居家旅行必备神器。&lt;/li&gt;
&lt;li&gt;是一款开源的安全漏洞利用和测试工具，集成了各种平台上常见的溢出漏洞和流行的 shellcode，并持续保持更新。&lt;/li&gt;
&lt;li&gt;metasploit 涵盖了渗透测试中全过程，你可以在这个框架下利用现有的 Payload 进行一系列的渗透测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;框架目录路径：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/opt/metasploit-framework/embedded/framework/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/share/metasploit-framework/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt; : 包含 metasploit 用于存储某些漏洞、单词列表、图像等所需二进制文件的可编辑文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;documentation&lt;/code&gt; ：包含框架的可用文档&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lib&lt;/code&gt; ：metasploit 的库文件夹&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plugins&lt;/code&gt; ：用来存放 metasploit 的插件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scripts&lt;/code&gt; ：用来存放 metasploit 的脚本，包含 meterpreter 及其他脚本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tools&lt;/code&gt; ：存放多种的命令行实用程序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;modules&lt;/code&gt; ：存储 metasploit 的模块文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;modules 目录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;auxiliary&lt;/code&gt; ：辅助模块，辅助渗透（端口扫描、登录密码爆破、漏洞验证等）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;exploits&lt;/code&gt; ：漏洞利用模块。包含主流的漏洞利用脚本，通常是对某些可能存在漏洞的目标进行漏洞利用。命名规则：操作系统 / 各种应用协议分类&lt;/li&gt;
&lt;li&gt;&lt;code&gt;payloads&lt;/code&gt; ：攻击载荷，主要是攻击成功后在目标机器执行代码，比如反弹 shell 的代码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;post&lt;/code&gt; ：后渗透阶段模块，漏洞利于成功获得 meterpreter 之后，向目标发送的一些功能性指令，如：提权等&lt;/li&gt;
&lt;li&gt;&lt;code&gt;encoders&lt;/code&gt; ：编码器模块，主要包括各种编码工具，对 payload 进行编码加密，以便绕过入侵检测和过滤系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;evasion&lt;/code&gt; ：躲避模块，用于生成免杀 payload&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nops&lt;/code&gt; ：由于 IDS/IPS 会检查数据包中不规则的数据，在某些情况下，比如针对溢出攻击，某些特殊滑行字符串（NOPS x90x90…）则会因为被拦截而导致攻击失败&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;metasploit 体系结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2022/png/34696645/1672024987244-b2eb2ce7-79dc-42a0-853b-514516ebf466.png#averageHue=%23141313&amp;amp;clientId=uf8ad0fd7-48da-4&amp;amp;from=paste&amp;amp;height=444&amp;amp;id=u0e628362&amp;amp;originHeight=444&amp;amp;originWidth=825&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=70863&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u9a20c8eb-60a6-4db5-8d5c-63f333c03e2&amp;amp;title=&amp;amp;width=825&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1、进入 metasploit：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;msfdb init&lt;/code&gt; ：初始化数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msfconsole&lt;/code&gt; ：启动&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db_status&lt;/code&gt; ：查看是否成功连接到数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;workspace&lt;/code&gt; ：当前工作区&lt;/li&gt;
&lt;li&gt;&lt;code&gt;workspace -h&lt;/code&gt; ：帮助命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2、信息收集，内网主机发现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;db_nmap&lt;/code&gt; ：nmap 扫描&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-PA&lt;/code&gt; ：TCP ACK PING 扫描&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-PR&lt;/code&gt; ：ARP 扫描时 nmap 对目标进行一个 arp ping 扫描的过程，尤其是在内网情况下。因为防火墙不会禁止 ARP 请求&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hosts&lt;/code&gt; ：当前工作区所有主机&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3、端口、服务、版本探测&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;db_nmap&lt;/code&gt; ：nmap 扫描&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-T[0-5]&lt;/code&gt; ：默认为 T3，T4 表示最大 TCP 扫描延迟是 10ms&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sS&lt;/code&gt; ：TCP STN 扫描&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sA&lt;/code&gt; ：TCP ACK 扫描&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-sY&lt;/code&gt; ：TCP SYN 扫描&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-A&lt;/code&gt; ：打开操作系统探测和版本探测&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note2/</guid>
            <title>Git基础</title>
            <link>https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note2/</link>
            <category>note</category>
            <pubDate>Mon, 10 Jul 2023 10:29:05 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;a name=&#34;CjBTs&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;git的安装和初始化配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git的安装和初始化配置&#34;&gt;#&lt;/a&gt; git 的安装和初始化配置&lt;/h1&gt;
&lt;p&gt;git 官网&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXQtc2NtLmNvbS8=&#34;&gt; https://git-scm.com/&lt;/span&gt;&lt;br /&gt;安装完成后打开终端，输入： &lt;code&gt;git -v&lt;/code&gt;  查看版本。&lt;br&gt;
&lt;a name=&#34;oyPlk&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;git的使用方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git的使用方式&#34;&gt;#&lt;/a&gt; Git 的使用方式：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;命令行&lt;/li&gt;
&lt;li&gt;图形化界面（GUI）&lt;/li&gt;
&lt;li&gt;IDE 插件 / 拓展&lt;br&gt;
&lt;a name=&#34;XcQQM&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;使用git之前配置用户名和邮箱&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用git之前配置用户名和邮箱&#34;&gt;#&lt;/a&gt; 使用 git 之前配置用户名和邮箱：&lt;/h3&gt;
&lt;p&gt;配置用户名 &lt;code&gt;git config --global user.name &amp;quot;Jaser yng&amp;quot;&lt;/code&gt; &lt;br /&gt;配置邮箱 &lt;code&gt;git config --global user.email xxxxx@gmail.com&lt;/code&gt; &lt;br /&gt; &lt;code&gt;--local&lt;/code&gt; ：本地配置，只对本地仓库有效&lt;br /&gt; &lt;code&gt;--global&lt;/code&gt; ：全局配置，所有仓库生效&lt;br /&gt; &lt;code&gt;--system&lt;/code&gt; ：系统配置，对所有用户生效&lt;br /&gt;用户名中有空格需使用双引号 &lt;code&gt;&amp;quot;Jasper yang&amp;quot;&lt;/code&gt; ，没有空格不需要双引号&lt;br /&gt;保存用户名和密码：&lt;br /&gt; &lt;code&gt;git config --global credential.helper store&lt;/code&gt; &lt;br /&gt;查看配置信息：&lt;br /&gt; &lt;code&gt;git config --global --list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;cotkD&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;新建仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#新建仓库&#34;&gt;#&lt;/a&gt; 新建仓库&lt;/h1&gt;
&lt;p&gt;创建仓库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方式一： &lt;code&gt;git init 文件名&lt;/code&gt; 在本地建立一个 git 仓库&lt;/li&gt;
&lt;li&gt;方式二： &lt;code&gt;git clone 仓库地址&lt;/code&gt; 克隆远程仓库&lt;br&gt;
&lt;a name=&#34;N2itX&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;工作区域和文件状态&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#工作区域和文件状态&#34;&gt;#&lt;/a&gt; 工作区域和文件状态&lt;/h1&gt;
&lt;p&gt;本地数据管理区域：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工作区（Working Directory）实际操作的目录&lt;/li&gt;
&lt;li&gt;暂存区（Staging Area/Index）临时保存区域，用于保存即将要提交到 git 仓库的修改内容&lt;/li&gt;
&lt;li&gt;本地仓库（Local Repository）git 存储代码和版本信息的主要位置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64ab6c8f5b581.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;wdLTP&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;添加和提交文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#添加和提交文件&#34;&gt;#&lt;/a&gt; 添加和提交文件&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;git init&lt;/code&gt;  创建仓库&lt;br /&gt; &lt;code&gt;git status&lt;/code&gt;  查看仓库的状态&lt;br /&gt; &lt;code&gt;git add&lt;/code&gt;  添加到暂存区 &lt;br /&gt; &lt;code&gt;git add *.txt&lt;/code&gt;  使用通配符，把 &lt;code&gt;.txt&lt;/code&gt;  文件全部添加到暂存区&lt;br /&gt; &lt;code&gt;git add .&lt;/code&gt;  使用目录，把当前文件夹下的所有文件添加到暂存区&lt;br /&gt; &lt;code&gt;git commit&lt;/code&gt;  提交到仓库，只能提交暂存区中的内容，不会提交工作区的内容&lt;br /&gt; &lt;code&gt;git commit -m&lt;/code&gt;  不会进入交互界面，直接提交&lt;br /&gt; &lt;code&gt;git log&lt;/code&gt;  查看提交历史记录&lt;br /&gt; &lt;code&gt;git log --oneline&lt;/code&gt;  查看简洁的提交记录&lt;br&gt;
&lt;a name=&#34;rqAwZ&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;回退版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#回退版本&#34;&gt;#&lt;/a&gt; 回退版本&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;git reset&lt;/code&gt;  用于回退版本&lt;br /&gt; &lt;code&gt;git reset --soft&lt;/code&gt;  表示回退到某一版本，并且保留工作区和暂存区的所有修改内容&lt;br /&gt; &lt;code&gt;git reset --hard&lt;/code&gt;  表示回退到某一版本，并且丢弃工作区和暂存区的所有修改内容&lt;br /&gt; &lt;code&gt;git reset --mixed&lt;/code&gt;  表示回退到某一版本，只保留工作区的修改内容，而丢弃暂存区的修改内容&lt;br /&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64ab6ca31b310.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;bOyBi&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;git-diff&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-diff&#34;&gt;#&lt;/a&gt;  &lt;code&gt;git diff&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;查看工作区、暂存区、本地仓库之间的差异&lt;br /&gt;  &lt;code&gt;git diff&lt;/code&gt;  默认比较工作区和暂存区的差异内容，会显示发生更改的文件以及更改的详细信息。&lt;br /&gt; &lt;code&gt;git diff HEAD&lt;/code&gt;  比较工作区与本地仓库之间的差异。&lt;br /&gt; &lt;code&gt;git diff --cached&lt;/code&gt;  比较暂存区与本地仓库之间的差异。&lt;br /&gt; &lt;code&gt;git diff --staged&lt;/code&gt;  比较暂存区与本地仓库之间的差异。&lt;br /&gt; &lt;code&gt;git diff 版本提交ID1 版本提交ID2&lt;/code&gt;  后面加上两次版本的提交 ID 就可以比较两个版本之间的差异内容。&lt;br /&gt; &lt;code&gt;git diff HEAD~ HEAD&lt;/code&gt;  比较当前版本和上一个版本之间的差异&lt;br /&gt; &lt;code&gt;git diff HEAD^ HEAD&lt;/code&gt;  比较当前版本和上一个版本之间的差异&lt;br /&gt; &lt;code&gt;git diff HEAD~2 HEAD&lt;/code&gt;  比较当前版本和提交前的两个版本之间的差异&lt;br /&gt; &lt;code&gt;git diff HEAD~2 HEAD file3.txt&lt;/code&gt;  只会查看 file3 的差异内容&lt;br /&gt; &lt;code&gt;git diff &amp;lt;branch_name&amp;gt; &amp;lt;branch_name&amp;gt;&lt;/code&gt;  比较分支之间的差异&lt;br&gt;
&lt;a name=&#34;GxVQB&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;如何从版本库中删除文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何从版本库中删除文件&#34;&gt;#&lt;/a&gt; 如何从版本库中删除文件&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;rm file;git add file&lt;/code&gt;  先从工作区删除文件，然后再从暂存区删除内容&lt;br /&gt; &lt;code&gt;git rm &amp;lt;file&amp;gt;&lt;/code&gt;  本文件从工作区和暂存区同时删除&lt;br /&gt; &lt;code&gt;git rm --cached &amp;lt;file&amp;gt;&lt;/code&gt;  把文件从暂存区删除，但是保留在当前工作区中&lt;br /&gt; &lt;code&gt;git rm -r*&lt;/code&gt;  递归删除某个目录下的所有子目录和文件，删除后不要忘记提交。&lt;br&gt;
&lt;a name=&#34;JPKgr&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;gitignore忽略文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gitignore忽略文件&#34;&gt;#&lt;/a&gt;  &lt;code&gt;.gitignore&lt;/code&gt;  忽略文件&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;Sl9Mg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;应该忽略那些文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#应该忽略那些文件&#34;&gt;#&lt;/a&gt; 应该忽略那些文件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;系统或者软件自动生成的文件&lt;/li&gt;
&lt;li&gt;编译产生的中间文件和结果文件&lt;/li&gt;
&lt;li&gt;运行时生成日志文件、缓存文件、临时文件&lt;/li&gt;
&lt;li&gt;涉及身份、密码、口令、密钥等敏感信息文件&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;忽略日志文件和文件夹&lt;/li&gt;
&lt;li&gt;忽略所有 &lt;code&gt;.class&lt;/code&gt;  文件&lt;/li&gt;
&lt;li&gt;忽略所有 &lt;code&gt;.o&lt;/code&gt;  文件&lt;/li&gt;
&lt;li&gt;忽略所有 &lt;code&gt;.env&lt;/code&gt;  文件&lt;/li&gt;
&lt;li&gt;忽略所有 &lt;code&gt;.zip&lt;/code&gt;  和 &lt;code&gt;tar&lt;/code&gt;  文件&lt;/li&gt;
&lt;li&gt;忽略所有 &lt;code&gt;.pem&lt;/code&gt;  文件&lt;/li&gt;
&lt;li&gt;……&lt;br&gt;
&lt;a name=&#34;Jpuij&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gitignore文件的匹配规则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gitignore文件的匹配规则&#34;&gt;#&lt;/a&gt;  &lt;code&gt;.gitignore&lt;/code&gt;  文件的匹配规则&lt;/h2&gt;
&lt;p&gt;从上到下逐行匹配，每一行表示一个忽略模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空行或者以 &lt;code&gt;#&lt;/code&gt; 开头的行会被 Git 忽略。一般空行用于可读性的分隔， &lt;code&gt;#&lt;/code&gt; 一般用作注释&lt;/li&gt;
&lt;li&gt;使用标准的 Blob 模式匹配，例如
&lt;ul&gt;
&lt;li&gt;星号 &lt;code&gt;*&lt;/code&gt;  通配任意个字符&lt;/li&gt;
&lt;li&gt;问号 &lt;code&gt;?&lt;/code&gt;  匹配单个字符&lt;/li&gt;
&lt;li&gt;中括号 &lt;code&gt;[]&lt;/code&gt;  表示匹配列表中的单个字符，比如： &lt;code&gt;[abc]&lt;/code&gt;  表示 &lt;code&gt;a/b/c&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;两个星号 &lt;code&gt;**&lt;/code&gt;  表示匹配任意的中间目录&lt;/li&gt;
&lt;li&gt;中括号可以使用短中线链接，比如：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[0-9]&lt;/code&gt;  表示任意一位数字， &lt;code&gt;[a-z]&lt;/code&gt;  表示任意一位小写字母&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;感叹号 &lt;code&gt;!&lt;/code&gt;  表示取反&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 忽略所有的 .a 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*.a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 但跟踪所有的 lib.a,即使你在前面忽略了 .a 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;!lib.a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 只忽略当前目录下的 TODO文件，而不忽略 subdir/TODO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/TODO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 忽略任何目录下名为 build 的文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;build/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 忽略 doc/notes.txt,但不忽略 doc/server/arch.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;doc/*.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 忽略 doc/ 目录及其所有子目录下的 .pdf 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;doc/**/*.pdf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a name=&#34;PHIG9&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;注册github账号&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注册github账号&#34;&gt;#&lt;/a&gt; 注册 Github 账号&lt;/h1&gt;
&lt;p&gt;网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tLw==&#34;&gt;https://github.com/&lt;/span&gt;&lt;br&gt;
&lt;a name=&#34;fyomH&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;ssh配置和克隆仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssh配置和克隆仓库&#34;&gt;#&lt;/a&gt; SSH 配置和克隆仓库&lt;/h1&gt;
&lt;p&gt;生成 SSH Key： &lt;code&gt;ssh-keygen -t rsa -b 4096&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;私钥文件： &lt;code&gt;id_rsa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;公钥文件： &lt;code&gt;id_rsa.pub&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;克隆仓库： &lt;code&gt;git clone repo-address&lt;/code&gt; &lt;br /&gt;推送更新内容： &lt;code&gt;git push &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; &lt;br /&gt;拉取更新内容： &lt;code&gt;git pull &amp;lt;remote&amp;gt;&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;TIkP5&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;关联本地仓库和远程仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关联本地仓库和远程仓库&#34;&gt;#&lt;/a&gt; 关联本地仓库和远程仓库&lt;/h1&gt;
&lt;p&gt;添加远程仓库：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git remote add &amp;lt;远程仓库别名&amp;gt; &amp;lt;远程仓库地址&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push -u &amp;lt;远程仓库名&amp;gt; &amp;lt;分支名&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;查看远程仓库： &lt;code&gt;git remote -v&lt;/code&gt; &lt;br /&gt;拉取远程仓库内容： &lt;code&gt;git pull &amp;lt;远程仓库名&amp;gt; &amp;lt;远程分支名&amp;gt;:&amp;lt;本地分支名&amp;gt;&lt;/code&gt;  相同可省略冒号后面部分&lt;br&gt;
&lt;a name=&#34;ZbNtQ&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;gitee的使用和gitlab本地化部署&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gitee的使用和gitlab本地化部署&#34;&gt;#&lt;/a&gt; Gitee 的使用和 GitLab 本地化部署&lt;/h1&gt;
&lt;p&gt;Gitee：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRlZS5jb20v&#34;&gt;https://gitee.com/&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特色：国内平台&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GitLab：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hYm91dC5naXRsYWIuY29tLw==&#34;&gt;https://about.gitlab.com/&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特色：私有化部署&lt;br&gt;
&lt;a name=&#34;bWkzf&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;gui工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gui工具&#34;&gt;#&lt;/a&gt; GUI 工具&lt;/h1&gt;
&lt;p&gt;Github Desktop：功能单一只能管理 GitHub 上的仓库。&lt;br /&gt;Sourcetree：支持 Windows 和 mac 操作系统&lt;br&gt;
&lt;a name=&#34;iytA8&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;vscode中使用git&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vscode中使用git&#34;&gt;#&lt;/a&gt; VScode 中使用 Git&lt;/h1&gt;
&lt;p&gt;布局：菜单栏、侧边栏、编辑区、终端区&lt;br /&gt;打开命令面板： &lt;code&gt;Ctrl + Shift + ``/&lt;/code&gt; Command + Shift +  &lt;code&gt;&amp;lt;br /&amp;gt;配置文件：`settings.json`&amp;lt;br /&amp;gt;打开终端：`Ctrl + Shift + &lt;/code&gt; &lt;br /&gt;插件和扩展：在侧边栏中的扩展界面中搜索和安装&lt;br /&gt;Git 操作：在侧边栏中的源码管理器 UI 界面中操作&lt;br&gt;
&lt;a name=&#34;wsui8&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;分支简介和基本操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分支简介和基本操作&#34;&gt;#&lt;/a&gt; 分支简介和基本操作&lt;/h1&gt;
&lt;p&gt;查看分支列表： &lt;code&gt;git branch&lt;/code&gt; &lt;br /&gt;创建分支： &lt;code&gt;git branch branch-name&lt;/code&gt; &lt;br /&gt;切换分支：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git checkout branch-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git switch branch-name&lt;/code&gt;  (推荐)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;合并分支： &lt;code&gt;git merge branch-name&lt;/code&gt; &lt;br /&gt;删除分支：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git branch -d branch-name&lt;/code&gt;  删除已合并分支&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -D branch-name&lt;/code&gt;  删除未合并分支&lt;br&gt;
&lt;a name=&#34;E9Jys&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;解决合并冲突&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决合并冲突&#34;&gt;#&lt;/a&gt; 解决合并冲突&lt;/h1&gt;
&lt;p&gt;两个分支未修改同一个文件的同一处位置：Git 自动合并&lt;br /&gt;两个分支修改了同一个文件的同一处位置：产生冲突&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决方法：
&lt;ul&gt;
&lt;li&gt;1. 手工修改冲突文件&lt;/li&gt;
&lt;li&gt;2. 添加暂存区 &lt;code&gt;git add file&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;3. 提交修改 &lt;code&gt;git commit -m &amp;quot;message&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;中止合并：当不想继续执行合并操作时可以使用下面的命令来中止合并过程： &lt;code&gt;git merge --abort&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;IqiOt&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;回退和rebase&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#回退和rebase&#34;&gt;#&lt;/a&gt; 回退和 &lt;code&gt;rebase&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Merge&lt;/code&gt; ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：不会破坏原分支的提交历史，方便回溯和查看&lt;/li&gt;
&lt;li&gt;缺点：会产生额外的提交节点，分支图比较复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Rebase&lt;/code&gt; ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：不会新增额外的提交记录，形成线性历史，比较直观和干净&lt;/li&gt;
&lt;li&gt;缺点：会改变提交历史，改变了当前分支 &lt;code&gt;branch out&lt;/code&gt;  的节点。&lt;/li&gt;
&lt;li&gt;避免在共享分支时使用，一般不会在公共分支上使用&lt;br&gt;
&lt;a name=&#34;XUjYi&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;分支管理和工作流模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分支管理和工作流模型&#34;&gt;#&lt;/a&gt; 分支管理和工作流模型&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;main&lt;/code&gt;  主线 / 基线分支&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只接受来自 &lt;code&gt;hotfix&lt;/code&gt;  和 &lt;code&gt;release&lt;/code&gt;  的合并请求&lt;/li&gt;
&lt;li&gt;不允许直接 &lt;code&gt;push&lt;/code&gt;  修改&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;hotfix&lt;/code&gt;  线上版本 bug 热修复分支&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于解决线上问题，修复完后合并回 &lt;code&gt;main&lt;/code&gt;  分支&lt;/li&gt;
&lt;li&gt;命名规则： &lt;code&gt;hotfix-#issueid-desc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;release&lt;/code&gt;  版本发布分支&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;永久分支，用于发布前的测试和验证&lt;br&gt;
&lt;a name=&#34;vg0lS&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分支命名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分支命名&#34;&gt;#&lt;/a&gt; 分支命名：&lt;/h2&gt;
&lt;p&gt;推荐使用带有意义的描述性名称来命名分支&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;版本发布分支 / Tag 示例： &lt;code&gt;v1.0.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;功能分支示例： &lt;code&gt;feature-login-page&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修复分支示例： &lt;code&gt;hotfix-#issueid-desc&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;Bjx9K&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分支管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分支管理&#34;&gt;#&lt;/a&gt; 分支管理：&lt;/h2&gt;
&lt;p&gt;定期合并已经成功验证的分支，及时删除已经合并的分支&lt;br /&gt;保持合适的分支数量&lt;br /&gt;为分支设置合适的管理权限&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fairyxxx.github.io/2023/07/08/Fairyxxx.Favorites.note1/</guid>
            <title>相关知识</title>
            <link>https://fairyxxx.github.io/2023/07/08/Fairyxxx.Favorites.note1/</link>
            <category>note</category>
            <pubDate>Sat, 08 Jul 2023 15:44:08 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;a name=&#34;WIMOT&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;1-计算机网络概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-计算机网络概述&#34;&gt;#&lt;/a&gt; 1、计算机网络概述&lt;/h1&gt;
&lt;p&gt;1. 计算机网络的定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;计算机网络是一组自治计算机互连的集合&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2. 计算机网络的基本功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源共享&lt;/li&gt;
&lt;li&gt;分布式处理与负载均衡&lt;/li&gt;
&lt;li&gt;综合信息服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3. 计算机网络的类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;局域网：LAN（Local Area Network）
&lt;ul&gt;
&lt;li&gt;通常指几千米内的，可以通过某种介质互联的计算机、打印机、modem 或其他设备的集合&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;城域网：MAN（Metropolitan Area Network）
&lt;ul&gt;
&lt;li&gt;MAN 覆盖范围为中等规模，介于局域网和广域网之间，通常是在一个城市内的网络连接（距离为 10KM 左右）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;广域网：WAN（Wide Area Network）
&lt;ul&gt;
&lt;li&gt;分布距离远，它通过各种类型的串行连接以便在更大的地理区域内实现接入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络的拓扑结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90be913b3c.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;电路交换：基于电话网的电路交换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：延迟小、透明传输&lt;/li&gt;
&lt;li&gt;缺点：带宽固定，网络资源利用率低，初始连接建立慢&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分组交换：以分组为单位存储转发&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：多路复用，网路资源利用率高&lt;/li&gt;
&lt;li&gt;缺点：延迟大，实时性差，设备功能复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4. 衡量计算机网络的主要指标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;带宽（bandwidth）
&lt;ul&gt;
&lt;li&gt;描述在一定时间范围内能够从一个节点传送到另一个节点的数据量&lt;/li&gt;
&lt;li&gt;通常以 bps 为单位&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;延迟（delay）
&lt;ul&gt;
&lt;li&gt;描述网络上数据从一个节点传送到另一个节点所经历的时间&lt;br&gt;
&lt;a name=&#34;DTkzY&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-osi参考模型与tcpip模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-osi参考模型与tcpip模型&#34;&gt;#&lt;/a&gt; 2、OSI 参考模型与 TCP/IP 模型&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;BSAWh&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;osi参考模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#osi参考模型&#34;&gt;#&lt;/a&gt; OSI 参考模型：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OSI 参考模型定义了网络中设备所遵守的层次结构&lt;/li&gt;
&lt;li&gt;分层结构的优点：
&lt;ul&gt;
&lt;li&gt;开放的标准化接口&lt;/li&gt;
&lt;li&gt;多厂商兼容性&lt;/li&gt;
&lt;li&gt;易于理解、学习和更新协议标准&lt;/li&gt;
&lt;li&gt;实现模块化工程，降低了开发实现的复杂度&lt;/li&gt;
&lt;li&gt;便于故障排除&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;OSI 参考模型层次结构：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90c1f9dbc2.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对等通信：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90c5493e75.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;每一层都使用自己的协议&lt;/li&gt;
&lt;li&gt;每一层都利用下层提供的服务与对等层通信&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据封装与数据解封：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90c726c0af.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
 物理层：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;物理层：定义电压、接口、线缆标准、传输距离等&lt;/li&gt;
&lt;li&gt;物理层介质：
&lt;ul&gt;
&lt;li&gt;同轴电缆（coaxial cable）：细缆和粗缆&lt;/li&gt;
&lt;li&gt;双绞线（fiber）：单模、多模&lt;/li&gt;
&lt;li&gt;无线（wireless）：红外线、蓝牙、Blue Tooth、WLAN 技术&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;典型物理层标准和设备：
&lt;ul&gt;
&lt;li&gt;物理层介质：
&lt;ul&gt;
&lt;li&gt;双绞线、同轴电缆、光纤、无线电信号等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;局域网物理层：
&lt;ul&gt;
&lt;li&gt;常见标准：10Base-TX/FX、1000Base-T、1000Base-SX/LX&lt;/li&gt;
&lt;li&gt;常见设备：中继器、集线器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;广域网物理层：
&lt;ul&gt;
&lt;li&gt;常见标准：RS-232、V.24、V.35&lt;/li&gt;
&lt;li&gt;常见设备：Modem（调制解调器）&lt;br&gt;
数据链路层&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据链路层的功能：
&lt;ul&gt;
&lt;li&gt;编帧和识别帧&lt;/li&gt;
&lt;li&gt;数据链路的建立、维持和释放&lt;/li&gt;
&lt;li&gt;传输资源控制&lt;/li&gt;
&lt;li&gt;流量控制&lt;/li&gt;
&lt;li&gt;差错验证&lt;/li&gt;
&lt;li&gt;寻址&lt;/li&gt;
&lt;li&gt;识别上层数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;局域网数据链路层分为 LLC 子层和 MAC 子层&lt;/li&gt;
&lt;li&gt;典型数据链路层标准：
&lt;ul&gt;
&lt;li&gt;局域网数据链路层标准：
&lt;ul&gt;
&lt;li&gt;IEEE802.1 基本局域网问题&lt;/li&gt;
&lt;li&gt;IEEE802.2 定义 LLC 子层&lt;/li&gt;
&lt;li&gt;IEEE802.3 以太网标准&lt;/li&gt;
&lt;li&gt;IEEE802.4 令牌总线&lt;/li&gt;
&lt;li&gt;IEEE802.5 令牌环网&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;广域网数据链路层标准：
&lt;ul&gt;
&lt;li&gt;HDLC&lt;/li&gt;
&lt;li&gt;PPP&lt;/li&gt;
&lt;li&gt;Frame Relay&lt;br&gt;
 网络层&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;功能
&lt;ul&gt;
&lt;li&gt;编址&lt;/li&gt;
&lt;li&gt;路由&lt;/li&gt;
&lt;li&gt;拥塞控制&lt;/li&gt;
&lt;li&gt;异种网络互连&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;网络层地址
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90c8d66ba9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;网络层地址通常由两部分组成
&lt;ul&gt;
&lt;li&gt;网络地址&lt;/li&gt;
&lt;li&gt;主机地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;网络层地址是全局唯一的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;路由协议与可路由协议：
&lt;ul&gt;
&lt;li&gt;可路由协议（routed protocol）：定义数据包内各个字段的格式和用途，对数据进行网络层封装&lt;/li&gt;
&lt;li&gt;路由协议（routing protocol）：在路由器之间传递信息，计算路由并形成路由表，为可路由协议选择路径&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90cb386770.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;面向连接和无连接的服务
&lt;ul&gt;
&lt;li&gt;面向连接的服务：
&lt;ul&gt;
&lt;li&gt;通信之前先建立连接，通信完成后断开连接&lt;/li&gt;
&lt;li&gt;有序传递&lt;/li&gt;
&lt;li&gt;应答确认&lt;/li&gt;
&lt;li&gt;差错重传&lt;/li&gt;
&lt;li&gt;适合于对可靠性要求高的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;无连接的服务
&lt;ul&gt;
&lt;li&gt;尽力而为的服务&lt;/li&gt;
&lt;li&gt;无需建立连接&lt;/li&gt;
&lt;li&gt;无序列号机制，无确认机制，无重传机制&lt;/li&gt;
&lt;li&gt;适合于对延迟敏感的应用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;网络层协议操作:
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90cc7d0c13.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
 传输层&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;传输层功能：
&lt;ul&gt;
&lt;li&gt;分段上层数据&lt;/li&gt;
&lt;li&gt;建立端到端连接&lt;/li&gt;
&lt;li&gt;透明、可靠传输&lt;/li&gt;
&lt;li&gt;流量控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;传输层协议：
&lt;ul&gt;
&lt;li&gt;主要有 TCP/IP 协议族的 TCP 协议和 UDP 协议，以及 IPX/SPX 协议组的 SPX 协议等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;会话层协议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主机间通信&lt;/li&gt;
&lt;li&gt;建立、维护、终结应用程序之间的会话&lt;/li&gt;
&lt;li&gt;SQL、NFS、RPC 等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表示层协议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义数据格式与结构&lt;/li&gt;
&lt;li&gt;协商上层数据格式&lt;/li&gt;
&lt;li&gt;ASCII、MPEG、JPEG 等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应用层协议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为应用程序进程（比如文字处理、邮件、电子表格）提供网络服务&lt;/li&gt;
&lt;li&gt;文字处理、邮件、电子表格等&lt;br&gt;
&lt;a name=&#34;WkhCL&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tcpip模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcpip模型&#34;&gt;#&lt;/a&gt; TCP/IP 模型&lt;/h2&gt;
&lt;p&gt;TCP/IP 模型的层次结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90cde16303.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
 网络层&lt;/li&gt;
&lt;li&gt;负责将数据包送达正确的目的
&lt;ul&gt;
&lt;li&gt;数据包的路由&lt;/li&gt;
&lt;li&gt;路由的维护&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;主要协议：
&lt;ul&gt;
&lt;li&gt;IP&lt;/li&gt;
&lt;li&gt;ICMP&lt;/li&gt;
&lt;li&gt;IGMP&lt;br&gt;
 传输层&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;负责提供端到端通信
&lt;ul&gt;
&lt;li&gt;数据完整性校验&lt;/li&gt;
&lt;li&gt;差错重传&lt;/li&gt;
&lt;li&gt;数据的重新排序&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;主要协议：
&lt;ul&gt;
&lt;li&gt;TCP&lt;/li&gt;
&lt;li&gt;UDP&lt;br&gt;
 应用层&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;负责处理特定的应用程序细节
&lt;ul&gt;
&lt;li&gt;远程访问&lt;/li&gt;
&lt;li&gt;资源共享&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;主要协议
&lt;ul&gt;
&lt;li&gt;Telnet&lt;/li&gt;
&lt;li&gt;FTP/TFTP&lt;/li&gt;
&lt;li&gt;SMTP/POP3&lt;/li&gt;
&lt;li&gt;SNMP/HTTP&lt;br&gt;
 网络接口层&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;负责处理与传输介质相关的细节
&lt;ul&gt;
&lt;li&gt;物理线路和接口&lt;/li&gt;
&lt;li&gt;链路层通信&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;主要协议：
&lt;ul&gt;
&lt;li&gt;以太网 / FDDI / 令牌环&lt;/li&gt;
&lt;li&gt;SLIP/HDLC/PPP&lt;/li&gt;
&lt;li&gt;X.25 / 帧中继 / ATM&lt;br&gt;
&lt;a name=&#34;CHvmR&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-局域网基本原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-局域网基本原理&#34;&gt;#&lt;/a&gt; 3、局域网基本原理&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;gbNsx&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;局域网概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#局域网概述&#34;&gt;#&lt;/a&gt; 局域网概述&lt;/h2&gt;
&lt;p&gt;局域网与 OSI 参考模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90cf037627.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要局域网技术：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90d0057ab7.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;l34pk&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;以太网技术基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#以太网技术基础&#34;&gt;#&lt;/a&gt; 以太网技术基础&lt;/h2&gt;
&lt;p&gt;早期以太网技术介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90d1219b1f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以太网集线器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90d2125de3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;集线器（hub）与主机构成物理星型拓扑&lt;/li&gt;
&lt;li&gt;集线器内部采用总线结构，任意时间只有一台主机能占用总线&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MDI/MDIX：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90d326eb65.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;同类接口互连用交叉线，异类接口互连用直连线&lt;/li&gt;
&lt;li&gt;H3C 以太网交换机支持 MDI/MDIX 自适应，不必考虑连线类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10BASE-T 线缆和接口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90d43bbcfa.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CSMA/CD 载波侦听：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90d55d2bf4.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CSMA/CD 冲突检测和退避：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90d64b0167.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MAC 地址：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90d76056e0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;MAC 地址为 48 位二进制数，常用 12 位 16 进制数表示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单播与广播：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90d86e7695.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;接收地址包括本卡 MAC 地址、广播地址和本机所属组播组地址&lt;/li&gt;
&lt;li&gt;网卡丢弃与本卡接收地址不匹配的帧&lt;/li&gt;
&lt;li&gt;网卡解开与本卡接收地址匹配的帧，将数据递交上层处理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以太网流量控制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90d975b6dc.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;在半双工线路上采用背压式流控
&lt;ul&gt;
&lt;li&gt;接收方反向发送电压信号制造冲突，使发送方停止发送&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在全双工线路上采用 802.3 PAUSE 流控
&lt;ul&gt;
&lt;li&gt;接受方向保留组播地址 01-80-C2-00-00-01 发送 PAUSE 帧，通知发送方停止发送&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总线型以太网拓扑扩展：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90dab33ab0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;用中继器可以拓展 10BASE5 和 10BASE2 网络范围&lt;/li&gt;
&lt;li&gt;所用线缆段都属于一个冲突域&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;星型以太网拓扑拓展：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90dbb0e619.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;用集线器可以拓展 10BASE-T 网络范围&lt;/li&gt;
&lt;li&gt;全部线缆段都属于一个冲突域&lt;br&gt;
&lt;a name=&#34;sDn9P&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;现代以太网技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#现代以太网技术&#34;&gt;#&lt;/a&gt; 现代以太网技术&lt;/h2&gt;
&lt;p&gt;单模光纤与多模光纤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多模光纤：
&lt;ul&gt;
&lt;li&gt;较粗的纤芯，传输多种不同波长不同角度的光&lt;/li&gt;
&lt;li&gt;衰耗大，传输距离通常在千米以内&lt;/li&gt;
&lt;li&gt;成本低&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;单模光纤：
&lt;ul&gt;
&lt;li&gt;纤芯与光波长相同，传输单一波长的激光&lt;/li&gt;
&lt;li&gt;衰耗小，传输距离可达数十千米&lt;/li&gt;
&lt;li&gt;成本高&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用的光纤连接器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90dd089ab3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90de23a566.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速以太网和千兆以太网:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90df256083.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用交换机拓展以太网拓扑:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90e01ecb1b.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;隔离冲突域，避免冲突域过大&lt;/li&gt;
&lt;li&gt;进一步扩大物理连接范围&lt;/li&gt;
&lt;li&gt;提高以太网带宽利用率，增加吞吐量&lt;/li&gt;
&lt;li&gt;适应不同的速率和不同的双工状况&lt;br&gt;
&lt;a name=&#34;HHeFK&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;wlan技术基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wlan技术基础&#34;&gt;#&lt;/a&gt; WLAN 技术基础&lt;/h2&gt;
&lt;p&gt;WLAN 简介：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WLAN（Wireless LAN）是计算机网络与无线通信技术相结合的产物&lt;/li&gt;
&lt;li&gt;用射频（RF）技术取代旧式的双绞线构成局域网络，提供传统有线局域网的所有功能&lt;/li&gt;
&lt;li&gt;具有部署简单、移动方便、使用便捷等优点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;802.11 协议的发展：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90e1420f8a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各国授权使用的频段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90e249be1e.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;802.11b/g 工作频段划分图：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90e34aff4f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无线覆盖原则 —— 蜂窝式覆盖&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90e43a8300.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;任意相邻区域使用无频率交叉的频道，如 1、6、11 频道&lt;/li&gt;
&lt;li&gt;适当调整发射功率，避免跨区域同频干扰&lt;/li&gt;
&lt;li&gt;蜂窝式无线覆盖实现无交叉频率重复使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;802.11 无线网络的介质访问控制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90e55debbb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无线网络典型部署 - 热点覆盖&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90e66e0bf3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无线网路典型部署 - 办公地点无线互连&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90e7686a5c.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;Hl16p&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;4-广域网基本原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-广域网基本原理&#34;&gt;#&lt;/a&gt; 4、广域网基本原理&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;ussEC&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;广域网基本概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#广域网基本概念&#34;&gt;#&lt;/a&gt; 广域网基本概念&lt;/h2&gt;
&lt;p&gt;局域网的不足：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90e884f9d5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;以太网等局域网技术无法支持远程传输&lt;/li&gt;
&lt;li&gt;企图通过大量设备级连将局域网拓展到超远距离是不现实的&lt;/li&gt;
&lt;li&gt;即使可以拓展局域网的范围，但普通组织没有专用的长距离线路&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;广域网的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90e998b206.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;基于电信运营商的通信网络设施建立远程连接&lt;/li&gt;
&lt;li&gt;在相距遥远的局域网之间建立连接性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;广域网与 OSI 参考模型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90ea75d8cb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;广域网连接方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90ebb66a8c.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;llUYy&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;点到点广域网技术介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#点到点广域网技术介绍&#34;&gt;#&lt;/a&gt; 点到点广域网技术介绍&lt;/h2&gt;
&lt;p&gt;专线连接模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90ecc566a3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;点到点永久性独占线路，固定带宽&lt;/li&gt;
&lt;li&gt;典型技术：异步模拟专线、同步数字专线&lt;/li&gt;
&lt;li&gt;链路层常使用 SDLC、HDLC、PPP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;电路交换链接模型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90edd582e7.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;按需拨号建立连接，独占线路，带宽固定&lt;/li&gt;
&lt;li&gt;典型技术：PSTN、ISDN&lt;/li&gt;
&lt;li&gt;链路层常采用 PPP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用接口和线缆&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90eee494f5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;接口和线缆：
&lt;ul&gt;
&lt;li&gt;V.24、V.35、X.21、RS-449、RS-530、RJ-11、RJ-45、双绞线等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设备：
&lt;ul&gt;
&lt;li&gt;调制解调器、同步 CSU/DSU 等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;V.24 接口线缆：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90efe8fe6f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90f0f7e71e.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;支持同步和异步两种方式&lt;/li&gt;
&lt;li&gt;异步方式下最高速率为 115200bps&lt;/li&gt;
&lt;li&gt;同步方式下最高速率为 64000bps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;V.35 接口线缆：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90f2067b2e.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90f2ee07d8.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;只能工作在同步方式下&lt;/li&gt;
&lt;li&gt;同步方式下最大速率 2Mbps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他常见接口线缆：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90f3da6aa8.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链路层协议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90f4bddc4b.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;在点到点连接中，链路层协议通常运行于端系统之间&lt;/li&gt;
&lt;li&gt;常见链路层协议包括 HDLC、PPP、SLIP、SDLC 等&lt;br&gt;
&lt;a name=&#34;r7ZSo&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分组交换广域网技术介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分组交换广域网技术介绍&#34;&gt;#&lt;/a&gt; 分组交换广域网技术介绍&lt;/h2&gt;
&lt;p&gt;分组交换连接模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90f5bdde00.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;一个端系统设备可以通过虚电路连接到多个通信对端&lt;/li&gt;
&lt;li&gt;典型技术：X.25、帧中继、ATM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;dBh0b&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;5-ip基本原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-ip基本原理&#34;&gt;#&lt;/a&gt; 5、IP 基本原理&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;Ln3Yb&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ip协议概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ip协议概述&#34;&gt;#&lt;/a&gt; IP 协议概述&lt;/h2&gt;
&lt;p&gt;IP 及其相关协议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90f6d184e0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IP 的主要作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表示节点和链路
&lt;ul&gt;
&lt;li&gt;用唯一的 IP 地址标识每一个节点&lt;/li&gt;
&lt;li&gt;用唯一的 IP 网络号标识每一个链路&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;寻址和转发
&lt;ul&gt;
&lt;li&gt;确定节点所有网络的位置，进而确定节点所在的位置&lt;/li&gt;
&lt;li&gt;IP 路由器选择适当的路径将 IP 包转发到目的节点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;适应各种数据链路
&lt;ul&gt;
&lt;li&gt;根据链路的 MTU 对 IP 包进行分片和重组&lt;/li&gt;
&lt;li&gt;为了通过实际的数据链路传递信息，须建立 IP 地址到数据链路层地址的映射&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IP 网络的结构:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90f7c33c89.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;IP 网络由多个网段构成，每个网段对应一个链路&lt;/li&gt;
&lt;li&gt;路由器负责将网段连接起来，适配链路层协议，在网络之间转发数据包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IP 头格式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90f8d4be8a.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;ZwmXo&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ip地址和地址映射&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ip地址和地址映射&#34;&gt;#&lt;/a&gt; IP 地址和地址映射&lt;/h2&gt;
&lt;p&gt;IP 地址格式和表示方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90f9b7c274.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络号和主机号：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90fa980278.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;网络号用于区分不同的 IP 网络&lt;/li&gt;
&lt;li&gt;主机号用于标识网络内的一个 IP 节点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IP 地址分类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90fb86666f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;特殊的 IP 地址：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90fc57bf74.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ARP：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90fd64d0e3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RARP：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90fe580d50.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;Gyue9&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ip包转发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ip包转发&#34;&gt;#&lt;/a&gt; IP 包转发&lt;/h2&gt;
&lt;p&gt;主机单播 IP 包发送：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a90ff426ac9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;若目的地址所处网络号与本机所处网络号相同，则目的处于直连网段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路由器单播 IP 包转发：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91001776fa.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;若目的地址所处网络号与本机任一接口的网络号相同，则目的处于相应接口直连网段&lt;/li&gt;
&lt;li&gt;路由器通过查找路由信息判断下一跳路由器地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主机接收 IP 包：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9100f21300.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;如果 IP 包的目的地址符合下列情况之一，则主机接收此包
&lt;ul&gt;
&lt;li&gt;目的 IP 地址等于自己的 IP 地址&lt;/li&gt;
&lt;li&gt;目的 IP 地址是一个广播地址&lt;/li&gt;
&lt;li&gt;目的 IP 地址是一个组播地址，而本机的某个服务属于此组播组&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;否则主机的网络层丢弃此 IP 包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;广播风暴：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9101ed046f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;路由器转发广播将导致全网充斥广播，可能引发广播风暴&lt;/li&gt;
&lt;li&gt;路由器默认不转发广播&lt;br&gt;
&lt;a name=&#34;RyUY2&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他相关协议介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他相关协议介绍&#34;&gt;#&lt;/a&gt; 其他相关协议介绍&lt;/h2&gt;
&lt;p&gt;代理 ARP：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9102e0fc34.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ICMP：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9103d97290.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;ICMP 定义了错误报告和其它关于 IP 数据包处理情况的消息&lt;/li&gt;
&lt;li&gt;ICMP 可用于报告 IP 数据包传递过程中发生的错误、失败等信息，提供网络诊断等功能&lt;/li&gt;
&lt;li&gt;ICMP 消息可分为 ICMP 差错消息和 ICMP 查询消息&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;P9I8K&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;6-tcp和udp基本原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-tcp和udp基本原理&#34;&gt;#&lt;/a&gt; 6、TCP 和 UDP 基本原理&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;gO8q9&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;tcpip传输层的作用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcpip传输层的作用&#34;&gt;#&lt;/a&gt; TCP/IP 传输层的作用&lt;/h2&gt;
&lt;p&gt;传输层的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供面向连接或无连接的服务&lt;/li&gt;
&lt;li&gt;维护连接状态&lt;/li&gt;
&lt;li&gt;对应用层数据进行分段和封装&lt;/li&gt;
&lt;li&gt;实现多路复用&lt;/li&gt;
&lt;li&gt;可靠地传输数据&lt;/li&gt;
&lt;li&gt;执行流量控制&lt;br&gt;
&lt;a name=&#34;VtpXT&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tcp基本原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tcp基本原理&#34;&gt;#&lt;/a&gt; TCP 基本原理&lt;/h2&gt;
&lt;p&gt;TCP 的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;三次握手
&lt;ul&gt;
&lt;li&gt;建立可靠连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;确认机制
&lt;ul&gt;
&lt;li&gt;应答接收&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;端口号
&lt;ul&gt;
&lt;li&gt;多路复用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;序列号
&lt;ul&gt;
&lt;li&gt;丢失检测、乱序重排&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;完整性校验
&lt;ul&gt;
&lt;li&gt;差错检测&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;窗口机制
&lt;ul&gt;
&lt;li&gt;流量控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TCP 封装：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91057ea8bb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TCP/UDP 端口号：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a910657d6ff.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TCP 连接的建立：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91072bf2d3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TCP 连接的拆除：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9108070657.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;传输确认：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9108f45cdf.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;超时重传：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a910a13cc53.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;滑动窗口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a910afe6a89.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;uhB6G&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;udp基本原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#udp基本原理&#34;&gt;#&lt;/a&gt; UDP 基本原理&lt;/h2&gt;
&lt;p&gt;UDP 封装：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a910be6637a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TCP 与 UDP 的对比&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a910cc1f4c1.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;yJsjI&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;7-路由器及其操作系统介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7-路由器及其操作系统介绍&#34;&gt;#&lt;/a&gt; 7、路由器及其操作系统介绍&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;chMyL&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;路由器与交换机的作用特点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由器与交换机的作用特点&#34;&gt;#&lt;/a&gt; 路由器与交换机的作用特点&lt;/h2&gt;
&lt;p&gt;路由器的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a910dbe4f18.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;连接具有不同介质的链路&lt;/li&gt;
&lt;li&gt;连接网络或子网，隔离广播&lt;/li&gt;
&lt;li&gt;对数据报文执行寻路和转发&lt;/li&gt;
&lt;li&gt;交换和维护路由信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路由器的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要工作在 OSI 模型的物理层、数据链路层和网络层&lt;/li&gt;
&lt;li&gt;根据网络层信息进行路由转发&lt;/li&gt;
&lt;li&gt;提供丰富的接口类型&lt;/li&gt;
&lt;li&gt;支持丰富的链路层协议&lt;/li&gt;
&lt;li&gt;支持多种路由协议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;交换机的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a910ea22358.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;连接多个以太网物理段，隔离冲突域&lt;/li&gt;
&lt;li&gt;对以太网帧进行高速而透明的交换转发&lt;/li&gt;
&lt;li&gt;自行学习和维护 MAC 地址信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;交换机的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要工作在 OSI 模型的物理层、数据链路层&lt;/li&gt;
&lt;li&gt;提供以太网间的透明桥接和交换&lt;/li&gt;
&lt;li&gt;依据链路层的 MAC 地址，将以太网数据帧在端口间进行转发&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路由器与交换机的发展趋势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;路由和交换的融合&lt;/li&gt;
&lt;li&gt;多业务功能的融合&lt;br&gt;
&lt;a name=&#34;HHZxc&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;h3c路由器与交换机介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#h3c路由器与交换机介绍&#34;&gt;#&lt;/a&gt; H3C 路由器与交换机介绍&lt;/h2&gt;
&lt;p&gt;H3C 路由器系列：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a910f9a5776.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;H3C 路由器示例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91107edeae.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91115f30a4.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;H3C 交换机系列：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91123f1043.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;H3C 交换机示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9113106783.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;dDjeu&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;h3c网络设备操作系统comware&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#h3c网络设备操作系统comware&#34;&gt;#&lt;/a&gt; H3C 网络设备操作系统 Comware&lt;/h2&gt;
&lt;p&gt;Comware 的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Comware 是设备运行的网络操作系统，H3C 产品的核心软件平台&lt;/li&gt;
&lt;li&gt;对硬件驱动和底层操作系统进行屏蔽与封装&lt;/li&gt;
&lt;li&gt;集成了丰富的链路层协议、以太网交换、IP 路由及转发、安全等功能模块&lt;/li&gt;
&lt;li&gt;制定了软硬件接口标准规范，对第三方厂商提供开放平台与接口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comware 的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持 IPv4 及 IPv6 多协议&lt;/li&gt;
&lt;li&gt;支持多核 CPU&lt;/li&gt;
&lt;li&gt;路由和交换功能融合&lt;/li&gt;
&lt;li&gt;高可靠性和弹性扩展&lt;/li&gt;
&lt;li&gt;灵活的裁减和定制功能&lt;br&gt;
&lt;a name=&#34;lNWT5&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;8-命令行操作基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8-命令行操作基础&#34;&gt;#&lt;/a&gt; 8、命令行操作基础&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;rSTBt&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置网络设备的方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置网络设备的方法&#34;&gt;#&lt;/a&gt; 配置网络设备的方法&lt;/h2&gt;
&lt;p&gt;访问网络设备命令行接口的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过 Console 口本地访问&lt;/li&gt;
&lt;li&gt;通过 AUX 口远程访问&lt;/li&gt;
&lt;li&gt;使用 Telnet 终端访问&lt;/li&gt;
&lt;li&gt;使用 SSH 终端访问&lt;/li&gt;
&lt;li&gt;通过异步串口访问&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Console 口进行连接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a911450cd23.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;创建新连接：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a911547d34c.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;选择 COM 口
&lt;ul&gt;
&lt;li&gt;选择串口，根据实际连接情况选择对应的 COM 口&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91161a7328.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;进入设备配置界面:
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9116fa0a80.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 AUX 口进行连接:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9117f16f89.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Telnet 进行连接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9118cbb53d.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SSH 介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSH（Secure Shell，安全外壳）在无安全保证的网络上提供安全的远程登录等服务&lt;/li&gt;
&lt;li&gt;由传输协议、验证协议和连接协议三部分组成&lt;/li&gt;
&lt;li&gt;使用 TCP 端口 22&lt;/li&gt;
&lt;li&gt;提供 Password 和 Publickey 两种验证方式&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9119aa4a62.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;hVMi8&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;命令行使用入门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命令行使用入门&#34;&gt;#&lt;/a&gt; 命令行使用入门&lt;/h2&gt;
&lt;p&gt;命令视图：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户视图：
&lt;ul&gt;
&lt;li&gt;设备启动后的缺省视图，可查看启动后基本运行状态和统计信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;系统视图：
&lt;ul&gt;
&lt;li&gt;配置系统全局通用参数的视图&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;路由协议视图：
&lt;ul&gt;
&lt;li&gt;配置路由协议参数的视图&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;接口视图：
&lt;ul&gt;
&lt;li&gt;配置接口参数的视图&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用户线视图：
&lt;ul&gt;
&lt;li&gt;配置登陆设备的给个用户属性的视图&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各种视图之间的关系&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a911ab117c2.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;Ctrl+Z&lt;/code&gt;  可以从任意视图直接回到用户视图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用命令视图&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a911b85a1f9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命令类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读类型：
&lt;ul&gt;
&lt;li&gt;用于显示系统配置信息和维护信息，如显示命令 &lt;code&gt;display&lt;/code&gt; 、显示文件信息的命令 &lt;code&gt;dir&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;写类型：
&lt;ul&gt;
&lt;li&gt;用于对系统进行配置，如使能信息中心功能的命令 &lt;code&gt;info-center enable&lt;/code&gt; 、配置调试信息开关的命令 &lt;code&gt;debugging&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;执行类型：
&lt;ul&gt;
&lt;li&gt;用于执行特定的功能，如 &lt;code&gt;ping&lt;/code&gt;  命令、与 FTP 服务器建立连接的命令 &lt;code&gt;ftp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用户角色&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a911c5e6855.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命令行帮助特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a911d422436.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a911e211dab.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;错误提示信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a911eeb0f1a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命令行历史记录功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看历史命令记录
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;display history-command&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;翻阅和调出历史记录中的某一条命令
&lt;ul&gt;
&lt;li&gt;用 &lt;code&gt;↑&lt;/code&gt; 或 &lt;code&gt;Ctrl+P&lt;/code&gt;  快捷键调出上一条历史命令&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;↓&lt;/code&gt; 或 &lt;code&gt;Ctrl+N&lt;/code&gt;  快捷键调出下一条历史命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命令行编辑功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a911fbaa7a9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分页显示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9120adb82a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Space&lt;/code&gt; ：继续显示下一屏信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Enter&lt;/code&gt; ：继续显示下一行信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl+C&lt;/code&gt; ：停止显示和命令执行&lt;br&gt;
&lt;a name=&#34;Ll5YK&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常用的命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常用的命令&#34;&gt;#&lt;/a&gt; 常用的命令&lt;/h2&gt;
&lt;p&gt;常用设备管理命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置设备名称：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a912188a4e6.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;配置系统时间：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91227508c1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;显示系统时间：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91234b52c8.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;配置欢迎 / 提示信息：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91241cbc95.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用的信息查看命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看版本信息：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display version&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看当前配置：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display current-configuration&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;显示接口信息：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display interface&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;显示接口 IP 状态与配置信息：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display ip interface brief&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;显示系统运行统计信息：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display diagonostic-information&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;cDpGV&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;配置远程登录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置远程登录&#34;&gt;#&lt;/a&gt; 配置远程登录&lt;/h2&gt;
&lt;p&gt;路由器 Telnet 服务配置命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置与网络相连端口的 IP 地址
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a91251ab491.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用 Telnet 服务器端功能
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9125f0928f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;进入 vty 用户界面视图，设置验证方式
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9126c2da70.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设置登录密码和用户级别
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/08/64a9127b8c911.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;创建用户、配置密码、设置服务类型、设置用户级别
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba8284570b.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Telnet 配置例子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba8446e27f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;用 Telnet 登录
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba853cd0d1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路由器 SSH 服务配置命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 SSH 服务器功能
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba8623245b.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;配置 SSH 客户端登录时的用户界面
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba87087ca0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;配置 SSH 用户
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba87f57056.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;生成 RSA 密钥
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba88ebbd5c.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;导出 RSA 密钥
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba89bbfe16.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;销毁 RAS 密钥
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba8a8a47eb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SSH 配置例子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba8b805314.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;启动 SSH 客户端
&lt;ul&gt;
&lt;li&gt;开启客户端软件 PuTTY，默认为 SSH 连接方式，输入主机地址 192.168.0.254&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba8c7740fd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;登录网络设备
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba8d5ddf31.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba8e507235.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;JqZrQ&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;9-网络设备的文件管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#9-网络设备的文件管理&#34;&gt;#&lt;/a&gt; 9、网络设备的文件管理&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;ArcDR&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;网络设备的文件系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络设备的文件系统&#34;&gt;#&lt;/a&gt; 网络设备的文件系统&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;设备以文件的方式对运行所需的数据进行存储&lt;/li&gt;
&lt;li&gt;网络设备通过文件系统管理这些文件&lt;/li&gt;
&lt;li&gt;主要文件：
&lt;ul&gt;
&lt;li&gt;启动软件包&lt;/li&gt;
&lt;li&gt;配置文件&lt;/li&gt;
&lt;li&gt;日志文件&lt;br&gt;
&lt;a name=&#34;oJLHo&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网络设备的存储方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络设备的存储方式&#34;&gt;#&lt;/a&gt; 网络设备的存储方式：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba8f2b4d4e.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;在不同型号的设备上，Flash 可能是内置的 Flash 存储器，也可能是 CF 卡&lt;br&gt;
&lt;a name=&#34;mQvOe&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件系统的操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件系统的操作&#34;&gt;#&lt;/a&gt; 文件系统的操作：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;目录操作：
&lt;ul&gt;
&lt;li&gt;创建 / 删除目录、显示当前工作目录以及显示指定目录下的文件或目录的信息等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;文件操作：
&lt;ul&gt;
&lt;li&gt;删除文件、恢复删除的文件、彻底删除文件、显示文件的内容、重命名文件、拷贝文件、移动文件、显示指定文件的信息等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;存储设备操作：
&lt;ul&gt;
&lt;li&gt;恢复存储设备的空间、格式化存储设备等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设置文件系统的提示方式&lt;br&gt;
&lt;a name=&#34;tFUty&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;文件的管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件的管理&#34;&gt;#&lt;/a&gt; 文件的管理&lt;/h2&gt;
&lt;p&gt;&lt;a name=&#34;GQw8u&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置文件介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置文件介绍&#34;&gt;#&lt;/a&gt; 配置文件介绍&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;起始配置与当前配置&lt;/li&gt;
&lt;li&gt;配置文件是以文本格式保存的命令，默认配置并不出现在配置文件中&lt;/li&gt;
&lt;li&gt;配置文件的选择顺序
&lt;ul&gt;
&lt;li&gt;如果用户指定了启动配置文件，且配置文件存在，则以启动配置文件进行初始化&lt;/li&gt;
&lt;li&gt;如果用户指定的启动配置文件不存在，则以空配置进行初始化&lt;br&gt;
&lt;a name=&#34;NnE1A&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置文件的操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置文件的操作&#34;&gt;#&lt;/a&gt; 配置文件的操作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;保存配置
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; save&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;擦除配置
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; reset saved-configuration&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设置下一次启动的配置文件
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; startup saved-configuration filename&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;备份 / 恢复下次启动配置文件
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; backup startup-configuration to tftp-server [dest-filename]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; restore startup-configuration from tftp-server src-ilename&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;yJf2s&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置文件的显示与维护&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置文件的显示与维护&#34;&gt;#&lt;/a&gt; 配置文件的显示与维护&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;查看保存的配置文件
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display saved-configuration&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看系统启动配置文件
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display startup&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看当前生效的配置
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display current-configuration&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看当前视图下生效的配置
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[H3C-line-vty0-63] display this&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;F4LOk&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;用ftp传输文件的工作方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用ftp传输文件的工作方式&#34;&gt;#&lt;/a&gt; 用 FTP 传输文件的工作方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9025f240.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;KVJAk&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置设备的ftp服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置设备的ftp服务&#34;&gt;#&lt;/a&gt; 配置设备的 FTP 服务&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;使能 FTP 服务器功能
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[H3C] ftp server enable&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;创建用户
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[H3C] local-user username&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设置服务类型及登录密码
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[H3C-luser-manage-xxx] service-type ftp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[H3C-luser-manage-xxx] password &amp;#123;hash | simple&amp;#125; password&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;CJ7Xb&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ftp操作示例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ftp操作示例&#34;&gt;#&lt;/a&gt; FTP 操作示例&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9108360e.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;sRys4&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;用tftp传输文件的工作方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用tftp传输文件的工作方式&#34;&gt;#&lt;/a&gt; 用 TFTP 传输文件的工作方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba91ec21d0.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;cXYiq&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;在设备上使用tftp服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#在设备上使用tftp服务&#34;&gt;#&lt;/a&gt; 在设备上使用 TFTP 服务&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba92bee5fb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;在执行上传 / 下载操作时，到 TFTP 服务器的可达路由可能有多条，用户可以配置客户端 TFTP 报文的源地址&lt;/li&gt;
&lt;li&gt;当设备作为 TFTP 客户端时，可以把本设备的文件上传到 TFTP 服务器，还可以从 TFTP 服务器下载文件到本地设备&lt;/li&gt;
&lt;li&gt;下载分为普通下载和安全下载两种&lt;br&gt;
&lt;a name=&#34;ICcHz&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tftp操作示例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tftp操作示例&#34;&gt;#&lt;/a&gt; TFTP 操作示例&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba93a1d89f.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;nA2bF&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;指定下次启动加载的应用程序文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#指定下次启动加载的应用程序文件&#34;&gt;#&lt;/a&gt; 指定下次启动加载的应用程序文件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;指定下次启动加载的应用程序文件
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; boot-loader file file-url&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;显示下次启动加载的应用程序文件
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display boot-loader&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;NvNti&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;重启设备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#重启设备&#34;&gt;#&lt;/a&gt; 重启设备&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;重启系统：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; reboot&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;开启设备定时重启功能，并指定重启的具体时间
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; schedule reboot at hh:mm[date]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;开启设备定时重启功能，并指定重启的等待时延
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; schedule reboot delay &amp;#123;hh:mm|mm&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;显示设备的重启时间
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display schedule reboot&lt;/code&gt; &lt;br&gt;
&lt;a name=&#34;x2Qq6&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;网络设备软件维护基础&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络设备软件维护基础&#34;&gt;#&lt;/a&gt; 网络设备软件维护基础&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;网络设备的一般引导过程
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba948b3187.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;路由器系统引导过程示例：
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9561b659.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;网络设备软件维护的一般性方法
&lt;ul&gt;
&lt;li&gt;在命令行模式中采用 TFTP/FTP 上传 / 下载应用程序及配置文件，实现应用程序升级&lt;/li&gt;
&lt;li&gt;在 BootROM 模式中通过以太口采用 TFTP/FTP 完成应用程序软件升级&lt;/li&gt;
&lt;li&gt;在 BootROM 模式中通过 Console 口采用 XModem 协议完成 BootROM 及应用程序的升级&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;cYzw8&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;10-网络设备基本调试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#10-网络设备基本调试&#34;&gt;#&lt;/a&gt; 10、网络设备基本调试&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;Ya0oL&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;网络连通性测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络连通性测试&#34;&gt;#&lt;/a&gt; 网络连通性测试&lt;/h2&gt;
&lt;p&gt;ping 的实现原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9661fcf0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ping 命令的输出：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba97605d01.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 ping 命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9849c329.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tracert 的实现原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9927aabe.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tracert 命令的输出：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba99fe9e9d.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 tracert 命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9abbb783.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;YjfWE&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;系统调试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#系统调试&#34;&gt;#&lt;/a&gt; 系统调试&lt;/h2&gt;
&lt;p&gt;系统调试介绍：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对网络设备所支持的绝大部分协议和功能，系统都提供了相应的调试功能，帮助用户对错误进行诊断和定位&lt;/li&gt;
&lt;li&gt;调试信息的输出由两个开关控制&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9ba169e9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;系统调试的操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开启控制台对系统信息的监视功能：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; terminal monitor&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;打开调试信息的屏幕输出开关：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; terminal debugging&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;打开模块调试开关：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; debugging module-name&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;显示调试开关：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;H3C&amp;gt; display debugging&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;调试信息输出的例子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9cab30b3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;ZJS3Y&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;11-以太网交换机工作原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#11-以太网交换机工作原理&#34;&gt;#&lt;/a&gt; 11、以太网交换机工作原理&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;c01Sm&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;共享式与交换式以太网&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#共享式与交换式以太网&#34;&gt;#&lt;/a&gt; 共享式与交换式以太网&lt;/h2&gt;
&lt;p&gt;共享式以太网：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9d784268.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;共享式以太网中，所有的终端主机都处于同一个冲突域中，局域网中的所有接入终端共享总线的带宽&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;交换式以太网：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9e59e40a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;在交换式以太网中，交换机的每个端口处于独立冲突域中，终端主机独占端口的带宽&lt;br&gt;
&lt;a name=&#34;JFxeB&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;交换机的mac地址表学习过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#交换机的mac地址表学习过程&#34;&gt;#&lt;/a&gt; 交换机的 MAC 地址表学习过程&lt;/h2&gt;
&lt;p&gt;MAC 地址表初始化：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64aba9f354a75.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;交换机刚启动时，MAC 地址表内无表项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MAC 地址表学习过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa00f41e0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;PCA 发出数据帧&lt;/li&gt;
&lt;li&gt;交换机把 PCA 的帧中的源地址 MAC_A 与接收到此帧端口 E1/0/1 关联起来&lt;/li&gt;
&lt;li&gt;交换机把 PCA 的帧从所有其他端口发送出去（除了接收到帧的端口 E1/0/1）&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa1138fbe.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;PCB、PCC、PCD 发出数据帧&lt;/li&gt;
&lt;li&gt;交换机把接收到的帧中的源地址与相应的端口关联起来&lt;br&gt;
&lt;a name=&#34;xRtUW&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;交换机对数据帧的转发与过滤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#交换机对数据帧的转发与过滤&#34;&gt;#&lt;/a&gt; 交换机对数据帧的转发与过滤&lt;/h2&gt;
&lt;p&gt;单播帧的转发：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa2072819.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;PCA 发出目的到 PCD 的单播数据帧&lt;/li&gt;
&lt;li&gt;交换机根据帧中的目的地址，从相应的端口 E1/0/4 发送出去&lt;/li&gt;
&lt;li&gt;交换机不在其他端口上转发此单播数据帧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;广播、组播和未知单播帧的转发：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa2e0bd87.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;交换机会把广播、组播和未知单播帧从其他端口发送出去（除了接收到帧的端口）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据帧的过滤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa3a4c9d3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;PCA 发送目的到 PCB 的数据帧&lt;/li&gt;
&lt;li&gt;接收到帧时，交换机查找 MAC 地址表，如果发现帧的目的地址关联到接收端口上，则丢弃此帧&lt;br&gt;
&lt;a name=&#34;Xtebd&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;广播域&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#广播域&#34;&gt;#&lt;/a&gt; 广播域&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa4731672.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;路由器或三层交换机的三层接口处于独立的广播域中，终端主机发出的广播帧在三层接口被终止&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;w3Xlj&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;12-配置vlan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#12-配置vlan&#34;&gt;#&lt;/a&gt; 12、配置 VLAN&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;zIFws&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;vlan技术简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vlan技术简介&#34;&gt;#&lt;/a&gt; VLAN 技术简介&lt;/h2&gt;
&lt;p&gt;广播风暴：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa54904a5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;设备发出的广播帧在广播域中传播，占有网络带宽，降低设备性能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;路由器来隔离广播：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa6140554.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;路由器能够隔离广播，减少广播域范围&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 VLAN 隔离广播：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa6d8b6bb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;二层交换机使用 VLAN 隔离广播，减小广播域范围&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VLAN 的优点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa7aa960a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;有效控制广播域范围&lt;/li&gt;
&lt;li&gt;增强局域网的安全性&lt;/li&gt;
&lt;li&gt;灵活构建虚拟工作组&lt;br&gt;
&lt;a name=&#34;wAoFv&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vlan类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vlan类型&#34;&gt;#&lt;/a&gt; VLAN 类型&lt;/h2&gt;
&lt;p&gt;基于端口的 VLAN：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa8c618e5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于协议的 VLAN：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaa9a9cb6a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于子网的 VLAN：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaaa6a4014.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;vznyF&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vlan技术原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vlan技术原理&#34;&gt;#&lt;/a&gt; VLAN 技术原理&lt;/h2&gt;
&lt;p&gt;VLAN 标签：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaabcb4bbd.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;交换机用 VLAN 标签来区分不同 VLAN 的以太网帧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;802.1Q 帧格式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaad050c66.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单交换机 VLAN 标签操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaadf25ec5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;在进入交换机端口时，附加缺省 VLAN 标签&lt;/li&gt;
&lt;li&gt;出交换机端口时，去掉 VLAN 标签&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Access 链路类型端口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaaede7ceb.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;只允许缺省 VLAN 通过，仅接收和发送一个 VLAN 的数据帧&lt;/li&gt;
&lt;li&gt;一般用于连接用户设备&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;跨交换机 VLAN 标签操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaafb8f368.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;带有 VLAN 标签的以太网帧在交换机间传递&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trunk 链路类型端口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abab18c1ada.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;允许多个 VLAN 通过，可以接收和发送多个 VLAN 的数据帧&lt;/li&gt;
&lt;li&gt;缺省 VLAN 的以太网帧不带标签&lt;/li&gt;
&lt;li&gt;一般用于交换机之间连接&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hybrid 链路类型端口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abab25c9234.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;允许多个 VLAN 通过，可以接收和发送多个 VLAN 的数据帧&lt;/li&gt;
&lt;li&gt;Hybrid 端口和 Trunk 端口的不同之处在于
&lt;ul&gt;
&lt;li&gt;Hybrid 端口允许多个 VLAN 的以太网帧不带标签&lt;/li&gt;
&lt;li&gt;Trunk 端口只允许缺省 VLAN 的以太网帧不带标签&lt;br&gt;
&lt;a name=&#34;Larde&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vlan发基本配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vlan发基本配置&#34;&gt;#&lt;/a&gt; VLAN 发基本配置&lt;/h2&gt;
&lt;p&gt;VLAN 基本配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建 VLAN 并进入 VLAN 视图
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switc] vlan vlan-id&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;将指定端口加入到当前 VLAN 中
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[SWitch-vlan10] port interface-list&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置 Trunk 端口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置端口的链路类型为 Trunk 类型
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ethernet1/0/1] port link-type trunk&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;允许指定的 VLAN 通过当前 Trunk 端口
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ethrtnet1/0/1] port trunk permit vlan &amp;#123;vlan-id-list | all&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设置 Trunk 端口的缺省 VLAN
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ethernet1/0/1] port trunk pvid vlan vlan-id&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置 Hybrid 端口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置端口的链路类型为 Hybrid 类型
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ethernet1/0/1] port link-type hybrid&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;允许指定的 VLAN 通过当前 Hybrid 端口
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ethernet1/0/1] port hybrid vlan vlan-id-list &amp;#123;tagged | untagged&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设置 Hybrid 端口的缺省 VLAN
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ethernet1/0/1] port hybrid pvid vlan vlan-id&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VLAN 配置示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abab33560ed.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VLAN 显示及维护：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abab4c16d45.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;Mwf5P&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;13-生成树协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#13-生成树协议&#34;&gt;#&lt;/a&gt; 13、生成树协议&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;lYN5b&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;生成树背景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#生成树背景&#34;&gt;#&lt;/a&gt; 生成树背景&lt;/h2&gt;
&lt;p&gt;路径回环的影响：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abab575af07.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;STP 的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abab648429f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;通过阻断冗余链路来消除桥接网络中可能存在的路径回环&lt;/li&gt;
&lt;li&gt;当前路径发生故障时，激活冗余备份链路，恢复网络连通性&lt;br&gt;
&lt;a name=&#34;AVzq6&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;stp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#stp&#34;&gt;#&lt;/a&gt; STP&lt;/h2&gt;
&lt;p&gt;生成树协议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;STP（Spanning Tree Protocol，生成树协议）是用于在局域网中消除数据链路层物理环路的协议&lt;/li&gt;
&lt;li&gt;通过在桥之间交换 BPDU（Bridge Protocol Data Unit，桥协议数据单元），来保证设备完成生成树的计算过程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置 BPDU 的生成和传递：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置 BPDU 包含以下重要信息，完成生成树计算
&lt;ul&gt;
&lt;li&gt;根桥 ID（RootID）&lt;/li&gt;
&lt;li&gt;根路径开销（Root Path Cost）&lt;/li&gt;
&lt;li&gt;指定桥 ID（Designated Bridge ID）&lt;/li&gt;
&lt;li&gt;指定端口 ID（Designated PortID）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;各台设备的各个端口在初始时生成以自己为根桥（Root Bridge）的配置信息，向外发送自己的配置消息&lt;/li&gt;
&lt;li&gt;网络收敛后，根桥向外发送配置 BPDU，其他的设备对该配置 BPDU 进行转发&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根桥的选举：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abab728b383.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;桥 ID 由桥优先级（BridgePriority）和桥 MAC 地址（BridgeMACAddress）组成&lt;/li&gt;
&lt;li&gt;桥 ID 小的桥被选举为桥跟&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;端口角色的确定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abab7f8cee8.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;桥跟上的所有端口为指定端口（Designated Port）&lt;/li&gt;
&lt;li&gt;在非根桥上选举根路径开销（RootPathCost）最小的端口为根端口（Root Port）&lt;/li&gt;
&lt;li&gt;每个物理段选出根路径开销最小的桥作为指定桥（Designated Bridge），连接指定桥的端口为指定端口&lt;/li&gt;
&lt;li&gt;不是根端口和指定端口的其余端口被 STP 置为阻塞状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根路径开销：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abab8b2cd00.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;根路径开销（Root Path Cost）是达到根的路径上所有链路开销（Cost）的代数和&lt;/li&gt;
&lt;li&gt;非根桥进行根端口选举时，根路径开销最小的端口为根端口&lt;/li&gt;
&lt;li&gt;物理段进行指定桥选举时，路径开销最小的桥为指定桥&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过桥 ID 决定端口角色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abab981660f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;在根路径开销相同时，所连网段指定桥 ID 最小的端口为根端口&lt;/li&gt;
&lt;li&gt;在根路径开销相同时，桥 ID 最小的桥被选举为物理段上的指定桥，连接指定桥的端口为指定端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过端口 ID 决定端口角色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64ababa4cfb6f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;在根路径开销、指定桥 ID 都相同的情况下，所连指定端口 ID 小的端口为根端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;端口状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64ababb26c2f9.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;端口状态迁移：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;端口被选为指定端口或根端口后，需要从 Blocking 状态经 Listening 和 Learning 才能到 Forwarding 状态&lt;/li&gt;
&lt;li&gt;默认的 Forwarding Delay 时间是 15 秒&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64ababc26a2db.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生成树的不足：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;端口从阻塞状态进入转发状态必须经历两倍的 Forwarding Delay 时间&lt;/li&gt;
&lt;li&gt;如果网络中的拓扑结构变化频繁，网络会频繁地失去连通性&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64ababd24f4ff.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;Emj4q&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rstp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rstp&#34;&gt;#&lt;/a&gt; RSTP&lt;/h2&gt;
&lt;p&gt;RSTP：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RSTP（Rapid Spanning Tree Protocol，快速生成树协议）是 STP 协议的优化版&lt;/li&gt;
&lt;li&gt;RSTP 具备 STP 的所有功能&lt;/li&gt;
&lt;li&gt;RSTP 可以实现快速收敛
&lt;ul&gt;
&lt;li&gt;在某些情况下，端口进入转发状态的延时大大缩短，从而缩短了网络最终达到拓扑稳定所需要的时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RSTP 的改进：&lt;/p&gt;
&lt;p&gt;STP、RSTP 的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trunk 链路上实际上运行着对个 VLAN&lt;/li&gt;
&lt;li&gt;所有 VLAN 共用一棵生成树&lt;/li&gt;
&lt;li&gt;无法实现不同 VLAN 在多条 Trunk 链路上的负载分担&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64ababe613c11.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;MtU3u&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pvst&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pvst&#34;&gt;#&lt;/a&gt; PVST&lt;/h2&gt;
&lt;p&gt;PVST：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PVST（Per VLAN Spanning Tree）&lt;/li&gt;
&lt;li&gt;每个 VLAN 上运行一个 STP 或 RSTP 协议，不同 VLAN 之间的生成树完全独立&lt;/li&gt;
&lt;li&gt;在多条 Trunk 链路上实现单 VLAN 级负载分担&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64ababf45ac81.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;DknxT&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mstp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mstp&#34;&gt;#&lt;/a&gt; MSTP&lt;/h2&gt;
&lt;p&gt;MSTP：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MSTP（Multiple Spanning Tree Protocol）多生成树协议&lt;/li&gt;
&lt;li&gt;将多个 VLAN 捆绑到一个实例，每个实例生成独立的生成树&lt;/li&gt;
&lt;li&gt;在多条 Trunk 链路上实现 VLAN 级负载分担&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac0119065.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;四种生成树协议特性的比较：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac175d5f3.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;MSTP、PVST 具有 RSTP 的快速收敛，同时又具有负载分担机制&lt;/li&gt;
&lt;li&gt;MSTP 兼容 STP 和 RSTP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;四种生成树协议的端口状态对比：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac27bfc43.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;Vnl9G&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;生成树协议的配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#生成树协议的配置&#34;&gt;#&lt;/a&gt; 生成树协议的配置&lt;/h2&gt;
&lt;p&gt;STP 基本配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开启设备 STP 特性
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch] stp global enable&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;关闭端口的 STP 特性
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ethernet1/0/1] undo stp enable&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;配置 STP 的工作模式
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch] stp mode &amp;#123;stp|rstp|pvst|mstp&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;STP 可选配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置当前设备的优先级
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch] stp [instance instance-id] priority priority&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;配置端口为边缘端口
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ethernet1/0/1] stp edged-port&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;STP 配置示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac34190af.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;STP 监控与维护：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac3f24da1.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;TUuev&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;14-交换机端口安全技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#14-交换机端口安全技术&#34;&gt;#&lt;/a&gt; 14、交换机端口安全技术&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;Hak8m&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;8021x基本原理及其配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8021x基本原理及其配置&#34;&gt;#&lt;/a&gt; 802.1X 基本原理及其配置&lt;/h2&gt;
&lt;p&gt;802.1X 技术简介：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac4bafc53.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;802.1X 协议起源于标准的无线局域网协议 802.11。主要目的是为了解决局域网用户的接入认证问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;802.1X 的体系结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac58ca3ef.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;本地认证
&lt;ul&gt;
&lt;li&gt;由设备端内置本地服务器对客户端进行认证&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;远程集中认证
&lt;ul&gt;
&lt;li&gt;由远程的认证服务器对客户端进行认证&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;端口接入控制方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac65e02e1.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;基于端口的认证方式&lt;/li&gt;
&lt;li&gt;基于 MAC 的认证方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;802.1X 基本配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开启全局的 802.1X 特性
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch] dot1x&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;开启端口的 802.1X 特性
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ten-GigabitEthernet1/0/1] dot1x&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;添加本地接入用户并设置相关参数
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch] local-user user-name class network&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[Switch-luser-network-localuser] service-type lan-access&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[Switch-luser-network-localuser] password &amp;#123;cipher|simple&amp;#125; password&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;802.1X 典型配置举例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac72ac1da.png&#34; alt=&#34;image.png&#34;&gt;&lt;br&gt;
&lt;a name=&#34;DwSwp&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;端口隔离技术及其配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#端口隔离技术及其配置&#34;&gt;#&lt;/a&gt; 端口隔离技术及其配置&lt;/h2&gt;
&lt;p&gt;端口隔离简介：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac7f3a1ca.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;端口隔离用于在 VLAN 内隔离以太网端口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;端口隔离基本配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建隔离组
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch]port-isolate group 1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;将指定端口加入到隔离组中，端口成为隔离组的普通端口
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ethernet1/0/1] port-isolate enable group 1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;端口隔离配置举例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac8ab31b0.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;k73hy&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;15-配置链路聚合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#15-配置链路聚合&#34;&gt;#&lt;/a&gt; 15、配置链路聚合&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;wFiem&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;链路聚合简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链路聚合简介&#34;&gt;#&lt;/a&gt; 链路聚合简介&lt;/h2&gt;
&lt;p&gt;链路聚合的作用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abac96b31c5.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;聚合链路负载分担原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaca25031a.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;聚合后链路基于流进行负载分担&lt;br&gt;
&lt;a name=&#34;qiOGN&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;链路聚合的分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链路聚合的分类&#34;&gt;#&lt;/a&gt; 链路聚合的分类&lt;/h2&gt;
&lt;p&gt;链路聚合分类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态聚合：
&lt;ul&gt;
&lt;li&gt;双方系统间不使用聚合协议来协商链路信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;动态聚合：
&lt;ul&gt;
&lt;li&gt;双方系统间使用聚合协议来协商链路信息&lt;/li&gt;
&lt;li&gt;LACP（Link Aggregation Control Protocol，链路聚合控制协议）是一种基于 IEEE802.3ad 标准的、能够实现链路动态聚合的协议&lt;br&gt;
&lt;a name=&#34;UGUOX&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;链路聚合的基本配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链路聚合的基本配置&#34;&gt;#&lt;/a&gt; 链路聚合的基本配置&lt;/h2&gt;
&lt;p&gt;静态聚合配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建聚合端口：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch] interface bridge-aggregation intterface-number&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;将以太网端口加入聚合组：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[Switch-Ethernet1/0/1] port link-aggergation group number&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链路聚合配置举例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abacb184f6f.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;链路聚合显示及维护：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abacbe64640.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name=&#34;SRefp&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;16-ip子网划分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#16-ip子网划分&#34;&gt;#&lt;/a&gt; 16、IP 子网划分&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;zMNSh&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;子网划分的需求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#子网划分的需求&#34;&gt;#&lt;/a&gt; 子网划分的需求&lt;/h2&gt;
&lt;p&gt;早期的二级网络结构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abaccab37a4.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大型机构的接入需求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://cdn-us.imgs.moe/2023/07/10/64abacd70de01.png&#34; alt=&#34;image.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分类 IP 地址的低效性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP 地址资源浪费严重&lt;/li&gt;
&lt;li&gt;IP 网络数量不敷使用&lt;/li&gt;
&lt;li&gt;业务扩展缺乏灵活性&lt;/li&gt;
&lt;li&gt;无法应对 Internet 的爆发式增长&lt;br&gt;
&lt;a name=&#34;TV3Yh&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ip子网划分基础知识&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ip子网划分基础知识&#34;&gt;#&lt;/a&gt; IP 子网划分基础知识&lt;/h2&gt;
&lt;p&gt;子网划分方法：&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
