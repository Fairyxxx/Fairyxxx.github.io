{
    "version": "https://jsonfeed.org/version/1",
    "title": "花开两朵，天各一方！ • All posts by \"note\" tag",
    "description": "我很喜欢枫叶，可惜，枫叶红时，总多离别。",
    "home_page_url": "https://fairyxxx.github.io",
    "items": [
        {
            "id": "https://fairyxxx.github.io/2023/07/11/Docker%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/",
            "url": "https://fairyxxx.github.io/2023/07/11/Docker%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/",
            "title": "Docker基础",
            "date_published": "2023-07-11T08:30:09.483Z",
            "content_html": "<p><a name=\"eSQ51\"></a></p>\n<h1 id=\"docker简介\"><a class=\"markdownIt-Anchor\" href=\"#docker简介\">#</a> Docker 简介</h1>\n<p>Docker 是一个用于 构建、运行、传送 、应用程序的平台<br>\n<a name=\"M5fb9\"></a></p>\n<h1 id=\"docker和虚拟机的区别\"><a class=\"markdownIt-Anchor\" href=\"#docker和虚拟机的区别\">#</a> Docker 和虚拟机的区别</h1>\n<p><a name=\"xRLGg\"></a></p>\n<h2 id=\"虚拟机\"><a class=\"markdownIt-Anchor\" href=\"#虚拟机\">#</a> 虚拟机：</h2>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2023/png/34696645/1689045667982-2c694651-3c2d-40ff-ae9f-edf18718f47e.png#averageHue=%231273c3&amp;clientId=ube4b60be-7a10-4&amp;from=paste&amp;height=515&amp;id=ua77292ce&amp;originHeight=644&amp;originWidth=1571&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=292740&amp;status=done&amp;style=none&amp;taskId=ue00b0250-28e0-4e25-a627-11628332a16&amp;title=&amp;width=1256.8\" alt=\"image.png\"></li>\n<li>虚拟机在一定程度上实现了资源的整合，可以将一台服务器的计算能力、存储能力、网络资源分配给多个逻辑服务器，实现多台服务器的功能</li>\n<li>缺点：每台虚拟机都需要占用大量的资源，启动速度慢，大部分情况下，一台服务器上只需要运行一个主要对外提供服务的应用程序就可以了，并不需要一个完整的操作系统。</li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2023/png/34696645/1689046632032-71dd91b0-7037-4573-b271-e040187cfb48.png#averageHue=%231372c4&amp;clientId=ube4b60be-7a10-4&amp;from=paste&amp;height=381&amp;id=uddce8c67&amp;originHeight=476&amp;originWidth=766&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=179338&amp;status=done&amp;style=none&amp;taskId=u460e5ac8-d55c-4b3c-a164-38a085a3b2b&amp;title=&amp;width=612.8\" alt=\"image.png\"><br>\n<a name=\"fm6g0\"></a></li>\n</ul>\n<h2 id=\"容器\"><a class=\"markdownIt-Anchor\" href=\"#容器\">#</a> 容器：</h2>\n<p>Docker 和容器是两个不同的概念</p>\n<ul>\n<li>Docker 只是容器的一种实现，是一个容器化的解决方案和平台</li>\n<li>容器是一种虚拟化技术，和虚拟机类似也是一个独立的环境。和虚拟机不同的是，它并不需要在容器中运行一个完整的操作系统。</li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2023/png/34696645/1689046641835-16337b61-f871-4e8e-80c8-cad5a2566a30.png#averageHue=%230a6fbf&amp;clientId=ube4b60be-7a10-4&amp;from=paste&amp;height=385&amp;id=u6d6ba680&amp;originHeight=481&amp;originWidth=761&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=140750&amp;status=done&amp;style=none&amp;taskId=ufddc217b-1e8d-446f-aaf7-add7fa978f9&amp;title=&amp;width=608.8\" alt=\"image.png\"></li>\n</ul>\n<p><a name=\"HaT1V\"></a></p>\n<h1 id=\"基本原理和概念\"><a class=\"markdownIt-Anchor\" href=\"#基本原理和概念\">#</a> 基本原理和概念</h1>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2023/png/34696645/1689046877294-5e82a3e7-90a9-424f-be75-a388ba093da7.png#averageHue=%2395fdca&amp;clientId=ube4b60be-7a10-4&amp;from=paste&amp;height=564&amp;id=u17c59eb3&amp;originHeight=705&amp;originWidth=1589&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=305069&amp;status=done&amp;style=none&amp;taskId=u73128ec6-44ff-4234-a417-e0b64fed81a&amp;title=&amp;width=1271.2\" alt=\"image.png\"></p>\n<ul>\n<li><code>images</code>  镜像，镜像是一个只读的模板，它可以用来创建容器</li>\n<li><code>containers</code>  容器，容器是 Docker 的运行实例，它提供一个独立的可移植的环境，可以在这个环境中运行应用程序。</li>\n</ul>\n<p>Docker 仓库：是用来存储 Docker 镜像的地方，最流行和最常用的仓库就是 <code>Dockerhub</code> ：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWItc3RhZ2UuZG9ja2VyLmNvbS8=\">https://hub-stage.docker.com/</span><br>\n<a name=\"vqvXG\"></a></p>\n<h1 id=\"docker的安装\"><a class=\"markdownIt-Anchor\" href=\"#docker的安装\">#</a> Docker 的安装</h1>\n<p>Docker 官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZG9ja2VyLmNvbS8=\">https://www.docker.com/</span><br />Windows 系统：需要开启 <code>Hyper-V</code> <br /> <code>docker version</code>  查看版本信息<br /> Docker 是使用 <code>Client-Server</code>  架构模式</p>\n<ul>\n<li><code>Docker Client</code>  和 <code>Docker Daemon</code>  之间通过 <code>Socket</code>  或者 <code>RESTful API</code>  进行通信</li>\n<li><code>Docker Daemon</code>  就是服务端的守护进程，负责管理 Docker 的各种资源</li>\n<li><code>Docker Client</code>  负责向 <code>Docker Daemon</code>  发送请求， <code>Docker Daemon</code>  收到请求之后进行处理，然后将结果返回给 <code>Docker Client</code> <br>\n<a name=\"pnJTj\"></a></li>\n</ul>\n<h1 id=\"容器化和dockerfile\"><a class=\"markdownIt-Anchor\" href=\"#容器化和dockerfile\">#</a> 容器化和 <code>Dockerfile</code></h1>\n<p>容器化：将应用程序打包成容器，然后在容器中运行应用程序的过程，可分为三个步骤。</p>\n<ol>\n<li>创建一个 <code>Dockerfile</code></li>\n<li>使用 <code>Dockerfile</code>  构建镜像</li>\n<li>使用镜像创建和运行容器</li>\n</ol>\n<p><code>Dockerfile</code>  是一个文本文件，里面包含了一条条指令，用来告诉 Docker 如何来构建镜像。<br>\n<a name=\"hbiQX\"></a></p>\n<h1 id=\"docker-compose\"><a class=\"markdownIt-Anchor\" href=\"#docker-compose\">#</a> Docker Compose</h1>\n<p>Docker Compose</p>\n<ul>\n<li>用于定义和运行多容器 Docker 应用程序的工具</li>\n<li>使用 <code>YAML</code>  文件来配置应用程序的服务</li>\n<li>一条命令即可创建并启动所有服务<br>\n<a name=\"g8lpD\"></a></li>\n</ul>\n<h1 id=\"docker常用命令\"><a class=\"markdownIt-Anchor\" href=\"#docker常用命令\">#</a> Docker 常用命令</h1>\n<p><a name=\"TZ7xC\"></a></p>\n<h2 id=\"镜像管理\"><a class=\"markdownIt-Anchor\" href=\"#镜像管理\">#</a> 镜像管理：</h2>\n<ul>\n<li><code>docker image ls / docker images</code>  查看镜像</li>\n<li><code>docker search [image]</code>  检索镜像</li>\n<li><code>docker pull [image]</code>  拉取镜像</li>\n<li><code>docker push [image]</code>  上传镜像</li>\n<li><code>docker save [image] -o FILE </code>  保存镜像</li>\n<li><code>docker save [image] &gt; FILE</code>  保存镜像\n<ul>\n<li><code>docker save geekhour/hello-docker:latest &gt; hello-docker.tar</code></li>\n</ul>\n</li>\n<li><code>docker load -i FILE</code>  导入镜像</li>\n<li><code>docker rmi [image] / docker image rm [image]</code>  删除镜像</li>\n<li><code>docker image prune</code>  删除不再使用的镜像</li>\n<li><code>docker import [URL/FILE]</code>  将文件系统导入为镜像</li>\n<li><code>docker commit [container] [image]</code>  从容器创建镜像<br>\n<a name=\"xjWpx\"></a></li>\n</ul>\n<h2 id=\"网络管理\"><a class=\"markdownIt-Anchor\" href=\"#网络管理\">#</a> 网络管理：</h2>\n<ul>\n<li><code>docker network ls</code>  列出可用网络</li>\n<li><code>docker network inspect [network]</code>  查看网络详细信息</li>\n<li><code>docker network create [network]</code>  创建一个新的网络</li>\n<li><code>docker network rm [network]</code>  删除一个网络</li>\n<li><code>docker network connect [network] [container]</code>  将容器连接到网络</li>\n<li><code>docker network disconnect [network] [container]</code>  将容器从网络断开<br>\n<a name=\"VJ4Ya\"></a></li>\n</ul>\n<h2 id=\"插件管理\"><a class=\"markdownIt-Anchor\" href=\"#插件管理\">#</a> 插件管理：</h2>\n<ul>\n<li><code>docker plugin ls</code>  列出插件</li>\n<li><code>docker plugin install [plugin]</code>  安装插件</li>\n<li><code>docker plugin enable [plugin]</code>  启用插件</li>\n<li><code>docker plugin disable [plugin]</code>  禁用插件</li>\n<li><code>docker plugin rm [plugin]</code>  卸载插件<br>\n<a name=\"rVVI2\"></a></li>\n</ul>\n<h2 id=\"容器管理\"><a class=\"markdownIt-Anchor\" href=\"#容器管理\">#</a> 容器管理：</h2>\n<ul>\n<li><code>docker create [image]</code>  创建容器（仅创建，不运行）</li>\n<li><code>docker run [image]</code>  创建并运行容器</li>\n<li><code>docker start [container]</code>  启动容器</li>\n<li><code>docker stop [container]</code>  停止容器</li>\n<li><code>docker restart [container]</code>  重启容器</li>\n<li><code>docker ps / docker container ls</code>  列出正在运行的容器</li>\n<li><code>docker ps -a / docker container ls -a</code>  列出所有容器</li>\n<li><code>docker exec -it [container] bash / docker attach [container]</code>  以交互模式进入容器</li>\n<li><code>docker export [container] -o FILE / docker export [container] &gt; FILE</code>  导出容器</li>\n<li><code>docker import FILE</code>  导入容器快照</li>\n<li><code>docker logs [container]</code>   查看容器⽇志</li>\n<li><code>docker rm [container] / docker container rm [container]  </code>   删除容器</li>\n<li><code>docker port [container]</code>    查看容器端⼝映射</li>\n<li><code>docker top [container]</code>   显示容器内进程</li>\n<li><code>docker cp [FILE] [container]:[PATH]</code>    复制本地⽂件 到容器内的指定路径</li>\n<li><code>docker diff [container]</code>   显示容器内的变化</li>\n<li><code>docker stats [container]</code>    显示容器资源使⽤情况<br>\n<a name=\"fywXl\"></a></li>\n</ul>\n<h2 id=\"数据卷管理\"><a class=\"markdownIt-Anchor\" href=\"#数据卷管理\">#</a> 数据卷管理：</h2>\n<ul>\n<li><code>docker volume create [volume]</code>   创建⼀个数据卷</li>\n<li><code>docker volume ls</code>    查看数据卷</li>\n<li><code>docker volume inspect [volume]</code>    查看数据卷详细信息</li>\n<li><code>docker volume rm [volume]</code>    删除数据卷</li>\n<li><code>docker volume prune</code>    删除所有未使⽤的数据卷<br>\n<a name=\"IktNY\"></a></li>\n</ul>\n<h2 id=\"日常操作\"><a class=\"markdownIt-Anchor\" href=\"#日常操作\">#</a> 日常操作：</h2>\n<ul>\n<li><code>docker info</code>  查看 docker 系统信息</li>\n<li><code>docker version</code>    查看 Docker 版本</li>\n<li><code>docker --help</code>    查看 Docker 帮助⽂档</li>\n<li><code>docker [command] --help</code>    查看 Docker 命令帮助</li>\n<li><code>docker login/logout</code>    登录 / 退出 DockerHub<br>\n<a name=\"CwKfo\"></a></li>\n</ul>\n<h2 id=\"容器运行\"><a class=\"markdownIt-Anchor\" href=\"#容器运行\">#</a> 容器运行：</h2>\n<ul>\n<li><code>docker run [options] image [command] [arg...]</code></li>\n<li><code>docker run --name [name] [image]</code>     创建 运⾏并命名容器</li>\n<li><code>docker run -d [image]</code>    创建⼀个容器并后台运⾏</li>\n<li><code>docker run -p [hostPort]:[containerPort] [image]</code>    创建⼀个容器并指定端⼝映射</li>\n<li><code>docker run -P [image]</code>    创建⼀个容器并指定端⼝映射（随机分配）</li>\n<li><code>docker run -e [key=value] [image]</code>   创建⼀个容器并指定环境变量</li>\n<li><code>docker run -w [PATH] [image]</code>    创建⼀个容器并指定⼯作⽬录</li>\n<li><code>docker run -name [name] [image]</code>    创建⼀个容器并指定容器名称</li>\n<li><code>docker run [image] [command]</code>   创建⼀个容器并在容器中执⾏命令（交互模式）</li>\n<li><code>docker run -d -p [hostPort]:[containerPort] -e [key=value] -w [PATH] --name [name] [image]</code>   创建⼀个容器，并指定容器名称，后台运⾏，端⼝映射 环境变量，⼯作⽬录\n<ul>\n<li><code>docker run -it nginx:latest /bin/bash</code>    使⽤镜像 <code>nginx:latest</code>  来启动⼀个容器， 并在容器内执⾏交互式 <code>bash shell  </code></li>\n<li><code>docker run -it -p 3316:3306 -v /data:/data -d mysql:latest </code>   创建⼀个 mysql 容器，后台模式启动，主机 <code>80</code>  端⼝ 映射到容器 <code>80</code>  端⼝，主机 <code>/data</code>  ⽬录映射到容器 <code>/data</code>  ⽬录<br>\n<a name=\"Hic4g\"></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"常用dockerfile指令\"><a class=\"markdownIt-Anchor\" href=\"#常用dockerfile指令\">#</a> 常用 <code>Dockerfile</code>  指令：</h2>\n<ul>\n<li><code>FROM [base_image]</code>    指定基础镜像，必须为 Dockerfile 的第⼀条指令；</li>\n<li><code>ADD</code>    ⽤于将⽂件复制到镜像中，源可以使 URL 或者本地⽂件，也可 以⼀个压缩⽂件（⾃动解压）；</li>\n<li><code>COPY [--chown=&lt;user&gt;:&lt;group&gt;] [源路径] [⽬标路径]</code>  ⽤于将⽂件拷⻉到镜像中，源只能是本地⽂件；</li>\n<li><code>WORKDIR [PATH] </code>   ⽤于指定⼯作⽬录，可以使⽤多个 <code>WORKDIR</code>  指令，如果使⽤ 相对路径，则是相对于上⼀条 <code>WORKDIR</code>  指令所指定的⽬录；</li>\n<li><code>ENV &lt;key&gt; &lt;value&gt; / ENV &lt;key&gt;=&lt;value1&gt; &lt;key2&gt;=&lt;value2&gt;...</code>  ⽤于设置环境变量</li>\n<li><code>CMD &lt;命令&gt; /  CMD [&quot;可执⾏⽂件&quot;, &quot;参数1&quot;, &quot;参数2&quot; ...]</code>   ⽤于指定默认的容器主进程，每个 <code>Dockerfile</code>  中只能有⼀条 <code>CMD</code>  指令，如果有多条，则只有最后⼀条会⽣效；</li>\n<li><code>VOLUME &lt;路径&gt; /  VOLUME [&quot;路径1&quot;, &quot;路径2&quot;...]</code>   ⽤于定义匿名卷（持久化⽬录）</li>\n</ul>\n",
            "tags": [
                "note"
            ]
        },
        {
            "id": "https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note4/",
            "url": "https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note4/",
            "title": "Nmap基础",
            "date_published": "2023-07-10T08:52:27.075Z",
            "content_html": "<p><a name=\"LjDCe\"></a></p>\n<h1 id=\"nmap的介绍与安装\"><a class=\"markdownIt-Anchor\" href=\"#nmap的介绍与安装\">#</a> Nmap 的介绍与安装</h1>\n<p>Nmap 介绍：</p>\n<ul>\n<li>Nmap 是一款开源、免费的网络探测、安全审计的工具。</li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1672104829214-c624e5d6-bc48-4a33-ad90-a3c006e5df9d.png#averageHue=%23fcfcfc&amp;clientId=ub64b62f9-a6a7-4&amp;from=paste&amp;height=409&amp;id=u0f2a314d&amp;originHeight=409&amp;originWidth=662&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=89269&amp;status=done&amp;style=none&amp;taskId=uf72fbfe0-7475-4cd1-b11f-1ad5e31a29b&amp;title=&amp;width=662\" alt=\"image.png\"></li>\n<li>通过 Nmap 探测服务器存活以及开发的服务，以及对目标进行安全审计。</li>\n</ul>\n<p>Nmap 获取：</p>\n<ul>\n<li>Nmap 的获取，建议无论任何软件的获取，都是通过对应官网获取。</li>\n<li>Namp 官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ubWFwLm9yZy8=\">https://nmap.org/</span></li>\n</ul>\n<p>Nmap 安装（Windows）：</p>\n<ul>\n<li>Nmap 下载界面：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ubWFwLm9yZy9kb3dubG9hZC5odG1sI3dpbmRvd3M=\">https://nmap.org/download.html#windows</span>，打开之后直接下载，双击 exe 文件安装</li>\n</ul>\n<p>Nmap 安装（linux）：</p>\n<ul>\n<li>对于大多数 Linux，可以直接利用 RPM 包管理直接安装，以下给出对应命令操作。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ubWFwLm9yZy9kb3dubG9hZC5odG1sI2xpbnV4LXJwbQ==\">https://nmap.org/download.html#linux-rpm</span></li>\n<li>\n<br />\n</li>\n</ul>\n<p><a name=\"mZeTA\"></a></p>\n<h1 id=\"nmap列举远程机器开放的端口\"><a class=\"markdownIt-Anchor\" href=\"#nmap列举远程机器开放的端口\">#</a> Nmap 列举远程机器开放的端口</h1>\n<p>Nmap 列举远程机器开放的端口原理</p>\n<ul>\n<li>Nmap 扫描原理图：</li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1672112381686-f249212b-b928-4afc-bdc1-dd1102908f18.png#averageHue=%23fafafa&amp;clientId=uc7b4bd5d-19ef-4&amp;from=paste&amp;height=270&amp;id=uffc958ad&amp;originHeight=338&amp;originWidth=854&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=89376&amp;status=done&amp;style=none&amp;taskId=ua812751a-fee1-4326-a2d7-6132a7fdcd1&amp;title=&amp;width=683.2\" alt=\"image.png\"></li>\n<li>首先判断 nmap 输入的命令行中是否包含域名，如果包含需要利用 DNS 服务器进行域名解析，然后发送 ICMP Echo Request 来探测主机存活性。</li>\n<li>\n<br />\n</li>\n</ul>\n<p>使用 <code>nmap scanme.nmap.org</code>  来列举该站点的端口信息。<br />nmap 进行探测之前要把域名通过 DNS 服务器解析为 IP 地址，我们也可以使用指定的 DNS 服务器进行解析。使用 <code>--dns-servers</code>  参数来指定。<br />对于已经知道主机存活或者防火墙开启的机器，可以使用 <code>-Pn</code>  参数来停止探测之前的 ICMP 请求。以达到不触发防火墙安全机制。<br />对于默认的端口范围，并不能满足日常工作需要。可以使用 <code>-p m-n</code>  来指定探测端口范围为 m-n 之间的所有端口。<br />端口状态：</p>\n<ul>\n<li>open：表示端口处于开放状态</li>\n<li>closed：表示端口处于关闭状态</li>\n<li>Filterd：表示端口处于过滤无法收到返回的 probe 状态</li>\n<li>UnFiltered：表示端口收到返回的 probe，但是无法确认</li>\n<li>Opend/UnFiltered：表示端口处于开放或者未过滤状态</li>\n<li>Closed/UnFiltered：表示端口处于关闭或者未过滤状态</li>\n</ul>\n<p>Nmap 扫描技术查看：</p>\n<ul>\n<li>在命令行中，输入 <code>nmap -h</code>  来查看 nmap 自带的帮助信息</li>\n<li>\n<br />\n</li>\n</ul>\n<p><a name=\"jx6uT\"></a></p>\n<h1 id=\"nmap识别目标机器上服务的指纹\"><a class=\"markdownIt-Anchor\" href=\"#nmap识别目标机器上服务的指纹\">#</a> Nmap 识别目标机器上服务的指纹</h1>\n<p>服务指纹：</p>\n<ul>\n<li>为了确保有一个成功的渗透测试或网络设备监控，必须需要知道目标系统中服务的指纹信息。服务指纹信息包括服务端口、服务名和版本等</li>\n<li>通过分析目标往 Nmap 发送的数据包中某些协议标记、选项和数据，我们可以推断发送这些数据包的操作系统等</li>\n<li>nmap 通过向目标主机发送多个 UDP 与 TCP 数据包并分析其响应来进行操作系统指纹识别工作。</li>\n</ul>\n<p>Nmap 识别服务指纹：</p>\n<ul>\n<li>使用命令  <code>nmap -sV IP</code>  地址来识别目标机器的服务信息</li>\n</ul>\n<p>Nmap 侵略性的探测</p>\n<ul>\n<li>使用命令 <code>nmap -A -v -T4 IP地址</code> 来探测目标机器的操作系统、服务等信息\n<ul>\n<li><code>-A</code>  表示使用侵略性的策略探测</li>\n<li><code>-v</code>  持续输出返回解析</li>\n<li><code>-T4</code>  表示加快速度来探测，范围：1~5</li>\n</ul>\n</li>\n<li>使用 <code>nmap -sC -sV -O IP地址</code> 来探测目标机器的操作系统、服务信息、\n<ul>\n<li><code>-sC</code>  参数表示使用 Nmap 脚本探测</li>\n<li><code>-sV</code> ：表示探测目标机器上的服务信息</li>\n<li><code>-O</code> ：表示探测目标机器的操作系统信息<br>\n<a name=\"xAoCA\"></a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"nmap发现局域网中存活主机\"><a class=\"markdownIt-Anchor\" href=\"#nmap发现局域网中存活主机\">#</a> Nmap 发现局域网中存活主机</h1>\n<p>主机发现：</p>\n<ul>\n<li>一个局域网中肯定是连接着多台设备，那么我们如何获取那些设备正在开机状态呢？\n<ul>\n<li>使用 <code>ping IP地址</code> 进行探测，但是如果一个网络很大的情况下，这样的手工探测显得很费劲。</li>\n</ul>\n</li>\n<li>可以使用不同的工具来进行批量探测，在探测之前需要明白 CIDR 的含义\n<ul>\n<li>CIDR（无类别间路由，Classless Inter-Domain Routing），可以快速表示一个网络</li>\n<li>比如：172.16.1.1/24 表示在 172.16.1.1~172.16.1.255 之间的所有主机 IP 地址</li>\n</ul>\n</li>\n</ul>\n<p>Nmap 主机发现：</p>\n<ul>\n<li>使用 Nmap 命令： <code>nmap -sP CIDR</code>  对该网络中所有主机进行 ping 扫描，以探测主机存活性。扫描过程中使用了 TCP SYN 扫描、ICMP echo Request 来探测主机存活。</li>\n<li>使用 Nmap 命令： <code>nmap -sn CIDR</code>  对该网络中所有主机进行 ping 扫描，以探测主机存活性。</li>\n<li>结果输出：\n<ul>\n<li>使用 Nmap 命令： <code>nmap -sn CIDR -oX test.xml</code>  对该网络中所有主机进行 ping 扫描，以探测主机存活性。</li>\n<li>同时将结果输出到 test.xml 文件中，以便后续使用。</li>\n<li>\n<br />\n</li>\n</ul>\n</li>\n</ul>\n<p><a name=\"xIXSI\"></a></p>\n<h1 id=\"nmap端口探测技巧\"><a class=\"markdownIt-Anchor\" href=\"#nmap端口探测技巧\">#</a> Nmap 端口探测技巧</h1>\n<p>实际场景：</p>\n<ul>\n<li>在实际环境中，当系统管理员对设备进行管理时，或者渗透测速人员对设备进行检测时，并不一定对所有的服务进行操作。极有可能是对某个或某个范围内的服务进行检测。\n<ul>\n<li>如果对所有服务进行探测，那么就会出现耗时长，费力不讨好的情况。针对这样的情况，我们很有必要了解如何使用 Nmap 来更加灵活的进行服务探测，避免全端口探测对服务器造成压力。</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "note"
            ]
        },
        {
            "id": "https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note3/",
            "url": "https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note3/",
            "title": "网络安全",
            "date_published": "2023-07-10T08:40:23.943Z",
            "content_html": "<p><a name=\"D9yDD\"></a></p>\n<h1 id=\"1-网络连接的核心-ip地址和端口\"><a class=\"markdownIt-Anchor\" href=\"#1-网络连接的核心-ip地址和端口\">#</a> 1、网络连接的核心 - IP 地址和端口</h1>\n<p><a name=\"JmUCx\"></a></p>\n<h2 id=\"内网局域网ip和公网互联网ip\"><a class=\"markdownIt-Anchor\" href=\"#内网局域网ip和公网互联网ip\">#</a> 内网（局域网）IP 和公网（互联网）IP</h2>\n<p>内网 IP：路由以内的网络，可以连接互联网，但是互联网无法直接连接内网（需要端口映射）</p>\n<ul>\n<li>优点：安全，解决 IPv4 地址耗尽问题</li>\n<li>缺点：互联网无法直接连接内网</li>\n</ul>\n<p>公网 IP：顾名思义，互联网 IP 地址</p>\n<ul>\n<li>优点：可以直接和互联网资源互通</li>\n<li>缺点：安全性较低，IPv4 地址资源耗尽</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig</span><br></pre></td></tr></table></figure>\n<p><a name=\"necXZ\"></a></p>\n<h2 id=\"tcp逻辑端口\"><a class=\"markdownIt-Anchor\" href=\"#tcp逻辑端口\">#</a> TCP 逻辑端口</h2>\n<p>端口是应用程序（服务）在计算机中的唯一标识<br />“端口” 英文 port ，可以认为是设备与外界通讯交流的出口。端口分为虚拟端口和物理端口，其中虚拟端口指计算机内部或交换机路由器内的端口，不可见。<br />源端口（客户机）端口随机，目标端口（服务器）端口固定开启监听。端口范围 0~65535</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat <span class=\"literal\">-ano</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -anltup</span><br></pre></td></tr></table></figure>\n<p><a name=\"QWES9\"></a></p>\n<h1 id=\"2-http超文本传输协议\"><a class=\"markdownIt-Anchor\" href=\"#2-http超文本传输协议\">#</a> 2、HTTP 超文本传输协议</h1>\n<p>传输协议定义了浏览器和客户端传输数据的格式<br>\n<a name=\"NMOd9\"></a></p>\n<h2 id=\"http协议特点\"><a class=\"markdownIt-Anchor\" href=\"#http协议特点\">#</a> HTTP 协议特点：</h2>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670904377550-68946cd8-af9b-483f-8f0d-c28fb8be995c.png#averageHue=%23c7daec&amp;clientId=u6d143f45-fb19-4&amp;from=paste&amp;height=128&amp;id=u83313d61&amp;originHeight=160&amp;originWidth=684&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=64967&amp;status=done&amp;style=none&amp;taskId=u9478f9b4-52e6-4d2f-a6b3-60174f1df2d&amp;title=&amp;width=547.2\" alt=\"image.png\"></li>\n<li>基于 tcp/ip 协议</li>\n<li>默认端口号为 80</li>\n<li>请求和响应一 一对应</li>\n<li>每次请求相互独立，是无状态协议<br>\n<a name=\"zxFqD\"></a></li>\n</ul>\n<h2 id=\"请求消息-request\"><a class=\"markdownIt-Anchor\" href=\"#请求消息-request\">#</a> 请求消息 - request：</h2>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670904499437-808aaebc-40cd-4f06-a734-7bc33941d95f.png#averageHue=%23fdfdf9&amp;clientId=u6d143f45-fb19-4&amp;from=paste&amp;height=308&amp;id=u51c54c7f&amp;originHeight=385&amp;originWidth=560&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=193541&amp;status=done&amp;style=none&amp;taskId=ucffdad5b-1e48-40d0-b6ee-91d77e2563e&amp;title=&amp;width=448\" alt=\"image.png\"></li>\n<li>HTTP 常见有八种（所有不止八种）请求方式，常见 GET、POST</li>\n<li>GET 请求：请求参数在 URL 地址中，URL 有长度限制  GET 请求只能传输字符数据</li>\n<li>POST 请求：请求参数在请求体中，无大小限制   POST 请求可以传输字符或字节数</li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670904542458-fb651a48-4193-4cc6-9d7c-4ecd61f66a38.png#averageHue=%23fefefb&amp;clientId=u6d143f45-fb19-4&amp;from=paste&amp;height=248&amp;id=ud3841d0c&amp;originHeight=310&amp;originWidth=676&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=186096&amp;status=done&amp;style=none&amp;taskId=uc8420f51-82f3-4779-8a17-0a7f2eb916c&amp;title=&amp;width=540.8\" alt=\"image.png\"></li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670904549649-8b376180-08b6-4689-aecd-9fdd3bf288c8.png#averageHue=%23fefefa&amp;clientId=u6d143f45-fb19-4&amp;from=paste&amp;height=295&amp;id=u30a717f3&amp;originHeight=369&amp;originWidth=685&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=220833&amp;status=done&amp;style=none&amp;taskId=u05eff6a0-74bd-4d43-a365-da53a419639&amp;title=&amp;width=548\" alt=\"image.png\"><br>\n<a name=\"o7INg\"></a></li>\n</ul>\n<h3 id=\"请求头\"><a class=\"markdownIt-Anchor\" href=\"#请求头\">#</a> 请求头：</h3>\n<ul>\n<li>Host：请求主机域名 / IP 地址</li>\n<li>User-Agent：告诉服务器浏览器的版本信息，供服务器解决浏览器兼容问题</li>\n<li>Accept：传输文件类型</li>\n<li>Referer：告诉服务器从哪里来（防盗链）</li>\n<li>Cookie：存储在用户本地终端上的数据<br>\n<a name=\"hAU9d\"></a></li>\n</ul>\n<h2 id=\"响应消息-response\"><a class=\"markdownIt-Anchor\" href=\"#响应消息-response\">#</a> 响应消息 - response：</h2>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670910989765-446a101f-1d5a-49e1-9ce8-c0eb83d2bc04.png#averageHue=%23fefdfa&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=257&amp;id=u46c76a48&amp;originHeight=321&amp;originWidth=673&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=162765&amp;status=done&amp;style=none&amp;taskId=u74a9c802-ca5b-47a8-9121-5b6a90eaecd&amp;title=&amp;width=538.4\" alt=\"image.png\"></li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670910995404-520039fd-5f0a-4048-a84a-686cf705e5e7.png#averageHue=%23f8f8f7&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=333&amp;id=uaf1e6437&amp;originHeight=416&amp;originWidth=470&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=144641&amp;status=done&amp;style=none&amp;taskId=uea0ad49c-3029-4e58-acad-14bfcc97ab2&amp;title=&amp;width=376\" alt=\"image.png\"><br>\n<a name=\"dYXPE\"></a></li>\n</ul>\n<h3 id=\"响应状态码\"><a class=\"markdownIt-Anchor\" href=\"#响应状态码\">#</a> 响应状态码：</h3>\n<ul>\n<li>响应状态码：服务器告诉浏览器本次请求和响应的状态</li>\n<li>1xx：服务器接收浏览器消息未完成，发送 1xx 状态码</li>\n<li>2xx：成功， 200</li>\n<li>3xx：重定向，302，304（访问缓存）</li>\n<li>4xx：客户端错误，404（没有找到对应的资源），405（请求方法不被允许）</li>\n<li>5xx：服务器错误，500（服务器内部出现异常）<br>\n<a name=\"u1lD7\"></a></li>\n</ul>\n<h1 id=\"3-kali安装docker\"><a class=\"markdownIt-Anchor\" href=\"#3-kali安装docker\">#</a> 3、kali 安装 docker</h1>\n<ul>\n<li>kali 切换 root 用户： <code>sudo su</code></li>\n<li>kali 安装 docker： <code>apt install docker.io</code> <br>\n<a name=\"pMs7c\"></a></li>\n</ul>\n<h1 id=\"4-快速搭建漏洞靶场\"><a class=\"markdownIt-Anchor\" href=\"#4-快速搭建漏洞靶场\">#</a> 4、快速搭建漏洞靶场</h1>\n<p><a name=\"TR6ZX\"></a></p>\n<h2 id=\"快速搭建dvwa\"><a class=\"markdownIt-Anchor\" href=\"#快速搭建dvwa\">#</a> 快速搭建 DVWA</h2>\n<ul>\n<li>1. 下载并安装 PHPstudy：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueHAuY24vZG93bmxvYWQuaHRtbA==\">https://www.xp.cn/download.html</span></li>\n<li>2. 将解压后的 DVWA 源代码放置 phpstudy 安装目录的 WWW 文件夹</li>\n<li>3. 进入 DVWA/config 目录，将 config,inc.php.dist 最后的.dst 删去</li>\n<li>4. 打开刚刚重命名的 config.inc.php 文件，修改 db_user 和 db_password</li>\n<li>5. 浏览器访问<span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMS9EVldBL3NldHVwLnBocA==\"> http://127.0.0.1/DVWA/setup.php</span>，点击最下方的 Create Database</li>\n<li>6. 浏览器访问<span class=\"exturl\" data-url=\"aHR0cDovLzEyNy4wLjAuMS9EVldBLw==\"> http://127.0.0.1/DVWA/</span>，输入用户名 admin，密码 password 登录 dvwa<br>\n<a name=\"XQ9Yj\"></a></li>\n</ul>\n<h2 id=\"docker快速搭建漏洞靶场\"><a class=\"markdownIt-Anchor\" href=\"#docker快速搭建漏洞靶场\">#</a> docker 快速搭建漏洞靶场</h2>\n<p><a name=\"uyXyh\"></a></p>\n<h3 id=\"docker的基础命令\"><a class=\"markdownIt-Anchor\" href=\"#docker的基础命令\">#</a> docker 的基础命令</h3>\n<ul>\n<li>启动 docker 服务： <code>systemctl start docker</code></li>\n<li>重启 docker 服务： <code>systemctl restart docker</code></li>\n<li>关闭 docker 服务： <code>docker service docker stop</code></li>\n<li>列出镜像： <code>docker images</code></li>\n<li>列出容器： <code>docker ps -a / docker container ls -a</code></li>\n<li>删除镜像： <code>docker rmi [image_id]</code></li>\n<li>删除容器： <code>docker rm [container_id]</code> <br>\n<a name=\"VCWNs\"></a></li>\n</ul>\n<h3 id=\"docker搭建dvwa靶场\"><a class=\"markdownIt-Anchor\" href=\"#docker搭建dvwa靶场\">#</a> docker 搭建 DVWA 靶场</h3>\n<ul>\n<li>DVWA 是 OWASP 官方编写的 PHP 网站，包含了各种网站常见漏洞，可以学习攻击及修复方式。</li>\n<li>下载镜像： <code>docker pull vulnerables/web-dvwa</code></li>\n<li>通过镜像启动容器： <code>docker  run --rm -it -p 80:80 vulnerables/web-dvwa</code> <br>\n<a name=\"xvuMn\"></a></li>\n</ul>\n<h3 id=\"vulhub搭建漏洞复现\"><a class=\"markdownIt-Anchor\" href=\"#vulhub搭建漏洞复现\">#</a> vulhub 搭建漏洞复现</h3>\n<ul>\n<li>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly92dWxodWIub3Jn\">https://vulhub.org</span></li>\n<li>Download the latest version of the vulhub（下载最新版本的 vulhub）： <code>git clone [https://github.com/vulhub/vulhub.git](https://github.com/vulhub/vulhub.git)</code></li>\n<li>Entry vulnerability directory： <code>cd /path/to/vuln/</code></li>\n<li>Compile (optional) （编译）： <code>docker-compose build</code></li>\n<li>开启靶场容器： <code>docker -compose up -d</code></li>\n<li>关闭靶场容器： <code>docker -compose down</code></li>\n</ul>\n<p><a name=\"bklXI\"></a></p>\n<h1 id=\"5-漏洞\"><a class=\"markdownIt-Anchor\" href=\"#5-漏洞\">#</a> 5、漏洞</h1>\n<p><a name=\"SPZB1\"></a></p>\n<h2 id=\"常见的网址漏洞\"><a class=\"markdownIt-Anchor\" href=\"#常见的网址漏洞\">#</a> 常见的网址漏洞</h2>\n<ul>\n<li>SQL 注入：泄露破坏数据库，数据库中可能有账号密码等敏感信息</li>\n<li>命令执行：获取目标机器命令权限，执行非法命令，破坏或控制受害机</li>\n<li>文件上传：上传后门病毒木马到网站中，破坏网站甚至系统<br>\n<a name=\"Wq5Vn\"></a></li>\n</ul>\n<h2 id=\"命令执行漏洞详解\"><a class=\"markdownIt-Anchor\" href=\"#命令执行漏洞详解\">#</a> 命令执行漏洞详解</h2>\n<p>一般出现这种漏洞，是因为应用系统从设计上需要给用户提供指定的远程命令操作的接口，例如常见的路由器、防火墙、入侵检测等设备的 web 管理界面上，一般会给用户提供一个 ping 操作的 web 界面，用户从 web 界面输入目标 ip，提交后 后台会对该 IP 地址进行一次 ping 测试并返回测试结果。如果设计者在完成该功能时，没有做严格的安全控制，则可能会导致攻击者通过该接口提交恶意命令，让后台服务器执行，从而获取后台服务器权限。<br>\n<a name=\"XH9IS\"></a></p>\n<h3 id=\"command-injection命令执行注入漏洞\"><a class=\"markdownIt-Anchor\" href=\"#command-injection命令执行注入漏洞\">#</a> Command Injection 命令执行（注入）漏洞</h3>\n<ul>\n<li>漏洞利用初探，修改 requests 请求参数远程执行命令（网站有网络连接检测功能，在输入 IP 地址后再拼接其它命令。）</li>\n<li>执行： <code>127.0.0.1 &amp; whoami</code>      （&amp; 为命令拼接符，通用的）\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670911990569-19245ad5-906b-450c-9866-c1c98338b5f9.png#averageHue=%23f5f5f5&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=267&amp;id=ufcd1c1d3&amp;originHeight=334&amp;originWidth=957&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=90651&amp;status=done&amp;style=none&amp;taskId=u120da602-2f54-465e-9c38-45ff508314b&amp;title=&amp;width=765.6\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>Linux 中： <code>rm -rf /  </code>    删除操作系统中所有内容，包括操作系统（命令执行需要权限的限制）</li>\n<li><code>whoami</code>  ：所有操作系统都可使用（目标网站所使用的操作系统可能不明确）<br>\n<a name=\"wNeYl\"></a></li>\n</ul>\n<h3 id=\"command-injection防御\"><a class=\"markdownIt-Anchor\" href=\"#command-injection防御\">#</a> Command Injection 防御</h3>\n<ul>\n<li>low 模式下的源码（无任何防御措施）\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912082628-51013e3d-74d6-49a7-bdd5-ee7ea5950d40.png#averageHue=%23fdfaf9&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=377&amp;id=u323f4613&amp;originHeight=471&amp;originWidth=1491&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=146878&amp;status=done&amp;style=none&amp;taskId=u18c60de2-ee26-474a-a66a-bbc957fb9f8&amp;title=&amp;width=1192.8\" alt=\"image.png\"></li>\n<li>防御命令执行的最高效的方法，就是过滤命令连接符（将这些符号替换成空，或判断用户输入这些符号就终止执行）</li>\n</ul>\n</li>\n<li>命令连接符：|    ;    &amp;    ||   &amp;&amp;\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912138202-bf94ef8b-c625-4d4d-9864-a141deb80d44.png#averageHue=%23fefdfd&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=224&amp;id=u745c3209&amp;originHeight=280&amp;originWidth=642&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=119521&amp;status=done&amp;style=none&amp;taskId=u6a87994c-5659-47cd-8fc0-f2c50cad52e&amp;title=&amp;width=513.6\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>medium 模式下的源码（只防御了部分的命令连接符）\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912220030-1922115a-f03d-41cd-9b57-cfcb1fa215d8.png#averageHue=%23fbf8f7&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=364&amp;id=u0ca5897d&amp;originHeight=455&amp;originWidth=1545&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=207028&amp;status=done&amp;style=none&amp;taskId=ud6247598-d0ab-46ba-af45-ef7967c3be9&amp;title=&amp;width=1236\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>渗透测试解决方法：\n<ul>\n<li>白盒测试：可以看到源代码，查看源代码过滤机制</li>\n<li>黑盒测试：看不到源代码，依次尝试常见命令连接符</li>\n</ul>\n</li>\n<li>high 模式下的源码（开发人员出现编写代码时的错误，而产生漏洞）\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912405352-53f402c4-4af0-4ef4-a13c-c01a9b7d32c6.png#averageHue=%23fbfbfb&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=390&amp;id=ua3ffcd00&amp;originHeight=488&amp;originWidth=1433&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=137823&amp;status=done&amp;style=none&amp;taskId=ua71526ef-403b-4ac9-9d2a-0a6c9c9368c&amp;title=&amp;width=1146.4\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>impossible 模式下的源码\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912419975-24423a2f-4134-4f7f-a575-31b7f8af7ec7.png#averageHue=%23fbfafa&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=358&amp;id=u4156484c&amp;originHeight=447&amp;originWidth=1597&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=239447&amp;status=done&amp;style=none&amp;taskId=u4449c73b-4826-4607-82d2-a9e8a607c2d&amp;title=&amp;width=1277.6\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>算法原理：\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912436544-03d3d5ef-f03e-4515-9b9d-d61588d3f6b9.png#averageHue=%23f5f0f0&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=290&amp;id=ucd2d5ca2&amp;originHeight=362&amp;originWidth=1601&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=274607&amp;status=done&amp;style=none&amp;taskId=u968569c7-a72a-4ff2-85b6-b2f66169641&amp;title=&amp;width=1280.8\" alt=\"image.png\"><br>\n<a name=\"qh8LS\"></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"sql注入漏洞详解\"><a class=\"markdownIt-Anchor\" href=\"#sql注入漏洞详解\">#</a> SQL 注入漏洞详解</h2>\n<p>SQL 注入（SQL injection），也称 SQL 注入或 SQL 注码，是发生于应用程序与数据库层的安全漏洞。是在输入的字符串之中注入 SQL 指令，在设计不良的程序当中忽略了字符检测，那么这些注入进去的恶意指令就会被数据库服务器误认为是正常的 SQL 指令而运行，因此遭到破坏或入侵。<br />SQL：Structured Query Language 结构化查询语言（用于操控数据库的语言）<br>\n<a name=\"lRINt\"></a></p>\n<h3 id=\"sql-injection-low-怎么判断sql注入漏洞\"><a class=\"markdownIt-Anchor\" href=\"#sql-injection-low-怎么判断sql注入漏洞\">#</a> SQL injection low 怎么判断 SQL 注入漏洞</h3>\n<ul>\n<li>输入： <code>1' and 1=1#</code> :\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912698434-e3137fab-8dc2-4d58-8ae6-0a333822812a.png#averageHue=%23fefdfd&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=245&amp;id=u942d925e&amp;originHeight=306&amp;originWidth=1039&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=157796&amp;status=done&amp;style=none&amp;taskId=u9a1bb75f-9e4c-4233-98dd-f165da3b5cb&amp;title=&amp;width=831.2\" alt=\"image.png\"></li>\n<li>#：作用是注释（移除）后续 SQL 语句</li>\n</ul>\n</li>\n<li>输入： <code>1' and 1=2#</code> :\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912761818-15d103f6-f7d4-4a1a-8375-6bf66cae36a0.png#averageHue=%23fefafa&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=354&amp;id=u9d8c1c74&amp;originHeight=442&amp;originWidth=1405&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=262076&amp;status=done&amp;style=none&amp;taskId=u8372db3f-5641-41d2-9658-31740117fad&amp;title=&amp;width=1124\" alt=\"image.png\"></li>\n<li>两次尝试 1=1 正常输出，1=2 错误输出，证明 SQL 语句生效，存在 SQL 注入漏洞。<br>\n<a name=\"ldUkO\"></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"sql-injection-怎么利用sql注入漏洞\"><a class=\"markdownIt-Anchor\" href=\"#sql-injection-怎么利用sql注入漏洞\">#</a> SQL injection ：怎么利用 SQL 注入漏洞</h3>\n<p><a name=\"K8VeP\"></a></p>\n<h4 id=\"一般步骤\"><a class=\"markdownIt-Anchor\" href=\"#一般步骤\">#</a> 一般步骤：</h4>\n<p>1. 判断列 / 字段数： <code>order by [column_num]</code></p>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912850579-805e2b70-1eb0-438e-a4e6-2366c739aa79.png#averageHue=%23fefafa&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=174&amp;id=u85f1701b&amp;originHeight=218&amp;originWidth=1255&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=166105&amp;status=done&amp;style=none&amp;taskId=uc80bc74b-a1fc-487e-bee9-5008fe44072&amp;title=&amp;width=1004\" alt=\"image.png\"></li>\n</ul>\n<p>2. 联合查询其他信息： <code>union select [sql1],[sql2] </code></p>\n<ul>\n<li>[sql1] 和 [sql2] 表示用户输入的 sql 语句</li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670912913846-fa130f86-674b-4ea6-bfe4-0b8f171481c4.png#averageHue=%23fefaf9&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=109&amp;id=ud0fd2587&amp;originHeight=136&amp;originWidth=1486&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=95924&amp;status=done&amp;style=none&amp;taskId=u6a48b48a-c72f-4969-a5e4-8cb330828c9&amp;title=&amp;width=1188.8\" alt=\"image.png\"></li>\n<li>用户输入 SQL 语句，执行了 MYSQL 内置函数 <code>user()</code>  和 <code>database()</code></li>\n<li><code>user()</code> ：返回当前数据库连接用户</li>\n<li><code>database()</code> ：返回当前数据库名称</li>\n</ul>\n<p>3. 联合查询表： <code>union select table_name,table_schema from information_schema.tables where table_schema='[database_name]'</code></p>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913002078-d3d7d0f9-a36c-47ad-adcf-ab6af38152b7.png#averageHue=%23fef5f4&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=176&amp;id=u37b8e149&amp;originHeight=220&amp;originWidth=1440&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=191664&amp;status=done&amp;style=none&amp;taskId=u84bb115c-175f-4658-8790-8159ba232d6&amp;title=&amp;width=1152\" alt=\"image.png\"></li>\n<li>用户输入 SQL 语句，从 information_schema 数据库中查询 dvwa 数据库表</li>\n<li>information_schema 意思：信息提要</li>\n</ul>\n<p>4. 联合查询信息： <code>union [query_sql]</code></p>\n<ul>\n<li>输入： <code>1' union select user,password from users#</code></li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913061286-038df450-71d7-4b64-81f7-5d4e7daeab89.png#averageHue=%23fefbfb&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=176&amp;id=uc6f0b4d6&amp;originHeight=220&amp;originWidth=1443&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=92825&amp;status=done&amp;style=none&amp;taskId=ufbff20c6-a409-405e-8964-e3c3fdb8071&amp;title=&amp;width=1154.4\" alt=\"image.png\"></li>\n</ul>\n<p><a name=\"JE9rC\"></a></p>\n<h4 id=\"sqlmap把复杂的利用过程自动化\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap把复杂的利用过程自动化\">#</a> SQLmap：把复杂的利用过程自动化</h4>\n<p>SQLmap 官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcWxtYXAub3JnLw==\">https://sqlmap.org/</span><br>\n<a name=\"fg86t\"></a></p>\n<h5 id=\"下载方法\"><a class=\"markdownIt-Anchor\" href=\"#下载方法\">#</a> 下载方法：</h5>\n<ul>\n<li>1. 可下载源代码，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1weXRob25zcWxtYXAtb3Y4c3QwN3RsNXdjaDlmM3k2ZnFqMmEucHk=\">直接使用 python 运行 sqlmap.py</span></li>\n<li>2. 安装 kali 操作系统，kali 自带 sqlmap，可以直接输入 sqlmap 执行<br>\n<a name=\"MqT4S\"></a></li>\n</ul>\n<h5 id=\"sqlmap自动化sql注入利用过程\"><a class=\"markdownIt-Anchor\" href=\"#sqlmap自动化sql注入利用过程\">#</a> SQLmap 自动化 SQL 注入利用过程：</h5>\n<p>第一步：检测漏洞</p>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913246574-b8252f4f-7c18-49ae-85bf-b600c8c7b2d0.png#averageHue=%23efeeee&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=93&amp;id=u85979e94&amp;originHeight=116&amp;originWidth=1023&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=57628&amp;status=done&amp;style=none&amp;taskId=u306f2782-9631-49fd-8395-066a28ae2af&amp;title=&amp;width=818.4\" alt=\"image.png\"></li>\n<li><code>-u</code> ：url 地址，即需要检测的网址</li>\n<li><code>--cookie</code> ：因为 DVWA 需要登录，可以在浏览器控制台里查看请求消息头中获取 cookie</li>\n</ul>\n<p>第二步：获取数据库名</p>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913298766-86a09a61-b7c7-48e5-8243-e8c9f0d28f89.png#averageHue=%23ededed&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=134&amp;id=u8c54c997&amp;originHeight=168&amp;originWidth=1431&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=96114&amp;status=done&amp;style=none&amp;taskId=uf1a516c7-9518-47d0-a865-a180d3f86c8&amp;title=&amp;width=1144.8\" alt=\"image.png\"></li>\n<li><code>--dbs</code> ：database server 获取所有数据库名</li>\n</ul>\n<p>第三步：获取指定数据库表</p>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913338885-16176e5d-4784-488f-84d5-f0da255df863.png#averageHue=%23eeeded&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=142&amp;id=u01c3d715&amp;originHeight=178&amp;originWidth=1467&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=107683&amp;status=done&amp;style=none&amp;taskId=u3c4a7d04-2ae8-4591-8e0f-ceff97daca3&amp;title=&amp;width=1173.6\" alt=\"image.png\"></li>\n<li><code>-D</code> ：database 指定想要获取的数据库名为 dvwa</li>\n<li><code>--tables</code> ：列出数据库表</li>\n</ul>\n<p>第四步：获取指定数据库列 / 表项</p>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913370985-41138f96-27b1-4607-98c8-c94ff5eed969.png#averageHue=%23efeeee&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=159&amp;id=ufdff0c8e&amp;originHeight=199&amp;originWidth=1425&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=117738&amp;status=done&amp;style=none&amp;taskId=ufd59255f-6cd9-46e5-ae93-969fa767788&amp;title=&amp;width=1140\" alt=\"image.png\"></li>\n<li><code>-D</code> ：Database 指定想要获取的数据库名为 dvwa</li>\n<li><code>-T</code> ：Table 指定想要获取的表名为 users</li>\n<li><code>--columns</code> ：列出表项 / 列</li>\n</ul>\n<p>第五步：获取数据</p>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913403935-a5b3c5cb-b7ae-4529-87fc-e14cfa11f44e.png#averageHue=%23f0efef&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=165&amp;id=u0fa7987a&amp;originHeight=206&amp;originWidth=1454&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=101641&amp;status=done&amp;style=none&amp;taskId=u73026e41-3a74-4e66-8941-27dd1769121&amp;title=&amp;width=1163.2\" alt=\"image.png\"></li>\n<li><code>--dump</code> ：读取数据<br>\n<a name=\"cdP5b\"></a></li>\n</ul>\n<h3 id=\"sql-injection防御\"><a class=\"markdownIt-Anchor\" href=\"#sql-injection防御\">#</a> SQL injection 防御</h3>\n<ul>\n<li>防御命令执行的最高效的方法，就是过滤用户输入内容，不让输入 sql 语句</li>\n<li>将特殊符号替换成空，或判断用户输入 SQL 语句就终止执行</li>\n</ul>\n<p>SQL injection medium 模式：</p>\n<ul>\n<li>源码：\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913610482-62126b6b-082d-47ec-9235-c7eecedfba05.png#averageHue=%23fcf9f9&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=342&amp;id=ua93b86c1&amp;originHeight=428&amp;originWidth=1495&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=159901&amp;status=done&amp;style=none&amp;taskId=ua3c49c79-90b6-494a-82ae-8021e37bef8&amp;title=&amp;width=1196\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>防御：将单引号前加上反斜杠，使 SQL 语句错误，无法正常运行。\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913654040-cd3fbbcf-73f8-49f3-8647-d23b13189ace.png#averageHue=%23fef9f8&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=346&amp;id=u57707307&amp;originHeight=433&amp;originWidth=1330&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=258411&amp;status=done&amp;style=none&amp;taskId=u08b25d92-4f27-4734-a0d0-36070eb307d&amp;title=&amp;width=1064\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>解决办法：在输入的内容中避免特殊字符的存在\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913668239-e6cb0a72-d614-4be5-9750-749a10659b01.png#averageHue=%23fef6f5&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=259&amp;id=ua1902dc4&amp;originHeight=324&amp;originWidth=1305&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=244182&amp;status=done&amp;style=none&amp;taskId=uf1b9e647-2016-4226-aaf4-257400b9f02&amp;title=&amp;width=1044\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n<p>SQL injection high 模式：</p>\n<ul>\n<li>源码：\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913731256-7dad1e47-8914-428a-b7a1-ebe377481a9f.png#averageHue=%23fbf9f8&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=355&amp;id=u6ba97c33&amp;originHeight=444&amp;originWidth=1449&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=181790&amp;status=done&amp;style=none&amp;taskId=u2136685f-4753-4268-90c3-207ecbc7799&amp;title=&amp;width=1159.2\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>DVWA high 防御中缺少传入数据的过滤，无法防御输入漏洞。</li>\n</ul>\n<p>SQL injection impossible 模式：</p>\n<ul>\n<li>源码：\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913768030-96480cf8-e644-4d29-a1dc-65b5b47885ea.png#averageHue=%23faf7f6&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=418&amp;id=ufdbafc59&amp;originHeight=523&amp;originWidth=1320&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=246724&amp;status=done&amp;style=none&amp;taskId=u8be9a8b6-a551-4b10-8ece-828c3e15376&amp;title=&amp;width=1056\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>PDO：PHP Data Objects，配合正确的过滤和 SQL 语句能避免 SQL 注入。</li>\n<li>算法原理：\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670913787623-5d6f90aa-5b3c-4083-96d2-e2617e7cb570.png#averageHue=%23f8f3f3&amp;clientId=u8bb3099b-8e0e-4&amp;from=paste&amp;height=310&amp;id=u84637ea0&amp;originHeight=387&amp;originWidth=1273&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=207490&amp;status=done&amp;style=none&amp;taskId=u56b7e02e-569a-485d-b522-c94cd797e34&amp;title=&amp;width=1018.4\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>impossible 的三次整型验证加 PDO 预处理，完全解决了 SQL 主人隐患，其他后端语言也可实现相应算法。<br>\n<a name=\"hjmOW\"></a></li>\n</ul>\n<h2 id=\"文件上传漏洞详解\"><a class=\"markdownIt-Anchor\" href=\"#文件上传漏洞详解\">#</a> 文件上传漏洞详解</h2>\n<p>文件上传漏洞简介：</p>\n<ul>\n<li>顾名思义，文件上传就是客户端的文件上传到服务器的过程称为文件上传。</li>\n</ul>\n<p>上传文件是很多网站都具有的功能，如果开发者没有对文件做严格的限制，就会导致安全隐患。<br />后门文件简介：</p>\n<ul>\n<li>webshell：网站后门。webshell 就是以 asp、php、jsp 或者 cgi 等网页文件形式存在的一种命令执行环境，也可以将其称为一种网页后门。黑客在入侵了一个网站后，通常会将 asp 或 php 后门文件与网站服务器 WEB 目录下正常的网页文件混在一起，以达到控制网站服务器的目的。<br>\nwebshell 的分类：</li>\n<li>大马：\n<ul>\n<li>体积大、功能全</li>\n<li>会调用系统的关键函数</li>\n<li>以代码加密进行隐藏</li>\n</ul>\n</li>\n<li>小马：\n<ul>\n<li>体积小、功能少</li>\n<li>只有一个上传功能</li>\n</ul>\n</li>\n<li>一句话木马：\n<ul>\n<li>代码短、只有一行代码</li>\n<li>使用场景大，可单独生成可插入文件</li>\n<li>安全性高，隐匿性强，可变形免杀</li>\n<li>框架不便，数据执行（数据传递）<br>\nphp 一句话木马:  <code>&lt;?php @eval($_GET[ 'pass' ]);?&gt;</code></li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>php 的代码要写在里面，服务器才能认出来这是 php 代码，然后才去解析。</li>\n<li>@符号的意思是不报错，即使执行错误，也不报错。</li>\n<li>eval 将字符串当作 php 代码执行。</li>\n</ol>\n<p>怎样上传网站后门：</p>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670935533172-2f875fa9-883b-4787-b9b2-d63fc9cc686f.png#averageHue=%23f4f4f4&amp;clientId=u509bc43d-d655-4&amp;from=paste&amp;height=173&amp;id=u1906bcc9&amp;originHeight=173&amp;originWidth=1109&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=48740&amp;status=done&amp;style=none&amp;taskId=u9452c547-20eb-4a7b-8d51-3d6843bef4e&amp;title=&amp;width=1109\" alt=\"image.png\"><br>\n<a name=\"ybYKc\"></a></li>\n</ul>\n<h3 id=\"file-upload-low-找到文件上传到了哪里\"><a class=\"markdownIt-Anchor\" href=\"#file-upload-low-找到文件上传到了哪里\">#</a> File Upload low 找到文件上传到了哪里</h3>\n<ul>\n<li>在本地创建后门文件，并上传至服务器，得到上传地址。\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670937124429-efb86344-6bbe-4c2a-901b-14df9bbb9fe5.png#averageHue=%23fefbfb&amp;clientId=u509bc43d-d655-4&amp;from=paste&amp;height=420&amp;id=uedeab374&amp;originHeight=420&amp;originWidth=1398&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=235303&amp;status=done&amp;style=none&amp;taskId=ue8e5c18e-6be6-48c7-a840-4c6e66932fe&amp;title=&amp;width=1398\" alt=\"image.png\"></li>\n<li><code>../</code>  代表当前目录的上一级目录<br>\n<a name=\"yUl52\"></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"file-upload-low-上传之后怎么使用木马\"><a class=\"markdownIt-Anchor\" href=\"#file-upload-low-上传之后怎么使用木马\">#</a> File Upload low 上传之后怎么使用木马</h3>\n<p>方法一：在浏览器安装 hackbar 插件，post data 里面输入： pass=[php 代码]<br /><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670939339785-71d58a39-2b93-43e1-b8a7-6161b29122de.png#averageHue=%23fcfcfc&amp;clientId=u509bc43d-d655-4&amp;from=paste&amp;height=511&amp;id=u459e1237&amp;originHeight=511&amp;originWidth=1024&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=99233&amp;status=done&amp;style=none&amp;taskId=ubbe8a8f2-7c05-48de-9815-8ca5dd6eb59&amp;title=&amp;width=1024\" alt=\"image.png\"><br>\n 方法二：蚁剑自动管理 webshell 使用 webshell 管理工具</p>\n<ul>\n<li>Webshell 管理工具介绍 - 中国蚁剑（其中一款）：\n<ul>\n<li>中国蚁剑是一款开源的跨平台网站管理工具，它主要面向于合法授权的渗透测试安全人员以及进行常规操作的网站管理员。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FudFN3b3JkUHJvamVjdC9BbnRTd29yZC1Mb2FkZXI=\">https://github.com/AntSwordProject/AntSword-Loader</span></li>\n</ul>\n</li>\n<li>第一步：右键添加数据\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670942468856-4bb4cb55-a11b-412a-9a32-ed25881e2ccb.png#averageHue=%23fcfcfc&amp;clientId=u509bc43d-d655-4&amp;from=paste&amp;height=502&amp;id=u271201e6&amp;originHeight=502&amp;originWidth=1214&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=118300&amp;status=done&amp;style=none&amp;taskId=uf9d95614-d87f-41ad-bbb9-d3fe16e09c5&amp;title=&amp;width=1214\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>第二步：添加数据\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670942551634-ac04870c-feda-4a74-b006-a48fff31d8be.png#averageHue=%23fbfbfb&amp;clientId=u509bc43d-d655-4&amp;from=paste&amp;height=535&amp;id=u94c3902d&amp;originHeight=535&amp;originWidth=1461&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=180334&amp;status=done&amp;style=none&amp;taskId=ucd6c49fa-2e48-4eef-b3ec-c92f3bf0f96&amp;title=&amp;width=1461\" alt=\"image.png\"></li>\n<li>url 地址即上传的后门地址</li>\n<li>连接密码即 webshell [] 包裹的字符串： <code>&lt;?php @eval($_GET[ 'pass' ]);?&gt;</code></li>\n</ul>\n</li>\n<li>第三步：连接 webshell，控制网站\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670942789518-deea8745-f201-4cc7-8215-92b3fa504d11.png#averageHue=%23f5f5f5&amp;clientId=u509bc43d-d655-4&amp;from=paste&amp;height=389&amp;id=ue5a78863&amp;originHeight=389&amp;originWidth=833&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=60574&amp;status=done&amp;style=none&amp;taskId=ube8ee183-d57a-4360-865d-60844fb2f14&amp;title=&amp;width=833\" alt=\"image.png\"></li>\n<li>\n<br />\n</li>\n</ul>\n</li>\n</ul>\n<p><a name=\"uBS4f\"></a></p>\n<h3 id=\"file-upload-low-防御\"><a class=\"markdownIt-Anchor\" href=\"#file-upload-low-防御\">#</a> File Upload low 防御</h3>\n<p>防御文件上传的方法各种各样：</p>\n<ul>\n<li>限制文件上传类型（不让上传 php 文件，只允许上传图片）</li>\n<li>给上传的文件重命名，让攻击者找不到自己传的文件在哪</li>\n<li>限制文件上传大小</li>\n<li>压缩上传文件</li>\n<li>把上传的文件存储在文件服务器或 oss 平台（没存在原本服务器，传了也没用）</li>\n</ul>\n<p>File Upload 防御 medium 模式：</p>\n<ul>\n<li>源码：\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670981323460-aa5c7eba-f1d0-4e18-b710-b18bd9f940fb.png#averageHue=%23f8f5f4&amp;clientId=uc3be0a95-3a01-4&amp;from=paste&amp;height=429&amp;id=uf2dd555d&amp;originHeight=429&amp;originWidth=1389&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=207732&amp;status=done&amp;style=none&amp;taskId=ub98368da-45d0-4d8f-abae-294ae3a9812&amp;title=&amp;width=1389\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>渗透测试解决办法：\n<ul>\n<li>通过抓包，修改 requests 请求消息中的文件类型。</li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670981866148-fc83e698-eb04-4669-b354-c19583b73681.png#averageHue=%23f4f3f2&amp;clientId=uc3be0a95-3a01-4&amp;from=paste&amp;height=701&amp;id=u8b076108&amp;originHeight=701&amp;originWidth=590&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=190703&amp;status=done&amp;style=none&amp;taskId=ub854a7c6-c1ef-41d6-a5a1-61ee0f18b27&amp;title=&amp;width=590\" alt=\"image.png\"></li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1670981887927-65b72e0b-9436-4223-a0ff-3f51e4862a2c.png#averageHue=%23fef3f2&amp;clientId=uc3be0a95-3a01-4&amp;from=paste&amp;height=227&amp;id=u282dbdcd&amp;originHeight=227&amp;originWidth=717&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=80419&amp;status=done&amp;style=none&amp;taskId=ube4cfe79-ecf3-48cc-8d4a-159ec470406&amp;title=&amp;width=717\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n<p>File Upload 防御 high</p>\n<ul>\n<li>源码：\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1671259138281-65181d3b-1fc6-4a8d-bbc3-873cf5a96f69.png#averageHue=%23f7f3f2&amp;clientId=u95d2833a-66a5-4&amp;from=paste&amp;height=362&amp;id=u6eae5241&amp;originHeight=453&amp;originWidth=1538&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=336816&amp;status=done&amp;style=none&amp;taskId=u7c245715-7a3e-4a98-898e-313fb256de4&amp;title=&amp;width=1230.4\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>渗透测试解决方法：\n<ul>\n<li>用真实的图片做木马，并上传</li>\n<li><code>copy /b 1.jpg+webshell.php 2.jpg</code></li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1671259828240-59ed443f-a815-4039-973d-05a0d9705ef2.png#averageHue=%23151515&amp;clientId=u95d2833a-66a5-4&amp;from=paste&amp;height=126&amp;id=uc5eb1e84&amp;originHeight=157&amp;originWidth=839&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=36727&amp;status=done&amp;style=none&amp;taskId=u59bf3c67-eb9b-486e-aaa2-3e540a9f668&amp;title=&amp;width=671.2\" alt=\"image.png\"></li>\n<li>上传 jpg 图片访问只会打开图片，不会解析 webshell</li>\n<li>解决方法之一：\n<ul>\n<li>利用 DVWA 的文件包含漏洞组合利用 [文件包含会把读取的文件当做 PHP 代码执行]</li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1671260064903-cd0ed5ca-cc17-4ecb-957e-5d71ea3cbdf1.png#averageHue=%23f8f8f8&amp;clientId=u95d2833a-66a5-4&amp;from=paste&amp;height=164&amp;id=ua89585f3&amp;originHeight=205&amp;originWidth=1520&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=135352&amp;status=done&amp;style=none&amp;taskId=uf72e49a5-9054-42ba-be48-54a8d096098&amp;title=&amp;width=1216\" alt=\"image.png\"></li>\n<li>蚁剑连接</li>\n<li>因 DVWA 需要登录，故要在请求信息中加入 Cookie 信息 [浏览器 F12 能看到]</li>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1671260375456-7aea5a40-76ae-4736-9891-a538a55b31dd.png#averageHue=%23f5f5f5&amp;clientId=u95d2833a-66a5-4&amp;from=paste&amp;height=495&amp;id=uaa450d5f&amp;originHeight=619&amp;originWidth=721&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=92934&amp;status=done&amp;style=none&amp;taskId=uffa1b275-de48-4fd4-b441-7db9bba6d35&amp;title=&amp;width=576.8\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>File Upload 防御 impossible</p>\n<ul>\n<li>源码：\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1671260448477-1b4364fc-baa9-4187-b0fe-d4eb4643c966.png#averageHue=%23fbf9f8&amp;clientId=u95d2833a-66a5-4&amp;from=paste&amp;height=516&amp;id=ue1148789&amp;originHeight=645&amp;originWidth=1400&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=347598&amp;status=done&amp;style=none&amp;taskId=u1a28de44-c55c-4378-8801-f441099f024&amp;title=&amp;width=1120\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>算法：\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1671260569798-9e33e3aa-1a42-4a0b-86cb-72fcfbc1e308.png#averageHue=%23f8f8f8&amp;clientId=u95d2833a-66a5-4&amp;from=paste&amp;height=302&amp;id=u195eeb7a&amp;originHeight=378&amp;originWidth=1454&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=180317&amp;status=done&amp;style=none&amp;taskId=u6fcac296-ada6-4cea-9176-122a4c2b338&amp;title=&amp;width=1163.2\" alt=\"image.png\"></li>\n<li>high 的过滤验证解决了上传不是图片的问题，impossible 更是让服务器重新生成图片，从根本上完全避免了图片马等其他变形后门。其他后端语言也可实现相应算法<br>\n<a name=\"FY0DX\"></a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"6-常用的命令\"><a class=\"markdownIt-Anchor\" href=\"#6-常用的命令\">#</a> 6、常用的命令</h1>\n<p><a name=\"OkRcn\"></a></p>\n<h2 id=\"docker的基础命令-2\"><a class=\"markdownIt-Anchor\" href=\"#docker的基础命令-2\">#</a> docker 的基础命令</h2>\n<ul>\n<li>启动 docker 服务： <code>systemctl start docker</code></li>\n<li>重启 docker 服务： <code>systemctl restart docker</code></li>\n<li>关闭 docker 服务： <code>docker service docker stop</code></li>\n<li>列出镜像： <code>docker images</code></li>\n<li>列出容器： <code>docker ps -a / docker container ls -a</code></li>\n<li>删除镜像： <code>docker rmi [image_id]</code></li>\n<li>删除容器： <code>docker rm [container_id]</code> <br>\n<a name=\"TtKzo\"></a></li>\n</ul>\n<h2 id=\"常用的cmd命令\"><a class=\"markdownIt-Anchor\" href=\"#常用的cmd命令\">#</a> 常用的 cmd 命令</h2>\n<ul>\n<li><code>whoami</code>   查看当前用户名</li>\n<li><code>ipconfig</code>   查看网卡信息</li>\n<li><code>shutdown -s -t 0 </code>   关机（t 为时间 0 秒）</li>\n<li><code>net user [username] [password] /add </code>  增加一个用户名为 username 密码为 password 的新用户</li>\n<li><code>type [file_name]</code>   查看 filename 文件内容</li>\n</ul>\n<p><a name=\"bvqPI\"></a></p>\n<h1 id=\"7-metasploit框架\"><a class=\"markdownIt-Anchor\" href=\"#7-metasploit框架\">#</a> 7、metasploit 框架</h1>\n<p><a name=\"qZ2C7\"></a></p>\n<h2 id=\"metasploit目录结构\"><a class=\"markdownIt-Anchor\" href=\"#metasploit目录结构\">#</a> metasploit 目录结构</h2>\n<p>metasploit 框架介绍：</p>\n<ul>\n<li>MSF：metasploit Framework 的简称。metasploit Framework 高度模块化，即框架由多个 module 组成，居家旅行必备神器。</li>\n<li>是一款开源的安全漏洞利用和测试工具，集成了各种平台上常见的溢出漏洞和流行的 shellcode，并持续保持更新。</li>\n<li>metasploit 涵盖了渗透测试中全过程，你可以在这个框架下利用现有的 Payload 进行一系列的渗透测试。</li>\n</ul>\n<p>目录：</p>\n<ul>\n<li>框架目录路径：\n<ul>\n<li><code>/opt/metasploit-framework/embedded/framework/</code></li>\n<li><code>/usr/share/metasploit-framework/</code></li>\n</ul>\n</li>\n<li><code>data</code> : 包含 metasploit 用于存储某些漏洞、单词列表、图像等所需二进制文件的可编辑文件。</li>\n<li><code>documentation</code> ：包含框架的可用文档</li>\n<li><code>lib</code> ：metasploit 的库文件夹</li>\n<li><code>plugins</code> ：用来存放 metasploit 的插件</li>\n<li><code>scripts</code> ：用来存放 metasploit 的脚本，包含 meterpreter 及其他脚本</li>\n<li><code>tools</code> ：存放多种的命令行实用程序</li>\n<li><code>modules</code> ：存储 metasploit 的模块文件</li>\n</ul>\n<p>modules 目录：</p>\n<ul>\n<li><code>auxiliary</code> ：辅助模块，辅助渗透（端口扫描、登录密码爆破、漏洞验证等）</li>\n<li><code>exploits</code> ：漏洞利用模块。包含主流的漏洞利用脚本，通常是对某些可能存在漏洞的目标进行漏洞利用。命名规则：操作系统 / 各种应用协议分类</li>\n<li><code>payloads</code> ：攻击载荷，主要是攻击成功后在目标机器执行代码，比如反弹 shell 的代码</li>\n<li><code>post</code> ：后渗透阶段模块，漏洞利于成功获得 meterpreter 之后，向目标发送的一些功能性指令，如：提权等</li>\n<li><code>encoders</code> ：编码器模块，主要包括各种编码工具，对 payload 进行编码加密，以便绕过入侵检测和过滤系统</li>\n<li><code>evasion</code> ：躲避模块，用于生成免杀 payload</li>\n<li><code>nops</code> ：由于 IDS/IPS 会检查数据包中不规则的数据，在某些情况下，比如针对溢出攻击，某些特殊滑行字符串（NOPS x90x90…）则会因为被拦截而导致攻击失败</li>\n</ul>\n<p>metasploit 体系结构：</p>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/34696645/1672024987244-b2eb2ce7-79dc-42a0-853b-514516ebf466.png#averageHue=%23141313&amp;clientId=uf8ad0fd7-48da-4&amp;from=paste&amp;height=444&amp;id=u0e628362&amp;originHeight=444&amp;originWidth=825&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=70863&amp;status=done&amp;style=none&amp;taskId=u9a20c8eb-60a6-4db5-8d5c-63f333c03e2&amp;title=&amp;width=825\" alt=\"image.png\"></li>\n</ul>\n<p>1、进入 metasploit：</p>\n<ul>\n<li><code>msfdb init</code> ：初始化数据库</li>\n<li><code>msfconsole</code> ：启动</li>\n<li><code>db_status</code> ：查看是否成功连接到数据库</li>\n<li><code>workspace</code> ：当前工作区</li>\n<li><code>workspace -h</code> ：帮助命令</li>\n</ul>\n<p>2、信息收集，内网主机发现</p>\n<ul>\n<li><code>db_nmap</code> ：nmap 扫描</li>\n<li><code>-PA</code> ：TCP ACK PING 扫描</li>\n<li><code>-PR</code> ：ARP 扫描时 nmap 对目标进行一个 arp ping 扫描的过程，尤其是在内网情况下。因为防火墙不会禁止 ARP 请求</li>\n<li><code>hosts</code> ：当前工作区所有主机</li>\n</ul>\n<p>3、端口、服务、版本探测</p>\n<ul>\n<li><code>db_nmap</code> ：nmap 扫描</li>\n<li><code>-T[0-5]</code> ：默认为 T3，T4 表示最大 TCP 扫描延迟是 10ms</li>\n<li><code>-sS</code> ：TCP STN 扫描</li>\n<li><code>-sA</code> ：TCP ACK 扫描</li>\n<li><code>-sY</code> ：TCP SYN 扫描</li>\n<li><code>-A</code> ：打开操作系统探测和版本探测</li>\n</ul>\n",
            "tags": [
                "note"
            ]
        },
        {
            "id": "https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note2/",
            "url": "https://fairyxxx.github.io/2023/07/10/Fairyxxx.Favorites.note2/",
            "title": "Git基础",
            "date_published": "2023-07-10T02:29:05.302Z",
            "content_html": "<p><a name=\"CjBTs\"></a></p>\n<h1 id=\"git的安装和初始化配置\"><a class=\"markdownIt-Anchor\" href=\"#git的安装和初始化配置\">#</a> git 的安装和初始化配置</h1>\n<p>git 官网<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\"> https://git-scm.com/</span><br />安装完成后打开终端，输入： <code>git -v</code>  查看版本。<br>\n<a name=\"oyPlk\"></a></p>\n<h2 id=\"git的使用方式\"><a class=\"markdownIt-Anchor\" href=\"#git的使用方式\">#</a> Git 的使用方式：</h2>\n<ul>\n<li>命令行</li>\n<li>图形化界面（GUI）</li>\n<li>IDE 插件 / 拓展<br>\n<a name=\"XcQQM\"></a></li>\n</ul>\n<h3 id=\"使用git之前配置用户名和邮箱\"><a class=\"markdownIt-Anchor\" href=\"#使用git之前配置用户名和邮箱\">#</a> 使用 git 之前配置用户名和邮箱：</h3>\n<p>配置用户名 <code>git config --global user.name &quot;Jaser yng&quot;</code> <br />配置邮箱 <code>git config --global user.email xxxxx@gmail.com</code> <br /> <code>--local</code> ：本地配置，只对本地仓库有效<br /> <code>--global</code> ：全局配置，所有仓库生效<br /> <code>--system</code> ：系统配置，对所有用户生效<br />用户名中有空格需使用双引号 <code>&quot;Jasper yang&quot;</code> ，没有空格不需要双引号<br />保存用户名和密码：<br /> <code>git config --global credential.helper store</code> <br />查看配置信息：<br /> <code>git config --global --list</code></p>\n<p><a name=\"cotkD\"></a></p>\n<h1 id=\"新建仓库\"><a class=\"markdownIt-Anchor\" href=\"#新建仓库\">#</a> 新建仓库</h1>\n<p>创建仓库：</p>\n<ul>\n<li>方式一： <code>git init 文件名</code> 在本地建立一个 git 仓库</li>\n<li>方式二： <code>git clone 仓库地址</code> 克隆远程仓库<br>\n<a name=\"N2itX\"></a></li>\n</ul>\n<h1 id=\"工作区域和文件状态\"><a class=\"markdownIt-Anchor\" href=\"#工作区域和文件状态\">#</a> 工作区域和文件状态</h1>\n<p>本地数据管理区域：</p>\n<ul>\n<li>工作区（Working Directory）实际操作的目录</li>\n<li>暂存区（Staging Area/Index）临时保存区域，用于保存即将要提交到 git 仓库的修改内容</li>\n<li>本地仓库（Local Repository）git 存储代码和版本信息的主要位置</li>\n</ul>\n<p><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64ab6c8f5b581.png\" alt=\"image.png\"><br>\n<a name=\"wdLTP\"></a></p>\n<h1 id=\"添加和提交文件\"><a class=\"markdownIt-Anchor\" href=\"#添加和提交文件\">#</a> 添加和提交文件</h1>\n<p><code>git init</code>  创建仓库<br /> <code>git status</code>  查看仓库的状态<br /> <code>git add</code>  添加到暂存区 <br /> <code>git add *.txt</code>  使用通配符，把 <code>.txt</code>  文件全部添加到暂存区<br /> <code>git add .</code>  使用目录，把当前文件夹下的所有文件添加到暂存区<br /> <code>git commit</code>  提交到仓库，只能提交暂存区中的内容，不会提交工作区的内容<br /> <code>git commit -m</code>  不会进入交互界面，直接提交<br /> <code>git log</code>  查看提交历史记录<br /> <code>git log --oneline</code>  查看简洁的提交记录<br>\n<a name=\"rqAwZ\"></a></p>\n<h1 id=\"回退版本\"><a class=\"markdownIt-Anchor\" href=\"#回退版本\">#</a> 回退版本</h1>\n<p><code>git reset</code>  用于回退版本<br /> <code>git reset --soft</code>  表示回退到某一版本，并且保留工作区和暂存区的所有修改内容<br /> <code>git reset --hard</code>  表示回退到某一版本，并且丢弃工作区和暂存区的所有修改内容<br /> <code>git reset --mixed</code>  表示回退到某一版本，只保留工作区的修改内容，而丢弃暂存区的修改内容<br /><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64ab6ca31b310.png\" alt=\"image.png\"><br>\n<a name=\"bOyBi\"></a></p>\n<h1 id=\"git-diff\"><a class=\"markdownIt-Anchor\" href=\"#git-diff\">#</a>  <code>git diff</code></h1>\n<p>查看工作区、暂存区、本地仓库之间的差异<br />  <code>git diff</code>  默认比较工作区和暂存区的差异内容，会显示发生更改的文件以及更改的详细信息。<br /> <code>git diff HEAD</code>  比较工作区与本地仓库之间的差异。<br /> <code>git diff --cached</code>  比较暂存区与本地仓库之间的差异。<br /> <code>git diff --staged</code>  比较暂存区与本地仓库之间的差异。<br /> <code>git diff 版本提交ID1 版本提交ID2</code>  后面加上两次版本的提交 ID 就可以比较两个版本之间的差异内容。<br /> <code>git diff HEAD~ HEAD</code>  比较当前版本和上一个版本之间的差异<br /> <code>git diff HEAD^ HEAD</code>  比较当前版本和上一个版本之间的差异<br /> <code>git diff HEAD~2 HEAD</code>  比较当前版本和提交前的两个版本之间的差异<br /> <code>git diff HEAD~2 HEAD file3.txt</code>  只会查看 file3 的差异内容<br /> <code>git diff &lt;branch_name&gt; &lt;branch_name&gt;</code>  比较分支之间的差异<br>\n<a name=\"GxVQB\"></a></p>\n<h1 id=\"如何从版本库中删除文件\"><a class=\"markdownIt-Anchor\" href=\"#如何从版本库中删除文件\">#</a> 如何从版本库中删除文件</h1>\n<p><code>rm file;git add file</code>  先从工作区删除文件，然后再从暂存区删除内容<br /> <code>git rm &lt;file&gt;</code>  本文件从工作区和暂存区同时删除<br /> <code>git rm --cached &lt;file&gt;</code>  把文件从暂存区删除，但是保留在当前工作区中<br /> <code>git rm -r*</code>  递归删除某个目录下的所有子目录和文件，删除后不要忘记提交。<br>\n<a name=\"JPKgr\"></a></p>\n<h1 id=\"gitignore忽略文件\"><a class=\"markdownIt-Anchor\" href=\"#gitignore忽略文件\">#</a>  <code>.gitignore</code>  忽略文件</h1>\n<p><a name=\"Sl9Mg\"></a></p>\n<h2 id=\"应该忽略那些文件\"><a class=\"markdownIt-Anchor\" href=\"#应该忽略那些文件\">#</a> 应该忽略那些文件</h2>\n<ol>\n<li>系统或者软件自动生成的文件</li>\n<li>编译产生的中间文件和结果文件</li>\n<li>运行时生成日志文件、缓存文件、临时文件</li>\n<li>涉及身份、密码、口令、密钥等敏感信息文件</li>\n</ol>\n<ul>\n<li>忽略日志文件和文件夹</li>\n<li>忽略所有 <code>.class</code>  文件</li>\n<li>忽略所有 <code>.o</code>  文件</li>\n<li>忽略所有 <code>.env</code>  文件</li>\n<li>忽略所有 <code>.zip</code>  和 <code>tar</code>  文件</li>\n<li>忽略所有 <code>.pem</code>  文件</li>\n<li>……<br>\n<a name=\"Jpuij\"></a></li>\n</ul>\n<h2 id=\"gitignore文件的匹配规则\"><a class=\"markdownIt-Anchor\" href=\"#gitignore文件的匹配规则\">#</a>  <code>.gitignore</code>  文件的匹配规则</h2>\n<p>从上到下逐行匹配，每一行表示一个忽略模式</p>\n<ul>\n<li>空行或者以 <code>#</code> 开头的行会被 Git 忽略。一般空行用于可读性的分隔， <code>#</code> 一般用作注释</li>\n<li>使用标准的 Blob 模式匹配，例如\n<ul>\n<li>星号 <code>*</code>  通配任意个字符</li>\n<li>问号 <code>?</code>  匹配单个字符</li>\n<li>中括号 <code>[]</code>  表示匹配列表中的单个字符，比如： <code>[abc]</code>  表示 <code>a/b/c</code></li>\n</ul>\n</li>\n<li>两个星号 <code>**</code>  表示匹配任意的中间目录</li>\n<li>中括号可以使用短中线链接，比如：\n<ul>\n<li><code>[0-9]</code>  表示任意一位数字， <code>[a-z]</code>  表示任意一位小写字母</li>\n</ul>\n</li>\n<li>感叹号 <code>!</code>  表示取反</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 忽略所有的 .a 文件</span><br><span class=\"line\">*.a</span><br><span class=\"line\"></span><br><span class=\"line\"># 但跟踪所有的 lib.a,即使你在前面忽略了 .a 文件</span><br><span class=\"line\">!lib.a</span><br><span class=\"line\"></span><br><span class=\"line\"># 只忽略当前目录下的 TODO文件，而不忽略 subdir/TODO</span><br><span class=\"line\">/TODO</span><br><span class=\"line\"></span><br><span class=\"line\"># 忽略任何目录下名为 build 的文件夹</span><br><span class=\"line\">build/</span><br><span class=\"line\"></span><br><span class=\"line\"># 忽略 doc/notes.txt,但不忽略 doc/server/arch.txt</span><br><span class=\"line\">doc/*.txt</span><br><span class=\"line\"></span><br><span class=\"line\"># 忽略 doc/ 目录及其所有子目录下的 .pdf 文件</span><br><span class=\"line\">doc/**/*.pdf</span><br></pre></td></tr></table></figure>\n<p><a name=\"PHIG9\"></a></p>\n<h1 id=\"注册github账号\"><a class=\"markdownIt-Anchor\" href=\"#注册github账号\">#</a> 注册 Github 账号</h1>\n<p>网址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLw==\">https://github.com/</span><br>\n<a name=\"fyomH\"></a></p>\n<h1 id=\"ssh配置和克隆仓库\"><a class=\"markdownIt-Anchor\" href=\"#ssh配置和克隆仓库\">#</a> SSH 配置和克隆仓库</h1>\n<p>生成 SSH Key： <code>ssh-keygen -t rsa -b 4096</code></p>\n<ul>\n<li>私钥文件： <code>id_rsa</code></li>\n<li>公钥文件： <code>id_rsa.pub</code></li>\n</ul>\n<p>克隆仓库： <code>git clone repo-address</code> <br />推送更新内容： <code>git push &lt;remote&gt; &lt;branch&gt;</code> <br />拉取更新内容： <code>git pull &lt;remote&gt;</code> <br>\n<a name=\"TIkP5\"></a></p>\n<h1 id=\"关联本地仓库和远程仓库\"><a class=\"markdownIt-Anchor\" href=\"#关联本地仓库和远程仓库\">#</a> 关联本地仓库和远程仓库</h1>\n<p>添加远程仓库：</p>\n<ol>\n<li><code>git remote add &lt;远程仓库别名&gt; &lt;远程仓库地址&gt;</code></li>\n<li><code>git push -u &lt;远程仓库名&gt; &lt;分支名&gt;</code></li>\n</ol>\n<p>查看远程仓库： <code>git remote -v</code> <br />拉取远程仓库内容： <code>git pull &lt;远程仓库名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code>  相同可省略冒号后面部分<br>\n<a name=\"ZbNtQ\"></a></p>\n<h1 id=\"gitee的使用和gitlab本地化部署\"><a class=\"markdownIt-Anchor\" href=\"#gitee的使用和gitlab本地化部署\">#</a> Gitee 的使用和 GitLab 本地化部署</h1>\n<p>Gitee：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20v\">https://gitee.com/</span></p>\n<ul>\n<li>特色：国内平台</li>\n</ul>\n<p>GitLab：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hYm91dC5naXRsYWIuY29tLw==\">https://about.gitlab.com/</span></p>\n<ul>\n<li>特色：私有化部署<br>\n<a name=\"bWkzf\"></a></li>\n</ul>\n<h1 id=\"gui工具\"><a class=\"markdownIt-Anchor\" href=\"#gui工具\">#</a> GUI 工具</h1>\n<p>Github Desktop：功能单一只能管理 GitHub 上的仓库。<br />Sourcetree：支持 Windows 和 mac 操作系统<br>\n<a name=\"iytA8\"></a></p>\n<h1 id=\"vscode中使用git\"><a class=\"markdownIt-Anchor\" href=\"#vscode中使用git\">#</a> VScode 中使用 Git</h1>\n<p>布局：菜单栏、侧边栏、编辑区、终端区<br />打开命令面板： <code>Ctrl + Shift + ``/</code> Command + Shift +  <code>&lt;br /&gt;配置文件：`settings.json`&lt;br /&gt;打开终端：`Ctrl + Shift + </code> <br />插件和扩展：在侧边栏中的扩展界面中搜索和安装<br />Git 操作：在侧边栏中的源码管理器 UI 界面中操作<br>\n<a name=\"wsui8\"></a></p>\n<h1 id=\"分支简介和基本操作\"><a class=\"markdownIt-Anchor\" href=\"#分支简介和基本操作\">#</a> 分支简介和基本操作</h1>\n<p>查看分支列表： <code>git branch</code> <br />创建分支： <code>git branch branch-name</code> <br />切换分支：</p>\n<ul>\n<li><code>git checkout branch-name</code></li>\n<li><code>git switch branch-name</code>  (推荐)</li>\n</ul>\n<p>合并分支： <code>git merge branch-name</code> <br />删除分支：</p>\n<ul>\n<li><code>git branch -d branch-name</code>  删除已合并分支</li>\n<li><code>git branch -D branch-name</code>  删除未合并分支<br>\n<a name=\"E9Jys\"></a></li>\n</ul>\n<h1 id=\"解决合并冲突\"><a class=\"markdownIt-Anchor\" href=\"#解决合并冲突\">#</a> 解决合并冲突</h1>\n<p>两个分支未修改同一个文件的同一处位置：Git 自动合并<br />两个分支修改了同一个文件的同一处位置：产生冲突</p>\n<ul>\n<li>解决方法：\n<ul>\n<li>1. 手工修改冲突文件</li>\n<li>2. 添加暂存区 <code>git add file</code></li>\n<li>3. 提交修改 <code>git commit -m &quot;message&quot;</code></li>\n</ul>\n</li>\n<li>中止合并：当不想继续执行合并操作时可以使用下面的命令来中止合并过程： <code>git merge --abort</code> <br>\n<a name=\"IqiOt\"></a></li>\n</ul>\n<h1 id=\"回退和rebase\"><a class=\"markdownIt-Anchor\" href=\"#回退和rebase\">#</a> 回退和 <code>rebase</code></h1>\n<p><code>Merge</code> ：</p>\n<ul>\n<li>优点：不会破坏原分支的提交历史，方便回溯和查看</li>\n<li>缺点：会产生额外的提交节点，分支图比较复杂</li>\n</ul>\n<p><code>Rebase</code> ：</p>\n<ul>\n<li>优点：不会新增额外的提交记录，形成线性历史，比较直观和干净</li>\n<li>缺点：会改变提交历史，改变了当前分支 <code>branch out</code>  的节点。</li>\n<li>避免在共享分支时使用，一般不会在公共分支上使用<br>\n<a name=\"XUjYi\"></a></li>\n</ul>\n<h1 id=\"分支管理和工作流模型\"><a class=\"markdownIt-Anchor\" href=\"#分支管理和工作流模型\">#</a> 分支管理和工作流模型</h1>\n<p><code>main</code>  主线 / 基线分支</p>\n<ul>\n<li>只接受来自 <code>hotfix</code>  和 <code>release</code>  的合并请求</li>\n<li>不允许直接 <code>push</code>  修改</li>\n</ul>\n<p><code>hotfix</code>  线上版本 bug 热修复分支</p>\n<ul>\n<li>用于解决线上问题，修复完后合并回 <code>main</code>  分支</li>\n<li>命名规则： <code>hotfix-#issueid-desc</code></li>\n</ul>\n<p><code>release</code>  版本发布分支</p>\n<ul>\n<li>永久分支，用于发布前的测试和验证<br>\n<a name=\"vg0lS\"></a></li>\n</ul>\n<h2 id=\"分支命名\"><a class=\"markdownIt-Anchor\" href=\"#分支命名\">#</a> 分支命名：</h2>\n<p>推荐使用带有意义的描述性名称来命名分支</p>\n<ul>\n<li>版本发布分支 / Tag 示例： <code>v1.0.0</code></li>\n<li>功能分支示例： <code>feature-login-page</code></li>\n<li>修复分支示例： <code>hotfix-#issueid-desc</code> <br>\n<a name=\"Bjx9K\"></a></li>\n</ul>\n<h2 id=\"分支管理\"><a class=\"markdownIt-Anchor\" href=\"#分支管理\">#</a> 分支管理：</h2>\n<p>定期合并已经成功验证的分支，及时删除已经合并的分支<br />保持合适的分支数量<br />为分支设置合适的管理权限</p>\n",
            "tags": [
                "note"
            ]
        },
        {
            "id": "https://fairyxxx.github.io/2023/07/08/Fairyxxx.Favorites.note1/",
            "url": "https://fairyxxx.github.io/2023/07/08/Fairyxxx.Favorites.note1/",
            "title": "相关知识",
            "date_published": "2023-07-08T07:44:08.407Z",
            "content_html": "<p><a name=\"WIMOT\"></a></p>\n<h1 id=\"1-计算机网络概述\"><a class=\"markdownIt-Anchor\" href=\"#1-计算机网络概述\">#</a> 1、计算机网络概述</h1>\n<p>1. 计算机网络的定义：</p>\n<ul>\n<li>计算机网络是一组自治计算机互连的集合</li>\n</ul>\n<p>2. 计算机网络的基本功能：</p>\n<ul>\n<li>资源共享</li>\n<li>分布式处理与负载均衡</li>\n<li>综合信息服务</li>\n</ul>\n<p>3. 计算机网络的类型：</p>\n<ul>\n<li>局域网：LAN（Local Area Network）\n<ul>\n<li>通常指几千米内的，可以通过某种介质互联的计算机、打印机、modem 或其他设备的集合</li>\n</ul>\n</li>\n<li>城域网：MAN（Metropolitan Area Network）\n<ul>\n<li>MAN 覆盖范围为中等规模，介于局域网和广域网之间，通常是在一个城市内的网络连接（距离为 10KM 左右）</li>\n</ul>\n</li>\n<li>广域网：WAN（Wide Area Network）\n<ul>\n<li>分布距离远，它通过各种类型的串行连接以便在更大的地理区域内实现接入</li>\n</ul>\n</li>\n</ul>\n<p>网络的拓扑结构：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90be913b3c.png\" alt=\"image.png\"></li>\n</ul>\n<p>电路交换：基于电话网的电路交换</p>\n<ul>\n<li>优点：延迟小、透明传输</li>\n<li>缺点：带宽固定，网络资源利用率低，初始连接建立慢</li>\n</ul>\n<p>分组交换：以分组为单位存储转发</p>\n<ul>\n<li>优点：多路复用，网路资源利用率高</li>\n<li>缺点：延迟大，实时性差，设备功能复杂</li>\n</ul>\n<p>4. 衡量计算机网络的主要指标：</p>\n<ul>\n<li>带宽（bandwidth）\n<ul>\n<li>描述在一定时间范围内能够从一个节点传送到另一个节点的数据量</li>\n<li>通常以 bps 为单位</li>\n</ul>\n</li>\n<li>延迟（delay）\n<ul>\n<li>描述网络上数据从一个节点传送到另一个节点所经历的时间<br>\n<a name=\"DTkzY\"></a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"2-osi参考模型与tcpip模型\"><a class=\"markdownIt-Anchor\" href=\"#2-osi参考模型与tcpip模型\">#</a> 2、OSI 参考模型与 TCP/IP 模型</h1>\n<p><a name=\"BSAWh\"></a></p>\n<h2 id=\"osi参考模型\"><a class=\"markdownIt-Anchor\" href=\"#osi参考模型\">#</a> OSI 参考模型：</h2>\n<ul>\n<li>OSI 参考模型定义了网络中设备所遵守的层次结构</li>\n<li>分层结构的优点：\n<ul>\n<li>开放的标准化接口</li>\n<li>多厂商兼容性</li>\n<li>易于理解、学习和更新协议标准</li>\n<li>实现模块化工程，降低了开发实现的复杂度</li>\n<li>便于故障排除</li>\n</ul>\n</li>\n<li>OSI 参考模型层次结构：\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90c1f9dbc2.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>对等通信：\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90c5493e75.png\" alt=\"image.png\"></li>\n<li>每一层都使用自己的协议</li>\n<li>每一层都利用下层提供的服务与对等层通信</li>\n</ul>\n</li>\n<li>数据封装与数据解封：\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90c726c0af.png\" alt=\"image.png\"><br>\n 物理层：</li>\n</ul>\n</li>\n<li>物理层：定义电压、接口、线缆标准、传输距离等</li>\n<li>物理层介质：\n<ul>\n<li>同轴电缆（coaxial cable）：细缆和粗缆</li>\n<li>双绞线（fiber）：单模、多模</li>\n<li>无线（wireless）：红外线、蓝牙、Blue Tooth、WLAN 技术</li>\n</ul>\n</li>\n<li>典型物理层标准和设备：\n<ul>\n<li>物理层介质：\n<ul>\n<li>双绞线、同轴电缆、光纤、无线电信号等</li>\n</ul>\n</li>\n<li>局域网物理层：\n<ul>\n<li>常见标准：10Base-TX/FX、1000Base-T、1000Base-SX/LX</li>\n<li>常见设备：中继器、集线器</li>\n</ul>\n</li>\n<li>广域网物理层：\n<ul>\n<li>常见标准：RS-232、V.24、V.35</li>\n<li>常见设备：Modem（调制解调器）<br>\n数据链路层</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数据链路层的功能：\n<ul>\n<li>编帧和识别帧</li>\n<li>数据链路的建立、维持和释放</li>\n<li>传输资源控制</li>\n<li>流量控制</li>\n<li>差错验证</li>\n<li>寻址</li>\n<li>识别上层数据</li>\n</ul>\n</li>\n<li>局域网数据链路层分为 LLC 子层和 MAC 子层</li>\n<li>典型数据链路层标准：\n<ul>\n<li>局域网数据链路层标准：\n<ul>\n<li>IEEE802.1 基本局域网问题</li>\n<li>IEEE802.2 定义 LLC 子层</li>\n<li>IEEE802.3 以太网标准</li>\n<li>IEEE802.4 令牌总线</li>\n<li>IEEE802.5 令牌环网</li>\n</ul>\n</li>\n<li>广域网数据链路层标准：\n<ul>\n<li>HDLC</li>\n<li>PPP</li>\n<li>Frame Relay<br>\n 网络层</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>功能\n<ul>\n<li>编址</li>\n<li>路由</li>\n<li>拥塞控制</li>\n<li>异种网络互连</li>\n</ul>\n</li>\n<li>网络层地址\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90c8d66ba9.png\" alt=\"image.png\"></li>\n<li>网络层地址通常由两部分组成\n<ul>\n<li>网络地址</li>\n<li>主机地址</li>\n</ul>\n</li>\n<li>网络层地址是全局唯一的</li>\n</ul>\n</li>\n<li>路由协议与可路由协议：\n<ul>\n<li>可路由协议（routed protocol）：定义数据包内各个字段的格式和用途，对数据进行网络层封装</li>\n<li>路由协议（routing protocol）：在路由器之间传递信息，计算路由并形成路由表，为可路由协议选择路径</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90cb386770.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>面向连接和无连接的服务\n<ul>\n<li>面向连接的服务：\n<ul>\n<li>通信之前先建立连接，通信完成后断开连接</li>\n<li>有序传递</li>\n<li>应答确认</li>\n<li>差错重传</li>\n<li>适合于对可靠性要求高的应用</li>\n</ul>\n</li>\n<li>无连接的服务\n<ul>\n<li>尽力而为的服务</li>\n<li>无需建立连接</li>\n<li>无序列号机制，无确认机制，无重传机制</li>\n<li>适合于对延迟敏感的应用</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>网络层协议操作:\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90cc7d0c13.png\" alt=\"image.png\"><br>\n 传输层</li>\n</ul>\n</li>\n<li>传输层功能：\n<ul>\n<li>分段上层数据</li>\n<li>建立端到端连接</li>\n<li>透明、可靠传输</li>\n<li>流量控制</li>\n</ul>\n</li>\n<li>传输层协议：\n<ul>\n<li>主要有 TCP/IP 协议族的 TCP 协议和 UDP 协议，以及 IPX/SPX 协议组的 SPX 协议等</li>\n</ul>\n</li>\n</ul>\n<p>会话层协议：</p>\n<ul>\n<li>主机间通信</li>\n<li>建立、维护、终结应用程序之间的会话</li>\n<li>SQL、NFS、RPC 等</li>\n</ul>\n<p>表示层协议：</p>\n<ul>\n<li>定义数据格式与结构</li>\n<li>协商上层数据格式</li>\n<li>ASCII、MPEG、JPEG 等</li>\n</ul>\n<p>应用层协议：</p>\n<ul>\n<li>为应用程序进程（比如文字处理、邮件、电子表格）提供网络服务</li>\n<li>文字处理、邮件、电子表格等<br>\n<a name=\"WkhCL\"></a></li>\n</ul>\n<h2 id=\"tcpip模型\"><a class=\"markdownIt-Anchor\" href=\"#tcpip模型\">#</a> TCP/IP 模型</h2>\n<p>TCP/IP 模型的层次结构：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90cde16303.png\" alt=\"image.png\"><br>\n 网络层</li>\n<li>负责将数据包送达正确的目的\n<ul>\n<li>数据包的路由</li>\n<li>路由的维护</li>\n</ul>\n</li>\n<li>主要协议：\n<ul>\n<li>IP</li>\n<li>ICMP</li>\n<li>IGMP<br>\n 传输层</li>\n</ul>\n</li>\n<li>负责提供端到端通信\n<ul>\n<li>数据完整性校验</li>\n<li>差错重传</li>\n<li>数据的重新排序</li>\n</ul>\n</li>\n<li>主要协议：\n<ul>\n<li>TCP</li>\n<li>UDP<br>\n 应用层</li>\n</ul>\n</li>\n<li>负责处理特定的应用程序细节\n<ul>\n<li>远程访问</li>\n<li>资源共享</li>\n</ul>\n</li>\n<li>主要协议\n<ul>\n<li>Telnet</li>\n<li>FTP/TFTP</li>\n<li>SMTP/POP3</li>\n<li>SNMP/HTTP<br>\n 网络接口层</li>\n</ul>\n</li>\n<li>负责处理与传输介质相关的细节\n<ul>\n<li>物理线路和接口</li>\n<li>链路层通信</li>\n</ul>\n</li>\n<li>主要协议：\n<ul>\n<li>以太网 / FDDI / 令牌环</li>\n<li>SLIP/HDLC/PPP</li>\n<li>X.25 / 帧中继 / ATM<br>\n<a name=\"CHvmR\"></a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"3-局域网基本原理\"><a class=\"markdownIt-Anchor\" href=\"#3-局域网基本原理\">#</a> 3、局域网基本原理</h1>\n<p><a name=\"gbNsx\"></a></p>\n<h2 id=\"局域网概述\"><a class=\"markdownIt-Anchor\" href=\"#局域网概述\">#</a> 局域网概述</h2>\n<p>局域网与 OSI 参考模型：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90cf037627.png\" alt=\"image.png\"></li>\n</ul>\n<p>主要局域网技术：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90d0057ab7.png\" alt=\"image.png\"><br>\n<a name=\"l34pk\"></a></li>\n</ul>\n<h2 id=\"以太网技术基础\"><a class=\"markdownIt-Anchor\" href=\"#以太网技术基础\">#</a> 以太网技术基础</h2>\n<p>早期以太网技术介绍：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90d1219b1f.png\" alt=\"image.png\"></li>\n</ul>\n<p>以太网集线器：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90d2125de3.png\" alt=\"image.png\"></li>\n<li>集线器（hub）与主机构成物理星型拓扑</li>\n<li>集线器内部采用总线结构，任意时间只有一台主机能占用总线</li>\n</ul>\n<p>MDI/MDIX：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90d326eb65.png\" alt=\"image.png\"></li>\n<li>同类接口互连用交叉线，异类接口互连用直连线</li>\n<li>H3C 以太网交换机支持 MDI/MDIX 自适应，不必考虑连线类型</li>\n</ul>\n<p>10BASE-T 线缆和接口：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90d43bbcfa.png\" alt=\"image.png\"></li>\n</ul>\n<p>CSMA/CD 载波侦听：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90d55d2bf4.png\" alt=\"image.png\"></li>\n</ul>\n<p>CSMA/CD 冲突检测和退避：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90d64b0167.png\" alt=\"image.png\"></li>\n</ul>\n<p>MAC 地址：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90d76056e0.png\" alt=\"image.png\"></li>\n<li>MAC 地址为 48 位二进制数，常用 12 位 16 进制数表示</li>\n</ul>\n<p>单播与广播：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90d86e7695.png\" alt=\"image.png\"></li>\n<li>接收地址包括本卡 MAC 地址、广播地址和本机所属组播组地址</li>\n<li>网卡丢弃与本卡接收地址不匹配的帧</li>\n<li>网卡解开与本卡接收地址匹配的帧，将数据递交上层处理</li>\n</ul>\n<p>以太网流量控制：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90d975b6dc.png\" alt=\"image.png\"></li>\n<li>在半双工线路上采用背压式流控\n<ul>\n<li>接收方反向发送电压信号制造冲突，使发送方停止发送</li>\n</ul>\n</li>\n<li>在全双工线路上采用 802.3 PAUSE 流控\n<ul>\n<li>接受方向保留组播地址 01-80-C2-00-00-01 发送 PAUSE 帧，通知发送方停止发送</li>\n</ul>\n</li>\n</ul>\n<p>总线型以太网拓扑扩展：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90dab33ab0.png\" alt=\"image.png\"></li>\n<li>用中继器可以拓展 10BASE5 和 10BASE2 网络范围</li>\n<li>所用线缆段都属于一个冲突域</li>\n</ul>\n<p>星型以太网拓扑拓展：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90dbb0e619.png\" alt=\"image.png\"></li>\n<li>用集线器可以拓展 10BASE-T 网络范围</li>\n<li>全部线缆段都属于一个冲突域<br>\n<a name=\"sDn9P\"></a></li>\n</ul>\n<h2 id=\"现代以太网技术\"><a class=\"markdownIt-Anchor\" href=\"#现代以太网技术\">#</a> 现代以太网技术</h2>\n<p>单模光纤与多模光纤：</p>\n<ul>\n<li>多模光纤：\n<ul>\n<li>较粗的纤芯，传输多种不同波长不同角度的光</li>\n<li>衰耗大，传输距离通常在千米以内</li>\n<li>成本低</li>\n</ul>\n</li>\n<li>单模光纤：\n<ul>\n<li>纤芯与光波长相同，传输单一波长的激光</li>\n<li>衰耗小，传输距离可达数十千米</li>\n<li>成本高</li>\n</ul>\n</li>\n</ul>\n<p>常用的光纤连接器：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90dd089ab3.png\" alt=\"image.png\"></li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90de23a566.png\" alt=\"image.png\"></li>\n</ul>\n<p>快速以太网和千兆以太网:</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90df256083.png\" alt=\"image.png\"></li>\n</ul>\n<p>用交换机拓展以太网拓扑:</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90e01ecb1b.png\" alt=\"image.png\"></li>\n<li>隔离冲突域，避免冲突域过大</li>\n<li>进一步扩大物理连接范围</li>\n<li>提高以太网带宽利用率，增加吞吐量</li>\n<li>适应不同的速率和不同的双工状况<br>\n<a name=\"HHeFK\"></a></li>\n</ul>\n<h2 id=\"wlan技术基础\"><a class=\"markdownIt-Anchor\" href=\"#wlan技术基础\">#</a> WLAN 技术基础</h2>\n<p>WLAN 简介：</p>\n<ul>\n<li>WLAN（Wireless LAN）是计算机网络与无线通信技术相结合的产物</li>\n<li>用射频（RF）技术取代旧式的双绞线构成局域网络，提供传统有线局域网的所有功能</li>\n<li>具有部署简单、移动方便、使用便捷等优点</li>\n</ul>\n<p>802.11 协议的发展：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90e1420f8a.png\" alt=\"image.png\"></li>\n</ul>\n<p>各国授权使用的频段：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90e249be1e.png\" alt=\"image.png\"></li>\n</ul>\n<p>802.11b/g 工作频段划分图：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90e34aff4f.png\" alt=\"image.png\"></li>\n</ul>\n<p>无线覆盖原则 —— 蜂窝式覆盖</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90e43a8300.png\" alt=\"image.png\"></li>\n<li>任意相邻区域使用无频率交叉的频道，如 1、6、11 频道</li>\n<li>适当调整发射功率，避免跨区域同频干扰</li>\n<li>蜂窝式无线覆盖实现无交叉频率重复使用</li>\n</ul>\n<p>802.11 无线网络的介质访问控制</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90e55debbb.png\" alt=\"image.png\"></li>\n</ul>\n<p>无线网络典型部署 - 热点覆盖</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90e66e0bf3.png\" alt=\"image.png\"></li>\n</ul>\n<p>无线网路典型部署 - 办公地点无线互连</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90e7686a5c.png\" alt=\"image.png\"></li>\n</ul>\n<p><a name=\"Hl16p\"></a></p>\n<h1 id=\"4-广域网基本原理\"><a class=\"markdownIt-Anchor\" href=\"#4-广域网基本原理\">#</a> 4、广域网基本原理</h1>\n<p><a name=\"ussEC\"></a></p>\n<h2 id=\"广域网基本概念\"><a class=\"markdownIt-Anchor\" href=\"#广域网基本概念\">#</a> 广域网基本概念</h2>\n<p>局域网的不足：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90e884f9d5.png\" alt=\"image.png\"></li>\n<li>以太网等局域网技术无法支持远程传输</li>\n<li>企图通过大量设备级连将局域网拓展到超远距离是不现实的</li>\n<li>即使可以拓展局域网的范围，但普通组织没有专用的长距离线路</li>\n</ul>\n<p>广域网的作用：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90e998b206.png\" alt=\"image.png\"></li>\n<li>基于电信运营商的通信网络设施建立远程连接</li>\n<li>在相距遥远的局域网之间建立连接性</li>\n</ul>\n<p>广域网与 OSI 参考模型</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90ea75d8cb.png\" alt=\"image.png\"></li>\n</ul>\n<p>广域网连接方式</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90ebb66a8c.png\" alt=\"image.png\"><br>\n<a name=\"llUYy\"></a></li>\n</ul>\n<h2 id=\"点到点广域网技术介绍\"><a class=\"markdownIt-Anchor\" href=\"#点到点广域网技术介绍\">#</a> 点到点广域网技术介绍</h2>\n<p>专线连接模型：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90ecc566a3.png\" alt=\"image.png\"></li>\n<li>点到点永久性独占线路，固定带宽</li>\n<li>典型技术：异步模拟专线、同步数字专线</li>\n<li>链路层常使用 SDLC、HDLC、PPP</li>\n</ul>\n<p>电路交换链接模型</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90edd582e7.png\" alt=\"image.png\"></li>\n<li>按需拨号建立连接，独占线路，带宽固定</li>\n<li>典型技术：PSTN、ISDN</li>\n<li>链路层常采用 PPP</li>\n</ul>\n<p>常用接口和线缆</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90eee494f5.png\" alt=\"image.png\"></li>\n<li>接口和线缆：\n<ul>\n<li>V.24、V.35、X.21、RS-449、RS-530、RJ-11、RJ-45、双绞线等</li>\n</ul>\n</li>\n<li>设备：\n<ul>\n<li>调制解调器、同步 CSU/DSU 等</li>\n</ul>\n</li>\n</ul>\n<p>V.24 接口线缆：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90efe8fe6f.png\" alt=\"image.png\"></li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90f0f7e71e.png\" alt=\"image.png\"></li>\n<li>支持同步和异步两种方式</li>\n<li>异步方式下最高速率为 115200bps</li>\n<li>同步方式下最高速率为 64000bps</li>\n</ul>\n<p>V.35 接口线缆：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90f2067b2e.png\" alt=\"image.png\"></li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90f2ee07d8.png\" alt=\"image.png\"></li>\n<li>只能工作在同步方式下</li>\n<li>同步方式下最大速率 2Mbps</li>\n</ul>\n<p>其他常见接口线缆：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90f3da6aa8.png\" alt=\"image.png\"></li>\n</ul>\n<p>链路层协议：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90f4bddc4b.png\" alt=\"image.png\"></li>\n<li>在点到点连接中，链路层协议通常运行于端系统之间</li>\n<li>常见链路层协议包括 HDLC、PPP、SLIP、SDLC 等<br>\n<a name=\"r7ZSo\"></a></li>\n</ul>\n<h2 id=\"分组交换广域网技术介绍\"><a class=\"markdownIt-Anchor\" href=\"#分组交换广域网技术介绍\">#</a> 分组交换广域网技术介绍</h2>\n<p>分组交换连接模型：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90f5bdde00.png\" alt=\"image.png\"></li>\n<li>一个端系统设备可以通过虚电路连接到多个通信对端</li>\n<li>典型技术：X.25、帧中继、ATM</li>\n</ul>\n<p><a name=\"dBh0b\"></a></p>\n<h1 id=\"5-ip基本原理\"><a class=\"markdownIt-Anchor\" href=\"#5-ip基本原理\">#</a> 5、IP 基本原理</h1>\n<p><a name=\"Ln3Yb\"></a></p>\n<h2 id=\"ip协议概述\"><a class=\"markdownIt-Anchor\" href=\"#ip协议概述\">#</a> IP 协议概述</h2>\n<p>IP 及其相关协议：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90f6d184e0.png\" alt=\"image.png\"></li>\n</ul>\n<p>IP 的主要作用：</p>\n<ul>\n<li>表示节点和链路\n<ul>\n<li>用唯一的 IP 地址标识每一个节点</li>\n<li>用唯一的 IP 网络号标识每一个链路</li>\n</ul>\n</li>\n<li>寻址和转发\n<ul>\n<li>确定节点所有网络的位置，进而确定节点所在的位置</li>\n<li>IP 路由器选择适当的路径将 IP 包转发到目的节点</li>\n</ul>\n</li>\n<li>适应各种数据链路\n<ul>\n<li>根据链路的 MTU 对 IP 包进行分片和重组</li>\n<li>为了通过实际的数据链路传递信息，须建立 IP 地址到数据链路层地址的映射</li>\n</ul>\n</li>\n</ul>\n<p>IP 网络的结构:</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90f7c33c89.png\" alt=\"image.png\"></li>\n<li>IP 网络由多个网段构成，每个网段对应一个链路</li>\n<li>路由器负责将网段连接起来，适配链路层协议，在网络之间转发数据包</li>\n</ul>\n<p>IP 头格式:</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90f8d4be8a.png\" alt=\"image.png\"><br>\n<a name=\"ZwmXo\"></a></li>\n</ul>\n<h2 id=\"ip地址和地址映射\"><a class=\"markdownIt-Anchor\" href=\"#ip地址和地址映射\">#</a> IP 地址和地址映射</h2>\n<p>IP 地址格式和表示方法：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90f9b7c274.png\" alt=\"image.png\"></li>\n</ul>\n<p>网络号和主机号：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90fa980278.png\" alt=\"image.png\"></li>\n<li>网络号用于区分不同的 IP 网络</li>\n<li>主机号用于标识网络内的一个 IP 节点</li>\n</ul>\n<p>IP 地址分类：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90fb86666f.png\" alt=\"image.png\"></li>\n</ul>\n<p>特殊的 IP 地址：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90fc57bf74.png\" alt=\"image.png\"></li>\n</ul>\n<p>ARP：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90fd64d0e3.png\" alt=\"image.png\"></li>\n</ul>\n<p>RARP：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90fe580d50.png\" alt=\"image.png\"><br>\n<a name=\"Gyue9\"></a></li>\n</ul>\n<h2 id=\"ip包转发\"><a class=\"markdownIt-Anchor\" href=\"#ip包转发\">#</a> IP 包转发</h2>\n<p>主机单播 IP 包发送：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a90ff426ac9.png\" alt=\"image.png\"></li>\n<li>若目的地址所处网络号与本机所处网络号相同，则目的处于直连网段</li>\n</ul>\n<p>路由器单播 IP 包转发：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91001776fa.png\" alt=\"image.png\"></li>\n<li>若目的地址所处网络号与本机任一接口的网络号相同，则目的处于相应接口直连网段</li>\n<li>路由器通过查找路由信息判断下一跳路由器地址</li>\n</ul>\n<p>主机接收 IP 包：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9100f21300.png\" alt=\"image.png\"></li>\n<li>如果 IP 包的目的地址符合下列情况之一，则主机接收此包\n<ul>\n<li>目的 IP 地址等于自己的 IP 地址</li>\n<li>目的 IP 地址是一个广播地址</li>\n<li>目的 IP 地址是一个组播地址，而本机的某个服务属于此组播组</li>\n</ul>\n</li>\n<li>否则主机的网络层丢弃此 IP 包</li>\n</ul>\n<p>广播风暴：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9101ed046f.png\" alt=\"image.png\"></li>\n<li>路由器转发广播将导致全网充斥广播，可能引发广播风暴</li>\n<li>路由器默认不转发广播<br>\n<a name=\"RyUY2\"></a></li>\n</ul>\n<h2 id=\"其他相关协议介绍\"><a class=\"markdownIt-Anchor\" href=\"#其他相关协议介绍\">#</a> 其他相关协议介绍</h2>\n<p>代理 ARP：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9102e0fc34.png\" alt=\"image.png\"></li>\n</ul>\n<p>ICMP：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9103d97290.png\" alt=\"image.png\"></li>\n<li>ICMP 定义了错误报告和其它关于 IP 数据包处理情况的消息</li>\n<li>ICMP 可用于报告 IP 数据包传递过程中发生的错误、失败等信息，提供网络诊断等功能</li>\n<li>ICMP 消息可分为 ICMP 差错消息和 ICMP 查询消息</li>\n<li>\n<br />\n</li>\n</ul>\n<p><a name=\"P9I8K\"></a></p>\n<h1 id=\"6-tcp和udp基本原理\"><a class=\"markdownIt-Anchor\" href=\"#6-tcp和udp基本原理\">#</a> 6、TCP 和 UDP 基本原理</h1>\n<p><a name=\"gO8q9\"></a></p>\n<h2 id=\"tcpip传输层的作用\"><a class=\"markdownIt-Anchor\" href=\"#tcpip传输层的作用\">#</a> TCP/IP 传输层的作用</h2>\n<p>传输层的作用：</p>\n<ul>\n<li>提供面向连接或无连接的服务</li>\n<li>维护连接状态</li>\n<li>对应用层数据进行分段和封装</li>\n<li>实现多路复用</li>\n<li>可靠地传输数据</li>\n<li>执行流量控制<br>\n<a name=\"VtpXT\"></a></li>\n</ul>\n<h2 id=\"tcp基本原理\"><a class=\"markdownIt-Anchor\" href=\"#tcp基本原理\">#</a> TCP 基本原理</h2>\n<p>TCP 的特点：</p>\n<ul>\n<li>三次握手\n<ul>\n<li>建立可靠连接</li>\n</ul>\n</li>\n<li>确认机制\n<ul>\n<li>应答接收</li>\n</ul>\n</li>\n<li>端口号\n<ul>\n<li>多路复用</li>\n</ul>\n</li>\n<li>序列号\n<ul>\n<li>丢失检测、乱序重排</li>\n</ul>\n</li>\n<li>完整性校验\n<ul>\n<li>差错检测</li>\n</ul>\n</li>\n<li>窗口机制\n<ul>\n<li>流量控制</li>\n</ul>\n</li>\n</ul>\n<p>TCP 封装：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91057ea8bb.png\" alt=\"image.png\"></li>\n</ul>\n<p>TCP/UDP 端口号：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a910657d6ff.png\" alt=\"image.png\"></li>\n</ul>\n<p>TCP 连接的建立：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91072bf2d3.png\" alt=\"image.png\"></li>\n</ul>\n<p>TCP 连接的拆除：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9108070657.png\" alt=\"image.png\"></li>\n</ul>\n<p>传输确认：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9108f45cdf.png\" alt=\"image.png\"></li>\n</ul>\n<p>超时重传：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a910a13cc53.png\" alt=\"image.png\"></li>\n</ul>\n<p>滑动窗口：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a910afe6a89.png\" alt=\"image.png\"><br>\n<a name=\"uhB6G\"></a></li>\n</ul>\n<h2 id=\"udp基本原理\"><a class=\"markdownIt-Anchor\" href=\"#udp基本原理\">#</a> UDP 基本原理</h2>\n<p>UDP 封装：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a910be6637a.png\" alt=\"image.png\"></li>\n</ul>\n<p>TCP 与 UDP 的对比</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a910cc1f4c1.png\" alt=\"image.png\"><br>\n<a name=\"yJsjI\"></a></li>\n</ul>\n<h1 id=\"7-路由器及其操作系统介绍\"><a class=\"markdownIt-Anchor\" href=\"#7-路由器及其操作系统介绍\">#</a> 7、路由器及其操作系统介绍</h1>\n<p><a name=\"chMyL\"></a></p>\n<h2 id=\"路由器与交换机的作用特点\"><a class=\"markdownIt-Anchor\" href=\"#路由器与交换机的作用特点\">#</a> 路由器与交换机的作用特点</h2>\n<p>路由器的作用：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a910dbe4f18.png\" alt=\"image.png\"></li>\n<li>连接具有不同介质的链路</li>\n<li>连接网络或子网，隔离广播</li>\n<li>对数据报文执行寻路和转发</li>\n<li>交换和维护路由信息</li>\n</ul>\n<p>路由器的特点：</p>\n<ul>\n<li>主要工作在 OSI 模型的物理层、数据链路层和网络层</li>\n<li>根据网络层信息进行路由转发</li>\n<li>提供丰富的接口类型</li>\n<li>支持丰富的链路层协议</li>\n<li>支持多种路由协议</li>\n</ul>\n<p>交换机的作用：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a910ea22358.png\" alt=\"image.png\"></li>\n<li>连接多个以太网物理段，隔离冲突域</li>\n<li>对以太网帧进行高速而透明的交换转发</li>\n<li>自行学习和维护 MAC 地址信息</li>\n</ul>\n<p>交换机的特点：</p>\n<ul>\n<li>主要工作在 OSI 模型的物理层、数据链路层</li>\n<li>提供以太网间的透明桥接和交换</li>\n<li>依据链路层的 MAC 地址，将以太网数据帧在端口间进行转发</li>\n</ul>\n<p>路由器与交换机的发展趋势：</p>\n<ul>\n<li>路由和交换的融合</li>\n<li>多业务功能的融合<br>\n<a name=\"HHZxc\"></a></li>\n</ul>\n<h2 id=\"h3c路由器与交换机介绍\"><a class=\"markdownIt-Anchor\" href=\"#h3c路由器与交换机介绍\">#</a> H3C 路由器与交换机介绍</h2>\n<p>H3C 路由器系列：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a910f9a5776.png\" alt=\"image.png\"></li>\n</ul>\n<p>H3C 路由器示例</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91107edeae.png\" alt=\"image.png\"></li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91115f30a4.png\" alt=\"image.png\"></li>\n</ul>\n<p>H3C 交换机系列：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91123f1043.png\" alt=\"image.png\"></li>\n</ul>\n<p>H3C 交换机示例：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9113106783.png\" alt=\"image.png\"><br>\n<a name=\"dDjeu\"></a></li>\n</ul>\n<h2 id=\"h3c网络设备操作系统comware\"><a class=\"markdownIt-Anchor\" href=\"#h3c网络设备操作系统comware\">#</a> H3C 网络设备操作系统 Comware</h2>\n<p>Comware 的作用：</p>\n<ul>\n<li>Comware 是设备运行的网络操作系统，H3C 产品的核心软件平台</li>\n<li>对硬件驱动和底层操作系统进行屏蔽与封装</li>\n<li>集成了丰富的链路层协议、以太网交换、IP 路由及转发、安全等功能模块</li>\n<li>制定了软硬件接口标准规范，对第三方厂商提供开放平台与接口</li>\n</ul>\n<p>Comware 的特点：</p>\n<ul>\n<li>支持 IPv4 及 IPv6 多协议</li>\n<li>支持多核 CPU</li>\n<li>路由和交换功能融合</li>\n<li>高可靠性和弹性扩展</li>\n<li>灵活的裁减和定制功能<br>\n<a name=\"lNWT5\"></a></li>\n</ul>\n<h1 id=\"8-命令行操作基础\"><a class=\"markdownIt-Anchor\" href=\"#8-命令行操作基础\">#</a> 8、命令行操作基础</h1>\n<p><a name=\"rSTBt\"></a></p>\n<h2 id=\"配置网络设备的方法\"><a class=\"markdownIt-Anchor\" href=\"#配置网络设备的方法\">#</a> 配置网络设备的方法</h2>\n<p>访问网络设备命令行接口的方法：</p>\n<ul>\n<li>通过 Console 口本地访问</li>\n<li>通过 AUX 口远程访问</li>\n<li>使用 Telnet 终端访问</li>\n<li>使用 SSH 终端访问</li>\n<li>通过异步串口访问</li>\n</ul>\n<p>使用 Console 口进行连接：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a911450cd23.png\" alt=\"image.png\"></li>\n<li>创建新连接：\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a911547d34c.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>选择 COM 口\n<ul>\n<li>选择串口，根据实际连接情况选择对应的 COM 口</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91161a7328.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>进入设备配置界面:\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9116fa0a80.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n<p>使用 AUX 口进行连接:</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9117f16f89.png\" alt=\"image.png\"></li>\n</ul>\n<p>使用 Telnet 进行连接：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9118cbb53d.png\" alt=\"image.png\"></li>\n</ul>\n<p>SSH 介绍：</p>\n<ul>\n<li>SSH（Secure Shell，安全外壳）在无安全保证的网络上提供安全的远程登录等服务</li>\n<li>由传输协议、验证协议和连接协议三部分组成</li>\n<li>使用 TCP 端口 22</li>\n<li>提供 Password 和 Publickey 两种验证方式</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9119aa4a62.png\" alt=\"image.png\"><br>\n<a name=\"hVMi8\"></a></li>\n</ul>\n<h2 id=\"命令行使用入门\"><a class=\"markdownIt-Anchor\" href=\"#命令行使用入门\">#</a> 命令行使用入门</h2>\n<p>命令视图：</p>\n<ul>\n<li>用户视图：\n<ul>\n<li>设备启动后的缺省视图，可查看启动后基本运行状态和统计信息</li>\n</ul>\n</li>\n<li>系统视图：\n<ul>\n<li>配置系统全局通用参数的视图</li>\n</ul>\n</li>\n<li>路由协议视图：\n<ul>\n<li>配置路由协议参数的视图</li>\n</ul>\n</li>\n<li>接口视图：\n<ul>\n<li>配置接口参数的视图</li>\n</ul>\n</li>\n<li>用户线视图：\n<ul>\n<li>配置登陆设备的给个用户属性的视图</li>\n</ul>\n</li>\n</ul>\n<p>各种视图之间的关系</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a911ab117c2.png\" alt=\"image.png\"></li>\n<li>用 <code>Ctrl+Z</code>  可以从任意视图直接回到用户视图</li>\n</ul>\n<p>使用命令视图</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a911b85a1f9.png\" alt=\"image.png\"></li>\n</ul>\n<p>命令类型：</p>\n<ul>\n<li>读类型：\n<ul>\n<li>用于显示系统配置信息和维护信息，如显示命令 <code>display</code> 、显示文件信息的命令 <code>dir</code></li>\n</ul>\n</li>\n<li>写类型：\n<ul>\n<li>用于对系统进行配置，如使能信息中心功能的命令 <code>info-center enable</code> 、配置调试信息开关的命令 <code>debugging</code></li>\n</ul>\n</li>\n<li>执行类型：\n<ul>\n<li>用于执行特定的功能，如 <code>ping</code>  命令、与 FTP 服务器建立连接的命令 <code>ftp</code></li>\n</ul>\n</li>\n</ul>\n<p>用户角色</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a911c5e6855.png\" alt=\"image.png\"></li>\n</ul>\n<p>命令行帮助特性</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a911d422436.png\" alt=\"image.png\"></li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a911e211dab.png\" alt=\"image.png\"></li>\n</ul>\n<p>错误提示信息</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a911eeb0f1a.png\" alt=\"image.png\"></li>\n</ul>\n<p>命令行历史记录功能</p>\n<ul>\n<li>查看历史命令记录\n<ul>\n<li><code>display history-command</code></li>\n</ul>\n</li>\n<li>翻阅和调出历史记录中的某一条命令\n<ul>\n<li>用 <code>↑</code> 或 <code>Ctrl+P</code>  快捷键调出上一条历史命令</li>\n<li>用 <code>↓</code> 或 <code>Ctrl+N</code>  快捷键调出下一条历史命令</li>\n</ul>\n</li>\n</ul>\n<p>命令行编辑功能</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a911fbaa7a9.png\" alt=\"image.png\"></li>\n</ul>\n<p>分页显示</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9120adb82a.png\" alt=\"image.png\"></li>\n<li><code>Space</code> ：继续显示下一屏信息</li>\n<li><code>Enter</code> ：继续显示下一行信息</li>\n<li><code>Ctrl+C</code> ：停止显示和命令执行<br>\n<a name=\"Ll5YK\"></a></li>\n</ul>\n<h2 id=\"常用的命令\"><a class=\"markdownIt-Anchor\" href=\"#常用的命令\">#</a> 常用的命令</h2>\n<p>常用设备管理命令</p>\n<ul>\n<li>配置设备名称：\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a912188a4e6.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>配置系统时间：\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91227508c1.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>显示系统时间：\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91234b52c8.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>配置欢迎 / 提示信息：\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91241cbc95.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n<p>常用的信息查看命令</p>\n<ul>\n<li>查看版本信息：\n<ul>\n<li><code>&lt;H3C&gt; display version</code></li>\n</ul>\n</li>\n<li>查看当前配置：\n<ul>\n<li><code>&lt;H3C&gt; display current-configuration</code></li>\n</ul>\n</li>\n<li>显示接口信息：\n<ul>\n<li><code>&lt;H3C&gt; display interface</code></li>\n</ul>\n</li>\n<li>显示接口 IP 状态与配置信息：\n<ul>\n<li><code>&lt;H3C&gt; display ip interface brief</code></li>\n</ul>\n</li>\n<li>显示系统运行统计信息：\n<ul>\n<li><code>&lt;H3C&gt; display diagonostic-information</code> <br>\n<a name=\"cDpGV\"></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"配置远程登录\"><a class=\"markdownIt-Anchor\" href=\"#配置远程登录\">#</a> 配置远程登录</h2>\n<p>路由器 Telnet 服务配置命令</p>\n<ul>\n<li>配置与网络相连端口的 IP 地址\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a91251ab491.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>使用 Telnet 服务器端功能\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9125f0928f.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>进入 vty 用户界面视图，设置验证方式\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9126c2da70.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>设置登录密码和用户级别\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/08/64a9127b8c911.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>创建用户、配置密码、设置服务类型、设置用户级别\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba8284570b.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n<p>Telnet 配置例子</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba8446e27f.png\" alt=\"image.png\"></li>\n<li>用 Telnet 登录\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba853cd0d1.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n<p>路由器 SSH 服务配置命令</p>\n<ul>\n<li>使用 SSH 服务器功能\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba8623245b.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>配置 SSH 客户端登录时的用户界面\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba87087ca0.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>配置 SSH 用户\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba87f57056.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>生成 RSA 密钥\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba88ebbd5c.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>导出 RSA 密钥\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba89bbfe16.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>销毁 RAS 密钥\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba8a8a47eb.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n<p>SSH 配置例子</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba8b805314.png\" alt=\"image.png\"></li>\n<li>启动 SSH 客户端\n<ul>\n<li>开启客户端软件 PuTTY，默认为 SSH 连接方式，输入主机地址 192.168.0.254</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba8c7740fd.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>登录网络设备\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba8d5ddf31.png\" alt=\"image.png\"></li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba8e507235.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n<p><a name=\"JqZrQ\"></a></p>\n<h1 id=\"9-网络设备的文件管理\"><a class=\"markdownIt-Anchor\" href=\"#9-网络设备的文件管理\">#</a> 9、网络设备的文件管理</h1>\n<p><a name=\"ArcDR\"></a></p>\n<h2 id=\"网络设备的文件系统\"><a class=\"markdownIt-Anchor\" href=\"#网络设备的文件系统\">#</a> 网络设备的文件系统</h2>\n<ul>\n<li>设备以文件的方式对运行所需的数据进行存储</li>\n<li>网络设备通过文件系统管理这些文件</li>\n<li>主要文件：\n<ul>\n<li>启动软件包</li>\n<li>配置文件</li>\n<li>日志文件<br>\n<a name=\"oJLHo\"></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"网络设备的存储方式\"><a class=\"markdownIt-Anchor\" href=\"#网络设备的存储方式\">#</a> 网络设备的存储方式：</h3>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba8f2b4d4e.png\" alt=\"image.png\"></li>\n<li>在不同型号的设备上，Flash 可能是内置的 Flash 存储器，也可能是 CF 卡<br>\n<a name=\"mQvOe\"></a></li>\n</ul>\n<h3 id=\"文件系统的操作\"><a class=\"markdownIt-Anchor\" href=\"#文件系统的操作\">#</a> 文件系统的操作：</h3>\n<ul>\n<li>目录操作：\n<ul>\n<li>创建 / 删除目录、显示当前工作目录以及显示指定目录下的文件或目录的信息等</li>\n</ul>\n</li>\n<li>文件操作：\n<ul>\n<li>删除文件、恢复删除的文件、彻底删除文件、显示文件的内容、重命名文件、拷贝文件、移动文件、显示指定文件的信息等</li>\n</ul>\n</li>\n<li>存储设备操作：\n<ul>\n<li>恢复存储设备的空间、格式化存储设备等</li>\n</ul>\n</li>\n<li>设置文件系统的提示方式<br>\n<a name=\"tFUty\"></a></li>\n</ul>\n<h2 id=\"文件的管理\"><a class=\"markdownIt-Anchor\" href=\"#文件的管理\">#</a> 文件的管理</h2>\n<p><a name=\"GQw8u\"></a></p>\n<h3 id=\"配置文件介绍\"><a class=\"markdownIt-Anchor\" href=\"#配置文件介绍\">#</a> 配置文件介绍</h3>\n<ul>\n<li>起始配置与当前配置</li>\n<li>配置文件是以文本格式保存的命令，默认配置并不出现在配置文件中</li>\n<li>配置文件的选择顺序\n<ul>\n<li>如果用户指定了启动配置文件，且配置文件存在，则以启动配置文件进行初始化</li>\n<li>如果用户指定的启动配置文件不存在，则以空配置进行初始化<br>\n<a name=\"NnE1A\"></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"配置文件的操作\"><a class=\"markdownIt-Anchor\" href=\"#配置文件的操作\">#</a> 配置文件的操作</h3>\n<ul>\n<li>保存配置\n<ul>\n<li><code>&lt;H3C&gt; save</code></li>\n</ul>\n</li>\n<li>擦除配置\n<ul>\n<li><code>&lt;H3C&gt; reset saved-configuration</code></li>\n</ul>\n</li>\n<li>设置下一次启动的配置文件\n<ul>\n<li><code>&lt;H3C&gt; startup saved-configuration filename</code></li>\n</ul>\n</li>\n<li>备份 / 恢复下次启动配置文件\n<ul>\n<li><code>&lt;H3C&gt; backup startup-configuration to tftp-server [dest-filename]</code></li>\n<li><code>&lt;H3C&gt; restore startup-configuration from tftp-server src-ilename</code> <br>\n<a name=\"yJf2s\"></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"配置文件的显示与维护\"><a class=\"markdownIt-Anchor\" href=\"#配置文件的显示与维护\">#</a> 配置文件的显示与维护</h3>\n<ul>\n<li>查看保存的配置文件\n<ul>\n<li><code>&lt;H3C&gt; display saved-configuration</code></li>\n</ul>\n</li>\n<li>查看系统启动配置文件\n<ul>\n<li><code>&lt;H3C&gt; display startup</code></li>\n</ul>\n</li>\n<li>查看当前生效的配置\n<ul>\n<li><code>&lt;H3C&gt; display current-configuration</code></li>\n</ul>\n</li>\n<li>查看当前视图下生效的配置\n<ul>\n<li><code>[H3C-line-vty0-63] display this</code> <br>\n<a name=\"F4LOk\"></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"用ftp传输文件的工作方式\"><a class=\"markdownIt-Anchor\" href=\"#用ftp传输文件的工作方式\">#</a> 用 FTP 传输文件的工作方式</h3>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9025f240.png\" alt=\"image.png\"><br>\n<a name=\"KVJAk\"></a></li>\n</ul>\n<h3 id=\"配置设备的ftp服务\"><a class=\"markdownIt-Anchor\" href=\"#配置设备的ftp服务\">#</a> 配置设备的 FTP 服务</h3>\n<ul>\n<li>使能 FTP 服务器功能\n<ul>\n<li><code>[H3C] ftp server enable</code></li>\n</ul>\n</li>\n<li>创建用户\n<ul>\n<li><code>[H3C] local-user username</code></li>\n</ul>\n</li>\n<li>设置服务类型及登录密码\n<ul>\n<li><code>[H3C-luser-manage-xxx] service-type ftp</code></li>\n<li><code>[H3C-luser-manage-xxx] password &#123;hash | simple&#125; password</code> <br>\n<a name=\"CJ7Xb\"></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"ftp操作示例\"><a class=\"markdownIt-Anchor\" href=\"#ftp操作示例\">#</a> FTP 操作示例</h3>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9108360e.png\" alt=\"image.png\"><br>\n<a name=\"sRys4\"></a></li>\n</ul>\n<h3 id=\"用tftp传输文件的工作方式\"><a class=\"markdownIt-Anchor\" href=\"#用tftp传输文件的工作方式\">#</a> 用 TFTP 传输文件的工作方式</h3>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba91ec21d0.png\" alt=\"image.png\"><br>\n<a name=\"cXYiq\"></a></li>\n</ul>\n<h3 id=\"在设备上使用tftp服务\"><a class=\"markdownIt-Anchor\" href=\"#在设备上使用tftp服务\">#</a> 在设备上使用 TFTP 服务</h3>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba92bee5fb.png\" alt=\"image.png\"></li>\n<li>在执行上传 / 下载操作时，到 TFTP 服务器的可达路由可能有多条，用户可以配置客户端 TFTP 报文的源地址</li>\n<li>当设备作为 TFTP 客户端时，可以把本设备的文件上传到 TFTP 服务器，还可以从 TFTP 服务器下载文件到本地设备</li>\n<li>下载分为普通下载和安全下载两种<br>\n<a name=\"ICcHz\"></a></li>\n</ul>\n<h3 id=\"tftp操作示例\"><a class=\"markdownIt-Anchor\" href=\"#tftp操作示例\">#</a> TFTP 操作示例</h3>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba93a1d89f.png\" alt=\"image.png\"><br>\n<a name=\"nA2bF\"></a></li>\n</ul>\n<h3 id=\"指定下次启动加载的应用程序文件\"><a class=\"markdownIt-Anchor\" href=\"#指定下次启动加载的应用程序文件\">#</a> 指定下次启动加载的应用程序文件</h3>\n<ul>\n<li>指定下次启动加载的应用程序文件\n<ul>\n<li><code>&lt;H3C&gt; boot-loader file file-url</code></li>\n</ul>\n</li>\n<li>显示下次启动加载的应用程序文件\n<ul>\n<li><code>&lt;H3C&gt; display boot-loader</code> <br>\n<a name=\"NvNti\"></a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"重启设备\"><a class=\"markdownIt-Anchor\" href=\"#重启设备\">#</a> 重启设备</h3>\n<ul>\n<li>重启系统：\n<ul>\n<li><code>&lt;H3C&gt; reboot</code></li>\n</ul>\n</li>\n<li>开启设备定时重启功能，并指定重启的具体时间\n<ul>\n<li><code>&lt;H3C&gt; schedule reboot at hh:mm[date]</code></li>\n</ul>\n</li>\n<li>开启设备定时重启功能，并指定重启的等待时延\n<ul>\n<li><code>&lt;H3C&gt; schedule reboot delay &#123;hh:mm|mm&#125;</code></li>\n</ul>\n</li>\n<li>显示设备的重启时间\n<ul>\n<li><code>&lt;H3C&gt; display schedule reboot</code> <br>\n<a name=\"x2Qq6\"></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"网络设备软件维护基础\"><a class=\"markdownIt-Anchor\" href=\"#网络设备软件维护基础\">#</a> 网络设备软件维护基础</h2>\n<ul>\n<li>网络设备的一般引导过程\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba948b3187.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>路由器系统引导过程示例：\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9561b659.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>网络设备软件维护的一般性方法\n<ul>\n<li>在命令行模式中采用 TFTP/FTP 上传 / 下载应用程序及配置文件，实现应用程序升级</li>\n<li>在 BootROM 模式中通过以太口采用 TFTP/FTP 完成应用程序软件升级</li>\n<li>在 BootROM 模式中通过 Console 口采用 XModem 协议完成 BootROM 及应用程序的升级</li>\n<li>\n<br />\n</li>\n</ul>\n</li>\n</ul>\n<p><a name=\"cYzw8\"></a></p>\n<h1 id=\"10-网络设备基本调试\"><a class=\"markdownIt-Anchor\" href=\"#10-网络设备基本调试\">#</a> 10、网络设备基本调试</h1>\n<p><a name=\"Ya0oL\"></a></p>\n<h2 id=\"网络连通性测试\"><a class=\"markdownIt-Anchor\" href=\"#网络连通性测试\">#</a> 网络连通性测试</h2>\n<p>ping 的实现原理：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9661fcf0.png\" alt=\"image.png\"></li>\n</ul>\n<p>ping 命令的输出：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba97605d01.png\" alt=\"image.png\"></li>\n</ul>\n<p>使用 ping 命令：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9849c329.png\" alt=\"image.png\"></li>\n</ul>\n<p>tracert 的实现原理：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9927aabe.png\" alt=\"image.png\"></li>\n</ul>\n<p>tracert 命令的输出：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba99fe9e9d.png\" alt=\"image.png\"></li>\n</ul>\n<p>使用 tracert 命令：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9abbb783.png\" alt=\"image.png\"><br>\n<a name=\"YjfWE\"></a></li>\n</ul>\n<h2 id=\"系统调试\"><a class=\"markdownIt-Anchor\" href=\"#系统调试\">#</a> 系统调试</h2>\n<p>系统调试介绍：</p>\n<ul>\n<li>对网络设备所支持的绝大部分协议和功能，系统都提供了相应的调试功能，帮助用户对错误进行诊断和定位</li>\n<li>调试信息的输出由两个开关控制</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9ba169e9.png\" alt=\"image.png\"></li>\n</ul>\n<p>系统调试的操作：</p>\n<ul>\n<li>开启控制台对系统信息的监视功能：\n<ul>\n<li><code>&lt;H3C&gt; terminal monitor</code></li>\n</ul>\n</li>\n<li>打开调试信息的屏幕输出开关：\n<ul>\n<li><code>&lt;H3C&gt; terminal debugging</code></li>\n</ul>\n</li>\n<li>打开模块调试开关：\n<ul>\n<li><code>&lt;H3C&gt; debugging module-name</code></li>\n</ul>\n</li>\n<li>显示调试开关：\n<ul>\n<li><code>&lt;H3C&gt; display debugging</code></li>\n</ul>\n</li>\n</ul>\n<p>调试信息输出的例子：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9cab30b3.png\" alt=\"image.png\"></li>\n<li>\n<br />\n</li>\n</ul>\n<p><a name=\"ZJS3Y\"></a></p>\n<h1 id=\"11-以太网交换机工作原理\"><a class=\"markdownIt-Anchor\" href=\"#11-以太网交换机工作原理\">#</a> 11、以太网交换机工作原理</h1>\n<p><a name=\"c01Sm\"></a></p>\n<h2 id=\"共享式与交换式以太网\"><a class=\"markdownIt-Anchor\" href=\"#共享式与交换式以太网\">#</a> 共享式与交换式以太网</h2>\n<p>共享式以太网：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9d784268.png\" alt=\"image.png\"></li>\n<li>共享式以太网中，所有的终端主机都处于同一个冲突域中，局域网中的所有接入终端共享总线的带宽</li>\n</ul>\n<p>交换式以太网：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9e59e40a.png\" alt=\"image.png\"></li>\n<li>在交换式以太网中，交换机的每个端口处于独立冲突域中，终端主机独占端口的带宽<br>\n<a name=\"JFxeB\"></a></li>\n</ul>\n<h2 id=\"交换机的mac地址表学习过程\"><a class=\"markdownIt-Anchor\" href=\"#交换机的mac地址表学习过程\">#</a> 交换机的 MAC 地址表学习过程</h2>\n<p>MAC 地址表初始化：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64aba9f354a75.png\" alt=\"image.png\"></li>\n<li>交换机刚启动时，MAC 地址表内无表项</li>\n</ul>\n<p>MAC 地址表学习过程：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa00f41e0.png\" alt=\"image.png\"></li>\n<li>PCA 发出数据帧</li>\n<li>交换机把 PCA 的帧中的源地址 MAC_A 与接收到此帧端口 E1/0/1 关联起来</li>\n<li>交换机把 PCA 的帧从所有其他端口发送出去（除了接收到帧的端口 E1/0/1）</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa1138fbe.png\" alt=\"image.png\"></li>\n<li>PCB、PCC、PCD 发出数据帧</li>\n<li>交换机把接收到的帧中的源地址与相应的端口关联起来<br>\n<a name=\"xRtUW\"></a></li>\n</ul>\n<h2 id=\"交换机对数据帧的转发与过滤\"><a class=\"markdownIt-Anchor\" href=\"#交换机对数据帧的转发与过滤\">#</a> 交换机对数据帧的转发与过滤</h2>\n<p>单播帧的转发：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa2072819.png\" alt=\"image.png\"></li>\n<li>PCA 发出目的到 PCD 的单播数据帧</li>\n<li>交换机根据帧中的目的地址，从相应的端口 E1/0/4 发送出去</li>\n<li>交换机不在其他端口上转发此单播数据帧</li>\n</ul>\n<p>广播、组播和未知单播帧的转发：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa2e0bd87.png\" alt=\"image.png\"></li>\n<li>交换机会把广播、组播和未知单播帧从其他端口发送出去（除了接收到帧的端口）</li>\n</ul>\n<p>数据帧的过滤：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa3a4c9d3.png\" alt=\"image.png\"></li>\n<li>PCA 发送目的到 PCB 的数据帧</li>\n<li>接收到帧时，交换机查找 MAC 地址表，如果发现帧的目的地址关联到接收端口上，则丢弃此帧<br>\n<a name=\"Xtebd\"></a></li>\n</ul>\n<h2 id=\"广播域\"><a class=\"markdownIt-Anchor\" href=\"#广播域\">#</a> 广播域</h2>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa4731672.png\" alt=\"image.png\"></li>\n<li>路由器或三层交换机的三层接口处于独立的广播域中，终端主机发出的广播帧在三层接口被终止</li>\n<li>\n<br />\n</li>\n</ul>\n<p><a name=\"w3Xlj\"></a></p>\n<h1 id=\"12-配置vlan\"><a class=\"markdownIt-Anchor\" href=\"#12-配置vlan\">#</a> 12、配置 VLAN</h1>\n<p><a name=\"zIFws\"></a></p>\n<h2 id=\"vlan技术简介\"><a class=\"markdownIt-Anchor\" href=\"#vlan技术简介\">#</a> VLAN 技术简介</h2>\n<p>广播风暴：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa54904a5.png\" alt=\"image.png\"></li>\n<li>设备发出的广播帧在广播域中传播，占有网络带宽，降低设备性能</li>\n</ul>\n<p>路由器来隔离广播：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa6140554.png\" alt=\"image.png\"></li>\n<li>路由器能够隔离广播，减少广播域范围</li>\n</ul>\n<p>用 VLAN 隔离广播：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa6d8b6bb.png\" alt=\"image.png\"></li>\n<li>二层交换机使用 VLAN 隔离广播，减小广播域范围</li>\n</ul>\n<p>VLAN 的优点</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa7aa960a.png\" alt=\"image.png\"></li>\n<li>有效控制广播域范围</li>\n<li>增强局域网的安全性</li>\n<li>灵活构建虚拟工作组<br>\n<a name=\"wAoFv\"></a></li>\n</ul>\n<h2 id=\"vlan类型\"><a class=\"markdownIt-Anchor\" href=\"#vlan类型\">#</a> VLAN 类型</h2>\n<p>基于端口的 VLAN：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa8c618e5.png\" alt=\"image.png\"></li>\n</ul>\n<p>基于协议的 VLAN：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaa9a9cb6a.png\" alt=\"image.png\"></li>\n</ul>\n<p>基于子网的 VLAN：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaaa6a4014.png\" alt=\"image.png\"><br>\n<a name=\"vznyF\"></a></li>\n</ul>\n<h2 id=\"vlan技术原理\"><a class=\"markdownIt-Anchor\" href=\"#vlan技术原理\">#</a> VLAN 技术原理</h2>\n<p>VLAN 标签：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaabcb4bbd.png\" alt=\"image.png\"></li>\n<li>交换机用 VLAN 标签来区分不同 VLAN 的以太网帧</li>\n</ul>\n<p>802.1Q 帧格式：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaad050c66.png\" alt=\"image.png\"></li>\n</ul>\n<p>单交换机 VLAN 标签操作：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaadf25ec5.png\" alt=\"image.png\"></li>\n<li>在进入交换机端口时，附加缺省 VLAN 标签</li>\n<li>出交换机端口时，去掉 VLAN 标签</li>\n</ul>\n<p>Access 链路类型端口：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaaede7ceb.png\" alt=\"image.png\"></li>\n<li>只允许缺省 VLAN 通过，仅接收和发送一个 VLAN 的数据帧</li>\n<li>一般用于连接用户设备</li>\n</ul>\n<p>跨交换机 VLAN 标签操作：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaafb8f368.png\" alt=\"image.png\"></li>\n<li>带有 VLAN 标签的以太网帧在交换机间传递</li>\n</ul>\n<p>Trunk 链路类型端口：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abab18c1ada.png\" alt=\"image.png\"></li>\n<li>允许多个 VLAN 通过，可以接收和发送多个 VLAN 的数据帧</li>\n<li>缺省 VLAN 的以太网帧不带标签</li>\n<li>一般用于交换机之间连接</li>\n</ul>\n<p>Hybrid 链路类型端口：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abab25c9234.png\" alt=\"image.png\"></li>\n<li>允许多个 VLAN 通过，可以接收和发送多个 VLAN 的数据帧</li>\n<li>Hybrid 端口和 Trunk 端口的不同之处在于\n<ul>\n<li>Hybrid 端口允许多个 VLAN 的以太网帧不带标签</li>\n<li>Trunk 端口只允许缺省 VLAN 的以太网帧不带标签<br>\n<a name=\"Larde\"></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"vlan发基本配置\"><a class=\"markdownIt-Anchor\" href=\"#vlan发基本配置\">#</a> VLAN 发基本配置</h2>\n<p>VLAN 基本配置：</p>\n<ul>\n<li>创建 VLAN 并进入 VLAN 视图\n<ul>\n<li><code>[Switc] vlan vlan-id</code></li>\n</ul>\n</li>\n<li>将指定端口加入到当前 VLAN 中\n<ul>\n<li><code>[SWitch-vlan10] port interface-list</code></li>\n</ul>\n</li>\n</ul>\n<p>配置 Trunk 端口：</p>\n<ul>\n<li>配置端口的链路类型为 Trunk 类型\n<ul>\n<li><code>[Switch-Ethernet1/0/1] port link-type trunk</code></li>\n</ul>\n</li>\n<li>允许指定的 VLAN 通过当前 Trunk 端口\n<ul>\n<li><code>[Switch-Ethrtnet1/0/1] port trunk permit vlan &#123;vlan-id-list | all&#125;</code></li>\n</ul>\n</li>\n<li>设置 Trunk 端口的缺省 VLAN\n<ul>\n<li><code>[Switch-Ethernet1/0/1] port trunk pvid vlan vlan-id</code></li>\n</ul>\n</li>\n</ul>\n<p>配置 Hybrid 端口：</p>\n<ul>\n<li>配置端口的链路类型为 Hybrid 类型\n<ul>\n<li><code>[Switch-Ethernet1/0/1] port link-type hybrid</code></li>\n</ul>\n</li>\n<li>允许指定的 VLAN 通过当前 Hybrid 端口\n<ul>\n<li><code>[Switch-Ethernet1/0/1] port hybrid vlan vlan-id-list &#123;tagged | untagged&#125;</code></li>\n</ul>\n</li>\n<li>设置 Hybrid 端口的缺省 VLAN\n<ul>\n<li><code>[Switch-Ethernet1/0/1] port hybrid pvid vlan vlan-id</code></li>\n</ul>\n</li>\n</ul>\n<p>VLAN 配置示例：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abab33560ed.png\" alt=\"image.png\"></li>\n</ul>\n<p>VLAN 显示及维护：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abab4c16d45.png\" alt=\"image.png\"></li>\n<li>\n<br />\n</li>\n</ul>\n<p><a name=\"Mwf5P\"></a></p>\n<h1 id=\"13-生成树协议\"><a class=\"markdownIt-Anchor\" href=\"#13-生成树协议\">#</a> 13、生成树协议</h1>\n<p><a name=\"lYN5b\"></a></p>\n<h2 id=\"生成树背景\"><a class=\"markdownIt-Anchor\" href=\"#生成树背景\">#</a> 生成树背景</h2>\n<p>路径回环的影响：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abab575af07.png\" alt=\"image.png\"></li>\n</ul>\n<p>STP 的作用：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abab648429f.png\" alt=\"image.png\"></li>\n<li>通过阻断冗余链路来消除桥接网络中可能存在的路径回环</li>\n<li>当前路径发生故障时，激活冗余备份链路，恢复网络连通性<br>\n<a name=\"AVzq6\"></a></li>\n</ul>\n<h2 id=\"stp\"><a class=\"markdownIt-Anchor\" href=\"#stp\">#</a> STP</h2>\n<p>生成树协议：</p>\n<ul>\n<li>STP（Spanning Tree Protocol，生成树协议）是用于在局域网中消除数据链路层物理环路的协议</li>\n<li>通过在桥之间交换 BPDU（Bridge Protocol Data Unit，桥协议数据单元），来保证设备完成生成树的计算过程</li>\n</ul>\n<p>配置 BPDU 的生成和传递：</p>\n<ul>\n<li>配置 BPDU 包含以下重要信息，完成生成树计算\n<ul>\n<li>根桥 ID（RootID）</li>\n<li>根路径开销（Root Path Cost）</li>\n<li>指定桥 ID（Designated Bridge ID）</li>\n<li>指定端口 ID（Designated PortID）</li>\n</ul>\n</li>\n<li>各台设备的各个端口在初始时生成以自己为根桥（Root Bridge）的配置信息，向外发送自己的配置消息</li>\n<li>网络收敛后，根桥向外发送配置 BPDU，其他的设备对该配置 BPDU 进行转发</li>\n</ul>\n<p>根桥的选举：</p>\n<ul>\n<li>\n<br />\n</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abab728b383.png\" alt=\"image.png\"></li>\n<li>桥 ID 由桥优先级（BridgePriority）和桥 MAC 地址（BridgeMACAddress）组成</li>\n<li>桥 ID 小的桥被选举为桥跟</li>\n</ul>\n<p>端口角色的确定：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abab7f8cee8.png\" alt=\"image.png\"></li>\n<li>桥跟上的所有端口为指定端口（Designated Port）</li>\n<li>在非根桥上选举根路径开销（RootPathCost）最小的端口为根端口（Root Port）</li>\n<li>每个物理段选出根路径开销最小的桥作为指定桥（Designated Bridge），连接指定桥的端口为指定端口</li>\n<li>不是根端口和指定端口的其余端口被 STP 置为阻塞状态</li>\n</ul>\n<p>根路径开销：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abab8b2cd00.png\" alt=\"image.png\"></li>\n<li>根路径开销（Root Path Cost）是达到根的路径上所有链路开销（Cost）的代数和</li>\n<li>非根桥进行根端口选举时，根路径开销最小的端口为根端口</li>\n<li>物理段进行指定桥选举时，路径开销最小的桥为指定桥</li>\n</ul>\n<p>通过桥 ID 决定端口角色：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abab981660f.png\" alt=\"image.png\"></li>\n<li>在根路径开销相同时，所连网段指定桥 ID 最小的端口为根端口</li>\n<li>在根路径开销相同时，桥 ID 最小的桥被选举为物理段上的指定桥，连接指定桥的端口为指定端口</li>\n</ul>\n<p>通过端口 ID 决定端口角色：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64ababa4cfb6f.png\" alt=\"image.png\"></li>\n<li>在根路径开销、指定桥 ID 都相同的情况下，所连指定端口 ID 小的端口为根端口</li>\n</ul>\n<p>端口状态：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64ababb26c2f9.png\" alt=\"image.png\"></li>\n</ul>\n<p>端口状态迁移：</p>\n<ul>\n<li>端口被选为指定端口或根端口后，需要从 Blocking 状态经 Listening 和 Learning 才能到 Forwarding 状态</li>\n<li>默认的 Forwarding Delay 时间是 15 秒</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64ababc26a2db.png\" alt=\"image.png\"></li>\n</ul>\n<p>生成树的不足：</p>\n<ul>\n<li>端口从阻塞状态进入转发状态必须经历两倍的 Forwarding Delay 时间</li>\n<li>如果网络中的拓扑结构变化频繁，网络会频繁地失去连通性</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64ababd24f4ff.png\" alt=\"image.png\"><br>\n<a name=\"Emj4q\"></a></li>\n</ul>\n<h2 id=\"rstp\"><a class=\"markdownIt-Anchor\" href=\"#rstp\">#</a> RSTP</h2>\n<p>RSTP：</p>\n<ul>\n<li>RSTP（Rapid Spanning Tree Protocol，快速生成树协议）是 STP 协议的优化版</li>\n<li>RSTP 具备 STP 的所有功能</li>\n<li>RSTP 可以实现快速收敛\n<ul>\n<li>在某些情况下，端口进入转发状态的延时大大缩短，从而缩短了网络最终达到拓扑稳定所需要的时间</li>\n</ul>\n</li>\n</ul>\n<p>RSTP 的改进：</p>\n<p>STP、RSTP 的问题：</p>\n<ul>\n<li>Trunk 链路上实际上运行着对个 VLAN</li>\n<li>所有 VLAN 共用一棵生成树</li>\n<li>无法实现不同 VLAN 在多条 Trunk 链路上的负载分担</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64ababe613c11.png\" alt=\"image.png\"><br>\n<a name=\"MtU3u\"></a></li>\n</ul>\n<h2 id=\"pvst\"><a class=\"markdownIt-Anchor\" href=\"#pvst\">#</a> PVST</h2>\n<p>PVST：</p>\n<ul>\n<li>PVST（Per VLAN Spanning Tree）</li>\n<li>每个 VLAN 上运行一个 STP 或 RSTP 协议，不同 VLAN 之间的生成树完全独立</li>\n<li>在多条 Trunk 链路上实现单 VLAN 级负载分担</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64ababf45ac81.png\" alt=\"image.png\"><br>\n<a name=\"DknxT\"></a></li>\n</ul>\n<h2 id=\"mstp\"><a class=\"markdownIt-Anchor\" href=\"#mstp\">#</a> MSTP</h2>\n<p>MSTP：</p>\n<ul>\n<li>MSTP（Multiple Spanning Tree Protocol）多生成树协议</li>\n<li>将多个 VLAN 捆绑到一个实例，每个实例生成独立的生成树</li>\n<li>在多条 Trunk 链路上实现 VLAN 级负载分担</li>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac0119065.png\" alt=\"image.png\"></li>\n</ul>\n<p>四种生成树协议特性的比较：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac175d5f3.png\" alt=\"image.png\"></li>\n<li>MSTP、PVST 具有 RSTP 的快速收敛，同时又具有负载分担机制</li>\n<li>MSTP 兼容 STP 和 RSTP</li>\n</ul>\n<p>四种生成树协议的端口状态对比：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac27bfc43.png\" alt=\"image.png\"><br>\n<a name=\"Vnl9G\"></a></li>\n</ul>\n<h2 id=\"生成树协议的配置\"><a class=\"markdownIt-Anchor\" href=\"#生成树协议的配置\">#</a> 生成树协议的配置</h2>\n<p>STP 基本配置：</p>\n<ul>\n<li>开启设备 STP 特性\n<ul>\n<li><code>[Switch] stp global enable</code></li>\n</ul>\n</li>\n<li>关闭端口的 STP 特性\n<ul>\n<li><code>[Switch-Ethernet1/0/1] undo stp enable</code></li>\n</ul>\n</li>\n<li>配置 STP 的工作模式\n<ul>\n<li><code>[Switch] stp mode &#123;stp|rstp|pvst|mstp&#125;</code></li>\n</ul>\n</li>\n</ul>\n<p>STP 可选配置：</p>\n<ul>\n<li>配置当前设备的优先级\n<ul>\n<li><code>[Switch] stp [instance instance-id] priority priority</code></li>\n</ul>\n</li>\n<li>配置端口为边缘端口\n<ul>\n<li><code>[Switch-Ethernet1/0/1] stp edged-port</code></li>\n</ul>\n</li>\n</ul>\n<p>STP 配置示例：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac34190af.png\" alt=\"image.png\"></li>\n</ul>\n<p>STP 监控与维护：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac3f24da1.png\" alt=\"image.png\"><br>\n<a name=\"TUuev\"></a></li>\n</ul>\n<h1 id=\"14-交换机端口安全技术\"><a class=\"markdownIt-Anchor\" href=\"#14-交换机端口安全技术\">#</a> 14、交换机端口安全技术</h1>\n<p><a name=\"Hak8m\"></a></p>\n<h2 id=\"8021x基本原理及其配置\"><a class=\"markdownIt-Anchor\" href=\"#8021x基本原理及其配置\">#</a> 802.1X 基本原理及其配置</h2>\n<p>802.1X 技术简介：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac4bafc53.png\" alt=\"image.png\"></li>\n<li>802.1X 协议起源于标准的无线局域网协议 802.11。主要目的是为了解决局域网用户的接入认证问题。</li>\n</ul>\n<p>802.1X 的体系结构：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac58ca3ef.png\" alt=\"image.png\"></li>\n<li>本地认证\n<ul>\n<li>由设备端内置本地服务器对客户端进行认证</li>\n</ul>\n</li>\n<li>远程集中认证\n<ul>\n<li>由远程的认证服务器对客户端进行认证</li>\n</ul>\n</li>\n</ul>\n<p>端口接入控制方式：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac65e02e1.png\" alt=\"image.png\"></li>\n<li>基于端口的认证方式</li>\n<li>基于 MAC 的认证方式</li>\n</ul>\n<p>802.1X 基本配置：</p>\n<ul>\n<li>开启全局的 802.1X 特性\n<ul>\n<li><code>[Switch] dot1x</code></li>\n</ul>\n</li>\n<li>开启端口的 802.1X 特性\n<ul>\n<li><code>[Switch-Ten-GigabitEthernet1/0/1] dot1x</code></li>\n</ul>\n</li>\n<li>添加本地接入用户并设置相关参数\n<ul>\n<li><code>[Switch] local-user user-name class network</code></li>\n<li><code>[Switch-luser-network-localuser] service-type lan-access</code></li>\n<li><code>[Switch-luser-network-localuser] password &#123;cipher|simple&#125; password</code></li>\n</ul>\n</li>\n</ul>\n<p>802.1X 典型配置举例：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac72ac1da.png\" alt=\"image.png\"><br>\n<a name=\"DwSwp\"></a></li>\n</ul>\n<h2 id=\"端口隔离技术及其配置\"><a class=\"markdownIt-Anchor\" href=\"#端口隔离技术及其配置\">#</a> 端口隔离技术及其配置</h2>\n<p>端口隔离简介：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac7f3a1ca.png\" alt=\"image.png\"></li>\n<li>端口隔离用于在 VLAN 内隔离以太网端口</li>\n</ul>\n<p>端口隔离基本配置：</p>\n<ul>\n<li>创建隔离组\n<ul>\n<li><code>[Switch]port-isolate group 1</code></li>\n</ul>\n</li>\n<li>将指定端口加入到隔离组中，端口成为隔离组的普通端口\n<ul>\n<li><code>[Switch-Ethernet1/0/1] port-isolate enable group 1</code></li>\n</ul>\n</li>\n</ul>\n<p>端口隔离配置举例：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac8ab31b0.png\" alt=\"image.png\"></li>\n<li>\n<br />\n</li>\n</ul>\n<p><a name=\"k73hy\"></a></p>\n<h1 id=\"15-配置链路聚合\"><a class=\"markdownIt-Anchor\" href=\"#15-配置链路聚合\">#</a> 15、配置链路聚合</h1>\n<p><a name=\"wFiem\"></a></p>\n<h2 id=\"链路聚合简介\"><a class=\"markdownIt-Anchor\" href=\"#链路聚合简介\">#</a> 链路聚合简介</h2>\n<p>链路聚合的作用：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abac96b31c5.png\" alt=\"image.png\"></li>\n</ul>\n<p>聚合链路负载分担原理：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaca25031a.png\" alt=\"image.png\"></li>\n<li>聚合后链路基于流进行负载分担<br>\n<a name=\"qiOGN\"></a></li>\n</ul>\n<h2 id=\"链路聚合的分类\"><a class=\"markdownIt-Anchor\" href=\"#链路聚合的分类\">#</a> 链路聚合的分类</h2>\n<p>链路聚合分类：</p>\n<ul>\n<li>静态聚合：\n<ul>\n<li>双方系统间不使用聚合协议来协商链路信息</li>\n</ul>\n</li>\n<li>动态聚合：\n<ul>\n<li>双方系统间使用聚合协议来协商链路信息</li>\n<li>LACP（Link Aggregation Control Protocol，链路聚合控制协议）是一种基于 IEEE802.3ad 标准的、能够实现链路动态聚合的协议<br>\n<a name=\"UGUOX\"></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"链路聚合的基本配置\"><a class=\"markdownIt-Anchor\" href=\"#链路聚合的基本配置\">#</a> 链路聚合的基本配置</h2>\n<p>静态聚合配置：</p>\n<ul>\n<li>创建聚合端口：\n<ul>\n<li><code>[Switch] interface bridge-aggregation intterface-number</code></li>\n</ul>\n</li>\n<li>将以太网端口加入聚合组：\n<ul>\n<li><code>[Switch-Ethernet1/0/1] port link-aggergation group number</code></li>\n</ul>\n</li>\n</ul>\n<p>链路聚合配置举例：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abacb184f6f.png\" alt=\"image.png\"></li>\n</ul>\n<p>链路聚合显示及维护：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abacbe64640.png\" alt=\"image.png\"></li>\n<li>\n<br />\n</li>\n</ul>\n<p><a name=\"SRefp\"></a></p>\n<h1 id=\"16-ip子网划分\"><a class=\"markdownIt-Anchor\" href=\"#16-ip子网划分\">#</a> 16、IP 子网划分</h1>\n<p><a name=\"zMNSh\"></a></p>\n<h2 id=\"子网划分的需求\"><a class=\"markdownIt-Anchor\" href=\"#子网划分的需求\">#</a> 子网划分的需求</h2>\n<p>早期的二级网络结构：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abaccab37a4.png\" alt=\"image.png\"></li>\n</ul>\n<p>大型机构的接入需求：</p>\n<ul>\n<li><img data-src=\"https://cdn-us.imgs.moe/2023/07/10/64abacd70de01.png\" alt=\"image.png\"></li>\n</ul>\n<p>分类 IP 地址的低效性：</p>\n<ul>\n<li>IP 地址资源浪费严重</li>\n<li>IP 网络数量不敷使用</li>\n<li>业务扩展缺乏灵活性</li>\n<li>无法应对 Internet 的爆发式增长<br>\n<a name=\"TV3Yh\"></a></li>\n</ul>\n<h2 id=\"ip子网划分基础知识\"><a class=\"markdownIt-Anchor\" href=\"#ip子网划分基础知识\">#</a> IP 子网划分基础知识</h2>\n<p>子网划分方法：</p>\n",
            "tags": [
                "note"
            ]
        }
    ]
}