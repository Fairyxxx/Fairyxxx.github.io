{
    "version": "https://jsonfeed.org/version/1",
    "title": "花开两朵，天各一方！ • All posts by \"note\" tag",
    "description": "我很喜欢枫叶，可惜，枫叶红时，总多离别。",
    "home_page_url": "https://fairyxxx.github.io",
    "items": [
        {
            "id": "https://fairyxxx.github.io/note/Nginx%E5%9F%BA%E7%A1%80/",
            "url": "https://fairyxxx.github.io/note/Nginx%E5%9F%BA%E7%A1%80/",
            "title": "Nginx基础",
            "date_published": "2023-07-19T00:38:49.055Z",
            "content_html": "<p><a name=\"TqfKT\"></a></p>\n<h1 id=\"nginx简介\"><a class=\"markdownIt-Anchor\" href=\"#nginx简介\">#</a> Nginx 简介</h1>\n<ul>\n<li>Nginx 是⽬前最流⾏的 Web 服务器，最开始是由⼀个叫做 igor 的俄罗斯的程序员开发的，2019 年 3 ⽉ 11 ⽇被美国的 F5 公司以 6.7 亿美元的价格收购，现在 Nginx 是 F5 公司旗下的⼀款产品了。</li>\n<li><code>C10K</code>  问题是 <code>10000 concurrent connection</code>  同时处理 10000 个并发连接。</li>\n<li><code>epoll - IO</code>  多路复用高并发，最大 50000 个连接高性能、低内耗、热部署。<br>\n<a name=\"YIRt1\"></a></li>\n</ul>\n<h2 id=\"nginx的版本\"><a class=\"markdownIt-Anchor\" href=\"#nginx的版本\">#</a> Nginx 的版本</h2>\n<p><code>Nginx</code>  开源版本主要分为两种，⼀种是稳定版，⼀种是主线版。</p>\n<ul>\n<li>主线版（mainline）：主线版是最新的版本，功能会⽐较多，会包含⼀些正在开发中的体 验性模块功能，但是也可能会有⼀些新的 <code>bug</code> 。</li>\n<li>稳定版（Stable）：稳定版是经过⻓时间测试的版本，不会有太多的 <code>bug</code> ，也不会包含⼀ 些新的功能。<br>\n<a name=\"RpgmK\"></a></li>\n</ul>\n<h1 id=\"nginx的安装\"><a class=\"markdownIt-Anchor\" href=\"#nginx的安装\">#</a> Nginx 的安装</h1>\n<p><a name=\"ujayA\"></a></p>\n<h2 id=\"方式一包管理器\"><a class=\"markdownIt-Anchor\" href=\"#方式一包管理器\">#</a> 方式一：包管理器</h2>\n<ul>\n<li>Linux：\n<ul>\n<li><code>$ sudo apt update</code></li>\n<li><code>$ sudo apt install nginx</code></li>\n</ul>\n</li>\n<li>MocOS:\n<ul>\n<li><code>$ brew install nginx</code></li>\n</ul>\n</li>\n<li>Windows:\n<ul>\n<li><code>$ scoop install nginx</code></li>\n<li><code>$ choco install nginx</code> <br>\n<a name=\"wxmar\"></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"方式二\"><a class=\"markdownIt-Anchor\" href=\"#方式二\">#</a> 方式二：</h2>\n<p><a name=\"tCRlh\"></a></p>\n<h3 id=\"从源码编译安装\"><a class=\"markdownIt-Anchor\" href=\"#从源码编译安装\">#</a> 从源码编译安装</h3>\n<p>从源码编译安装的⽅式可以让我们⾃定义 Nginx 的安装⽬录、模块等，但是安装过程⽐较繁琐，需要安装⼀些依赖库。<br>\n<a name=\"SvCh6\"></a></p>\n<h4 id=\"安装pcre库\"><a class=\"markdownIt-Anchor\" href=\"#安装pcre库\">#</a> 安装 <code>PCRE</code>  库</h4>\n<p><code>PCRE</code>  是 <code>Perl Compatible Regular Expressions</code>  的缩写，是⼀个 <code>Perl</code>  库，包括 <code>perl</code>  兼容的正则表达式库。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget github.com/PCRE2Project/pcre2/releases/download/pcre2<span class=\"number\">-10.42</span>/pcre2-</span><br><span class=\"line\"><span class=\"number\">10.42</span>.tar.gz</span><br><span class=\"line\">tar -zxf pcre2<span class=\"number\">-10.42</span>.tar.gz</span><br><span class=\"line\">cd pcre2<span class=\"number\">-10.42</span></span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">sudo make install</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a name=\"UHAnZ\"></a></p>\n<h4 id=\"安装zlib库\"><a class=\"markdownIt-Anchor\" href=\"#安装zlib库\">#</a> 安装 <code>zlib</code>  库</h4>\n<p><code>zlib</code>  是⼀个数据压缩库，⽤于 <code>Nginx</code>  的 <code>gzip</code>  模块。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:<span class=\"comment\">//zlib.net/zlib-1.2.13.tar.gz</span></span><br><span class=\"line\">tar -zxf zlib<span class=\"number\">-1.2</span><span class=\"number\">.13</span>.tar.gz</span><br><span class=\"line\">cd zlib<span class=\"number\">-1.2</span><span class=\"number\">.13</span></span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<p><a name=\"biQvb\"></a></p>\n<h4 id=\"安装open-ssl库\"><a class=\"markdownIt-Anchor\" href=\"#安装open-ssl库\">#</a> 安装 <code>Open SSL</code>  库</h4>\n<p><code>OpenSSL</code>  是⼀个强⼤的安全套接字层密码库，⽤于 <code>Nginx</code>  的 <code>SSL</code>  模块。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:<span class=\"comment\">//www.openssl.org/source/openssl-1.1.1t.tar.gz</span></span><br><span class=\"line\">tar -zxf openssl<span class=\"number\">-1.1</span><span class=\"number\">.1</span>t.tar.gz</span><br><span class=\"line\">cd openssl<span class=\"number\">-1.1</span><span class=\"number\">.1</span>t</span><br><span class=\"line\">./Configure darwin64-x86_64-cc --prefix=/usr</span><br><span class=\"line\">make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<p><a name=\"safRr\"></a></p>\n<h4 id=\"下载nginx源码\"><a class=\"markdownIt-Anchor\" href=\"#下载nginx源码\">#</a> 下载 <code>Nginx</code>  源码</h4>\n<p>下载主线版的 <code>Nginx</code>  源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"comment\">//nginx.org/download/nginx-1.23.4.tar.gz</span></span><br><span class=\"line\">tar zxf nginx<span class=\"number\">-1.23</span><span class=\"number\">.4</span>.tar.gz</span><br><span class=\"line\">cd nginx<span class=\"number\">-1.23</span><span class=\"number\">.4</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>下载稳定版的 <code>Nginx</code>  源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https:<span class=\"comment\">//nginx.org/download/nginx-1.24.0.tar.gz</span></span><br><span class=\"line\">tar zxf nginx<span class=\"number\">-1.24</span><span class=\"number\">.0</span>.tar.gz</span><br><span class=\"line\">cd nginx<span class=\"number\">-1.24</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<p><a name=\"doAzW\"></a></p>\n<h4 id=\"配置编译选项\"><a class=\"markdownIt-Anchor\" href=\"#配置编译选项\">#</a> 配置编译选项</h4>\n<p>编译选项可以通过  <code>./configure --help</code>  来查看。<br />下⾯是⼀个官⽹的例⼦：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure</span><br><span class=\"line\">--sbin-path=/usr/local/nginx/nginx</span><br><span class=\"line\">--conf-path=/usr/local/nginx/nginx.conf</span><br><span class=\"line\">--pid-path=/usr/local/nginx/nginx.pid</span><br><span class=\"line\">--with-pcre=../pcre2<span class=\"number\">-10.42</span></span><br><span class=\"line\">--with-zlib=../zlib<span class=\"number\">-1.2</span><span class=\"number\">.13</span></span><br><span class=\"line\">--with-http_ssl_module</span><br><span class=\"line\">--with-stream</span><br><span class=\"line\">--with-mail=dynamic</span><br><span class=\"line\">--add-module=/usr/build/nginx-rtmp-module</span><br><span class=\"line\">--add-dynamic-module=/usr/build/<span class=\"number\">3</span>party_module</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>参数 <code>（Parameter）</code></th>\n<th>说明 <code>（Description  ）</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code> --prefix=</code></td>\n<td>指定安装⽬录</td>\n</tr>\n<tr>\n<td><code>--sbin-path=</code></td>\n<td>指定 Nginx 可执⾏⽂件</td>\n</tr>\n<tr>\n<td><code> --conf-path=</code></td>\n<td>指定配置⽂件位置</td>\n</tr>\n<tr>\n<td><code>--pid-path=</code></td>\n<td>指定 <code>pid</code>  ⽂件位置</td>\n</tr>\n<tr>\n<td><code>--error-log-path=</code></td>\n<td>指定错误⽇志⽂件</td>\n</tr>\n<tr>\n<td><code>--http-log-path=  </code></td>\n<td>指定 <code>HTTP</code>  ⽇志⽂件</td>\n</tr>\n<tr>\n<td><code>--user= </code></td>\n<td>指定运⾏ Nginx 的⽤户</td>\n</tr>\n<tr>\n<td><code>--group=</code></td>\n<td>指定运⾏ Nginx 的组</td>\n</tr>\n<tr>\n<td><code>--with-pcre=</code></td>\n<td>指定 <code>PCRE</code>  库的位置</td>\n</tr>\n<tr>\n<td><code>--with-pcre-jit</code></td>\n<td>开启 <code>PCRE</code>  的 <code>JIT（Just-in-time compilation）</code> ⽀持</td>\n</tr>\n<tr>\n<td><code>--with-zlib=  </code></td>\n<td>指定 <code>zlib</code>  库的位置</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"nLTXK\"></a></p>\n<h3 id=\"nginx安装预编译二进制包\"><a class=\"markdownIt-Anchor\" href=\"#nginx安装预编译二进制包\">#</a> Nginx 安装 (预编译⼆进制包)</h3>\n<p>这种⽅式⽐通过源码编译安装的⽅式要简单快捷得多，只需要输⼊⼀条 <code>install</code>  命令就可以了。 不同 <code>Linux</code>  发⾏版的安装⽅式略有不同，下⾯分别介绍⼀下。<br>\n<a name=\"FWdiP\"></a></p>\n<h4 id=\"centosrheloracle-linuxalmalinuxrocky-linux-repository\"><a class=\"markdownIt-Anchor\" href=\"#centosrheloracle-linuxalmalinuxrocky-linux-repository\">#</a>  <code>CentOS/RHEL/Oracle Linux/AlmaLinux/Rocky Linux repository.</code></h4>\n<p><code>CentOS</code>  系 <code>Linux</code>  发⾏版可以使⽤ <code>yum</code>  来安装。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"number\">1.</span> 安装EPEL仓库</span><br><span class=\"line\">sudo yum install epel-release</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span> 更新repo</span><br><span class=\"line\">sudo yum update</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span> 安装nginx</span><br><span class=\"line\">sudo yum install nginx</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">4.</span> 验证安装</span><br><span class=\"line\">sudo nginx -V</span><br></pre></td></tr></table></figure>\n<p>也可以通过 <code>Nginx</code>  的官⽅仓库来安装，这样可以保证安装的是最新的版本。</p>\n<ol>\n<li>安装前置依赖</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install yum-utils</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>添加 nginx 仓库</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>添加以下内容</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[nginx-stable] [nginx-stable]</span><br><span class=\"line\">name=nginx stable repo</span><br><span class=\"line\">baseurl=http:<span class=\"comment\">//nginx.org/packages/centos/$releasever/$basearch/</span></span><br><span class=\"line\">gpgcheck=<span class=\"number\">1</span></span><br><span class=\"line\">enabled=<span class=\"number\">1</span></span><br><span class=\"line\">gpgkey=https:<span class=\"comment\">//nginx.org/keys/nginx_signing.key</span></span><br><span class=\"line\">module_hotfixes=<span class=\"literal\">true</span></span><br><span class=\"line\">[nginx-mainline] [nginx-mainline]</span><br><span class=\"line\">name=nginx mainline repo</span><br><span class=\"line\">baseurl=http:<span class=\"comment\">//nginx.org/packages/mainline/centos/$releasever/$basearch/</span></span><br><span class=\"line\">gpgcheck=<span class=\"number\">1</span></span><br><span class=\"line\">enabled=<span class=\"number\">0</span></span><br><span class=\"line\">gpgkey=https:<span class=\"comment\">//nginx.org/keys/nginx_signing.key</span></span><br><span class=\"line\">module_hotfixes=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>上⾯的  <code>stable</code>  和 <code>mainline</code>  就分别表示稳定版和主线版，可以根据⾃⼰的需要来选择。</p>\n<ol start=\"4\">\n<li>更新 repo</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>安装 nginx</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install nginx</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>验证安装</li>\n</ol>\n<p>除了使⽤  <code>sudo nginx -V</code>  之外，还可以使⽤下⾯的⽅式来验证：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动Nginx</span><br><span class=\"line\">sudo nginx</span><br><span class=\"line\">curl -I <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br></pre></td></tr></table></figure>\n<p>如果能够看到类似下⾯的输出，就表示安装成功了：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/<span class=\"number\">1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\">Server: nginx/<span class=\"number\">1.25</span><span class=\"number\">.1</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a name=\"R7FCy\"></a></p>\n<h4 id=\"debianubuntu-repository\"><a class=\"markdownIt-Anchor\" href=\"#debianubuntu-repository\">#</a>  <code>Debian/Ubuntu repository  </code></h4>\n<p><code>Debian</code> 、 <code>Ubuntu</code>  系列的 <code>Linux</code>  发⾏版可以使⽤ <code>apt</code>  来安装。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"number\">1.</span> 更新仓库信息</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span> 安装nginx</span><br><span class=\"line\">sudo apt-get install nginx</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span> 验证安装</span><br><span class=\"line\">sudo nginx -V</span><br></pre></td></tr></table></figure>\n<p>同样也可以从 <code>Nginx</code>  官⽅仓库来安装。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"number\">1.</span> 安装前置依赖</span><br><span class=\"line\">sudo apt install curl gnupg2 ca-certificates lsb-release debian-archive\u0002keyring</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">2.</span> 导⼊官⽅Nginx签名密钥</span><br><span class=\"line\">curl https:<span class=\"comment\">//nginx.org/keys/nginx_signing.key | gpg --dearmor \\</span></span><br><span class=\"line\"><span class=\"comment\"> | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg &gt;/dev/null</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">3.</span> 验证下载的⽂件中包含了正确的密钥</span><br><span class=\"line\">gpg --dry-run --quiet --no-keyring --import --import-options import-show</span><br><span class=\"line\">/usr/share/keyrings/nginx-archive-keyring.gpg</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">4.</span> 设置稳定版或者主线版的Nginx包</span><br><span class=\"line\"># 稳定版</span><br><span class=\"line\">echo <span class=\"string\">&quot;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\</span></span><br><span class=\"line\"><span class=\"string\">http://nginx.org/packages/debian `lsb_release -cs` nginx&quot;</span> \\</span><br><span class=\"line\"> | sudo tee /etc/apt/sources.<span class=\"built_in\">list</span>.d/nginx.<span class=\"built_in\">list</span></span><br><span class=\"line\"># 主线版</span><br><span class=\"line\">echo <span class=\"string\">&quot;deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\</span></span><br><span class=\"line\"><span class=\"string\">http://nginx.org/packages/mainline/debian `lsb_release -cs` nginx&quot;</span> \\</span><br><span class=\"line\"> | sudo tee /etc/apt/sources.<span class=\"built_in\">list</span>.d/nginx.<span class=\"built_in\">list</span></span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">5.</span> 设置仓库优先级，优先使⽤Nginx官⽅仓库</span><br><span class=\"line\">echo -e <span class=\"string\">&quot;Package: *\\nPin: origin nginx.org\\nPin: release o=nginx\\nPin\u0002Priority: 900\\n&quot;</span> \\</span><br><span class=\"line\"> | sudo tee /etc/apt/preferences.d/<span class=\"number\">99</span>nginx</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">6.</span> 安装nginx</span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install nginx</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"number\">7.</span> 验证安装</span><br><span class=\"line\">sudo nginx</span><br><span class=\"line\">curl -I <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br></pre></td></tr></table></figure>\n<p><a name=\"yhB80\"></a></p>\n<h2 id=\"方式三使用docker安装\"><a class=\"markdownIt-Anchor\" href=\"#方式三使用docker安装\">#</a> 方式三：使用 <code>Docker</code>  安装</h2>\n<p><code>$ docker pull nginx</code></p>\n<p><a name=\"SuntV\"></a></p>\n<h1 id=\"服务启停\"><a class=\"markdownIt-Anchor\" href=\"#服务启停\">#</a> 服务启停</h1>\n<p>启动：直接在命令行输入 <code>nginx</code> <br />浏览器： <code>localhost</code> <br />查看进程： <code>ps -ef|grep nginx</code> <br /><img data-src=\"https://cdn.nlark.com/yuque/0/2023/png/34696645/1689730266000-56189548-7250-4075-a8d7-ebe07a21c2cb.png#averageHue=%233285c9&amp;clientId=u5faf9193-7775-4&amp;from=paste&amp;height=533&amp;id=u16db3c4b&amp;originHeight=666&amp;originWidth=1328&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=289692&amp;status=done&amp;style=none&amp;taskId=udf067811-97d6-4a7e-908b-526572648bc&amp;title=&amp;width=1062.4\" alt=\"image.png\"><br />查看端口占用情况： <code>lsof -i:80</code> <br /> <code>nginx -s signal</code>  停止或者重启</p>\n<ul>\n<li><code>signal</code>  可替换为以下：\n<ul>\n<li><code>quit</code>  优雅停止</li>\n<li><code>stop</code>  立即停止</li>\n<li><code>reload</code>  重载配置文件</li>\n<li><code>reopen</code>  重新打开日志文件<br>\n<a name=\"fzJbd\"></a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"静态站点的部署\"><a class=\"markdownIt-Anchor\" href=\"#静态站点的部署\">#</a> 静态站点的部署</h1>\n<p><code>nginx -V</code>  查看 Nginx 的安装目录、编译参数以及配置文件和日志文件的位置等各种信息。<br /> <code>nginx -t</code>  查看 nginx 配置文件</p>\n<ul>\n<li><img data-src=\"https://cdn.nlark.com/yuque/0/2023/png/34696645/1689730733672-86a66b10-7296-477d-bc77-ccbf2564da10.png#averageHue=%230e83fd&amp;clientId=u5faf9193-7775-4&amp;from=paste&amp;height=284&amp;id=u6c5abd69&amp;originHeight=355&amp;originWidth=742&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=107512&amp;status=done&amp;style=none&amp;taskId=ua00b778b-5f2d-47a4-8412-6db3a2e363f&amp;title=&amp;width=593.6\" alt=\"image.png\"><br>\n<a name=\"LmzY0\"></a></li>\n</ul>\n<h1 id=\"nginx的配置文件\"><a class=\"markdownIt-Anchor\" href=\"#nginx的配置文件\">#</a> Nginx 的配置⽂件</h1>\n<p>Nginx 的配置⽂件是  <code>nginx.conf </code> ，⼀般位于  <code>/etc/nginx/nginx.conf </code> 。 可以使⽤  <code>nginx -t </code> 来查看配置⽂件的位置和检查配置⽂件是否正确。<br>\n<a name=\"cvhFS\"></a></p>\n<h2 id=\"配置文件的结构\"><a class=\"markdownIt-Anchor\" href=\"#配置文件的结构\">#</a> 配置⽂件的结构</h2>\n<p>Nginx 的配置⽂件是由⼀系列的指令组成的，每个指令都是由⼀个指令名和⼀个或者多个参数组成的。<br /> 指令和参数之间使⽤空格来分隔，指令以分号；结尾，参数可以使⽤单引号或者双引号来包裹  <br /> 配置⽂件分为以下⼏个部分：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 全局块</span><br><span class=\"line\">worker_processes <span class=\"number\">1</span>;</span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">\t<span class=\"meta\"># events块</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">\t<span class=\"meta\"># http块</span></span><br><span class=\"line\"> \tserver &#123;</span><br><span class=\"line\">\t\t<span class=\"meta\"># server块</span></span><br><span class=\"line\"> \t\tlocation / &#123;</span><br><span class=\"line\">\t\t\t<span class=\"meta\"># location块</span></span><br><span class=\"line\"> \t\t&#125;</span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a name=\"PaZue\"></a></p>\n<h3 id=\"全局块\"><a class=\"markdownIt-Anchor\" href=\"#全局块\">#</a> 全局块</h3>\n<p>全局块是配置⽂件的第⼀个块，也是配置⽂件的主体部分，主要⽤来设置⼀些影响 <code>Nginx</code>  服务 器整体运⾏的配置指令，主要包括配置运⾏ <code>Nginx</code>  服务器的⽤户（组）、允许⽣成的 <code>worker process</code>  数、进程 <code>PID</code>  存放路径、⽇志存放路径和类型以及配置⽂件引⼊等。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 指定运⾏Nginx服务器的⽤户，只能在全局块配置</span><br><span class=\"line\"># 将user指令注释掉，或者配置成nobody的话所有⽤户都可以运⾏</span><br><span class=\"line\"><span class=\"meta\"># user [user] [group]</span></span><br><span class=\"line\"><span class=\"meta\"># user nobody nobody;</span></span><br><span class=\"line\">user nginx;</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定⽣成的worker进程的数量，也可使⽤⾃动模式，只能在全局块配置</span><br><span class=\"line\">worker_processes <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"># 错误⽇志存放路径和类型</span><br><span class=\"line\">error_log  /var/<span class=\"built_in\">log</span>/nginx/error.<span class=\"built_in\">log</span> warn;</span><br><span class=\"line\"></span><br><span class=\"line\"># 进程PID存放路径</span><br><span class=\"line\">pid    /var/run/nginx.pid;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a name=\"nhDgE\"></a></p>\n<h3 id=\"events块\"><a class=\"markdownIt-Anchor\" href=\"#events块\">#</a> events 块</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">events &#123;</span><br><span class=\"line\">\t# 指定使⽤哪种⽹络IO模型，只能在events块中进⾏配置</span><br><span class=\"line\">\t<span class=\"meta\"># use epoll</span></span><br><span class=\"line\">\t# 每个worker process允许的最⼤连接数</span><br><span class=\"line\">\t worker_connections <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a name=\"g8zFo\"></a></p>\n<h3 id=\"http块\"><a class=\"markdownIt-Anchor\" href=\"#http块\">#</a> http 块</h3>\n<p><code>http</code>  块是配置⽂件的主要部分，包括 <code>http</code>  全局块和 <code>server</code>  块。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">\t<span class=\"meta\"># nginx 可以使⽤<span class=\"keyword\">include</span>指令引⼊其他配置⽂件</span></span><br><span class=\"line\">\t include \t/etc/nginx/mime.types;</span><br><span class=\"line\">\t# 默认类型，如果请求的URL没有包含⽂件类型，会使⽤默认类型</span><br><span class=\"line\">\t default_type application/octet-stream; # 默认类型</span><br><span class=\"line\">\t</span><br><span class=\"line\">    # 开启⾼效⽂件传输模式</span><br><span class=\"line\"> \tsendfile on;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 连接超时时间</span><br><span class=\"line\"> \tkeepalive_timeout <span class=\"number\">65</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    # access_log ⽇志存放路径和类型</span><br><span class=\"line\"></span><br><span class=\"line\">    # 格式为：access_log &lt;path&gt; [format [buffer=size] [gzip[=level]]</span><br><span class=\"line\">[flush=time] [<span class=\"keyword\">if</span>=condition]];</span><br><span class=\"line\"> \taccess_log /var/<span class=\"built_in\">log</span>/nginx/access.<span class=\"built_in\">log</span> main;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 定义⽇志格式</span><br><span class=\"line\"> \tlog_format main <span class=\"string\">&#x27;$remote_addr - $remote_user [$time_local]</span></span><br><span class=\"line\"><span class=\"string\">&quot;$request&quot; &#x27;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"string\">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class=\"line\">\t# 设置sendfile最⼤传输⽚段⼤⼩，默认为<span class=\"number\">0</span>，表示不限制</span><br><span class=\"line\">\t# sendfile_max_chunk <span class=\"number\">1</span>m;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 每个连接的请求次数</span><br><span class=\"line\">\t# keepalive_requests <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\"># keepalive超时时间</span></span><br><span class=\"line\"> \tkeepalive_timeout <span class=\"number\">65</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 开启gzip压缩</span><br><span class=\"line\">\t<span class=\"meta\"># gzip on;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    # 开启gzip压缩的最⼩⽂件⼤⼩</span><br><span class=\"line\">\t# gzip_min_length <span class=\"number\">1</span>k;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\"># gzip压缩级别，1-9，级别越⾼压缩率越⾼，但是消耗CPU资源也越多</span></span><br><span class=\"line\">\t# gzip_comp_level <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\"># gzip压缩⽂件类型</span></span><br><span class=\"line\">\t# gzip_types text/plain application/javascript application/x\u0002javascript text/css application/xml text/javascript application/x-httpd\u0002php image/jpeg image/gif image/png;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"meta\"># upstream指令⽤于定义⼀组服务器，⼀般⽤来配置反向代理和负载均衡</span></span><br><span class=\"line\"> \tupstream www.example.com &#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">        # ip_hash指令⽤于设置负载均衡的⽅式，ip_hash表示使⽤客户端的IP进⾏hash，</span><br><span class=\"line\">这样可以保证同⼀个客户端的请求每次都会分配到同⼀个服务器，解决了session共享的问题</span><br><span class=\"line\"> \t\tip_hash;</span><br><span class=\"line\">\t\t<span class=\"meta\"># weight ⽤于设置权重，权重越⾼被分配到的⼏率越⼤</span></span><br><span class=\"line\"> \t\tserver <span class=\"number\">192.168</span><span class=\"number\">.50</span><span class=\"number\">.11</span>:<span class=\"number\">80</span> weight=<span class=\"number\">3</span>;</span><br><span class=\"line\"> \t\tserver <span class=\"number\">192.168</span><span class=\"number\">.50</span><span class=\"number\">.12</span>:<span class=\"number\">80</span>;</span><br><span class=\"line\"> \t\tserver <span class=\"number\">192.168</span><span class=\"number\">.50</span><span class=\"number\">.13</span>:<span class=\"number\">80</span>;</span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\">\tserver &#123;</span><br><span class=\"line\">\t\t# 参考server块的配置</span><br><span class=\"line\"> \t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a name=\"RlVan\"></a></p>\n<h3 id=\"server块\"><a class=\"markdownIt-Anchor\" href=\"#server块\">#</a> server 块</h3>\n<p><code>server</code>  块是配置虚拟主机的，⼀个 <code>http</code>  块可以包含多个 <code>server</code>  块，每个 <code>server</code>  块就是⼀个虚拟主 机。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    # 监听IP和端⼝</span><br><span class=\"line\">    <span class=\"meta\"># listen的格式为：</span></span><br><span class=\"line\">    <span class=\"meta\"># listen [ip]:port [default_server] [ssl] [http2] [spdy]</span></span><br><span class=\"line\">    [proxy_protocol] [setfib=number] [fastopen=number] [backlog=number];</span><br><span class=\"line\">    <span class=\"meta\"># listen指令⾮常灵活，可以指定多个IP和端⼝，也可以使⽤通配符</span></span><br><span class=\"line\">    # 下⾯是⼏个实际的例⼦：</span><br><span class=\"line\">    <span class=\"meta\"># listen 127.0.0.1:80; # 监听来⾃127.0.0.1的80端⼝的请求</span></span><br><span class=\"line\">    <span class=\"meta\"># listen 80; # 监听来⾃所有IP的80端⼝的请求</span></span><br><span class=\"line\">    <span class=\"meta\"># listen *:80; # 监听来⾃所有IP的80端⼝的请求，同上</span></span><br><span class=\"line\">    <span class=\"meta\"># listen 127.0.0.1; # 监听来⾃来⾃127.0.0.1的80端⼝，默认端⼝为80</span></span><br><span class=\"line\">    listen \t<span class=\"number\">80</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    # server_name ⽤来指定虚拟主机的域名，可以使⽤精确匹配、通配符匹配和正则匹配等</span><br><span class=\"line\">    ⽅式</span><br><span class=\"line\">    # server_name example.org www.example.org; # 精确匹配</span><br><span class=\"line\">    # server_name *.example.org; # 通配符匹配</span><br><span class=\"line\">    # server_name ~^www\\d+\\.example\\.net$; # 正则匹配</span><br><span class=\"line\">    server_name localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\"># location块⽤来配置请求的路由，⼀个server块可以包含多个location块，每个</span></span><br><span class=\"line\">    location块就是⼀个请求路由</span><br><span class=\"line\">    <span class=\"meta\"># location块的格式是：</span></span><br><span class=\"line\">    <span class=\"meta\"># location [=|~|~*|^~] /uri/ &#123; ... &#125;</span></span><br><span class=\"line\">    # = 表示精确匹配，只有完全匹配上才能⽣效</span><br><span class=\"line\">    # ~ 表示区分⼤⼩写的正则匹配</span><br><span class=\"line\">    # ~* 表示不区分⼤⼩写的正则匹配</span><br><span class=\"line\">    # ^~ 表示普通字符匹配，如果匹配成功，则不再匹配其他location</span><br><span class=\"line\">    # /uri/ 表示请求的URI，可以是字符串，也可以是正则表达式</span><br><span class=\"line\">    # &#123; ... &#125; 表示location块的配置内容</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">    <span class=\"meta\"># root指令⽤于指定请求的根⽬录，可以是绝对路径，也可以是相对路径</span></span><br><span class=\"line\">    root /usr/share/nginx/html; # 根⽬录</span><br><span class=\"line\">    <span class=\"meta\"># index指令⽤于指定默认⽂件，如果请求的是⽬录，则会在⽬录下查找默认⽂件</span></span><br><span class=\"line\">    index index.html index.htm; # 默认⽂件</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    # 下⾯是⼀些location的示例：</span><br><span class=\"line\">    location = / &#123; # 精确匹配请求</span><br><span class=\"line\">    root /usr/share/nginx/html;</span><br><span class=\"line\">              index index.html index.htm;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">    location ^~ /images/ &#123; # 匹配以/images/开头的请求</span><br><span class=\"line\">    root /usr/share/nginx/html;</span><br><span class=\"line\">                     &#125;</span><br><span class=\"line\">    location ~* \\.(gif|jpg|jpeg)$ &#123; # 匹配以gif、jpg或者jpeg结尾的请求</span><br><span class=\"line\">    root /usr/share/nginx/html;</span><br><span class=\"line\">                              &#125;</span><br><span class=\"line\">    location !~ \\.(gif|jpg|jpeg)$ &#123; # 不匹配以gif、jpg或者jpeg结尾的请求</span><br><span class=\"line\">    root /usr/share/nginx/html;</span><br><span class=\"line\">                              &#125;</span><br><span class=\"line\">    location !~* \\.(gif|jpg|jpeg)$ &#123; # 不匹配以gif、jpg或者jpeg结尾的请求</span><br><span class=\"line\">    root /usr/share/nginx/html;</span><br><span class=\"line\">                               &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    # error_page ⽤于指定错误⻚⾯，可以指定多个，按照优先级从⾼到低依次查找</span><br><span class=\"line\">    error_page <span class=\"number\">500</span> <span class=\"number\">502</span> <span class=\"number\">503</span> <span class=\"number\">504</span> /<span class=\"number\">50</span>x.html; # 错误⻚⾯</span><br><span class=\"line\">    location = /<span class=\"number\">50</span>x.html &#123;</span><br><span class=\"line\">    root /usr/share/nginx/html;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a name=\"JG5xY\"></a></p>\n<h1 id=\"nginx的常用命令\"><a class=\"markdownIt-Anchor\" href=\"#nginx的常用命令\">#</a> Nginx 的常⽤命令</h1>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx \t\t\t\t# 启动Nginx</span><br><span class=\"line\">nginx -c filename \t# 指定配置⽂件</span><br><span class=\"line\">nginx -V \t\t\t# 查看Nginx的版本和编译参数等信息</span><br><span class=\"line\">nginx -t\t\t\t# 检查配置⽂件是否正确，也可⽤来定位配置⽂件的位置</span><br><span class=\"line\">nginx -s quit \t\t# 优雅停⽌Nginx</span><br><span class=\"line\">nginx -s stop \t\t# 快速停⽌Nginx</span><br><span class=\"line\">nginx -s reload \t# 重新加载配置⽂件</span><br><span class=\"line\">nginx -s reopen \t# 重新打开⽇志⽂件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a name=\"pajQD\"></a></p>\n<h1 id=\"nginx的常用模块\"><a class=\"markdownIt-Anchor\" href=\"#nginx的常用模块\">#</a> Nginx 的常⽤模块</h1>\n<table>\n<thead>\n<tr>\n<th>模块名（Module Name）</th>\n<th>描述（Description）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>http_access_module</code></td>\n<td>接受或者拒绝特定的客户端请求</td>\n</tr>\n<tr>\n<td><code>http_auth_basic_module</code></td>\n<td><code>HTTP</code>  基本认证，使⽤⽤户名和密码来限制对资源的 访问</td>\n</tr>\n<tr>\n<td><code>http_autoindex_module </code></td>\n<td>⾃动索引，⽤于显示⽬录列表</td>\n</tr>\n<tr>\n<td><code> http_browser_module</code></td>\n<td>从  <code>User-Agent </code> 请求头中获取和识别客户端浏览器</td>\n</tr>\n<tr>\n<td><code> http_charset_module</code></td>\n<td>添加特定的字符集到  <code>Content-Type</code>  响应头中</td>\n</tr>\n<tr>\n<td><code> http_empty_gif_module</code></td>\n<td>返回⼀个 1 像素的透明 <code>GIF</code>  图⽚</td>\n</tr>\n<tr>\n<td><code>http_fastcgi_module </code></td>\n<td><code>FastCGI</code>  ⽀持</td>\n</tr>\n<tr>\n<td><code>http_geo_module </code></td>\n<td>从 <code>IP</code>  地址中获取地理位置信息</td>\n</tr>\n<tr>\n<td><code>http_gzip_module</code></td>\n<td><code>Gzip</code>  压缩⽀持</td>\n</tr>\n<tr>\n<td><code>http_limit_conn_module  </code></td>\n<td>限制并发连接数</td>\n</tr>\n<tr>\n<td><code>http_limit_req_module</code></td>\n<td>限制请求速率</td>\n</tr>\n<tr>\n<td><code>http_map_module</code></td>\n<td>从变量中获取值</td>\n</tr>\n<tr>\n<td><code>http_memcached_module  </code></td>\n<td><code>Memcached</code>  ⽀持</td>\n</tr>\n<tr>\n<td><code>http_proxy_module </code></td>\n<td>反向代理⽀持</td>\n</tr>\n<tr>\n<td><code>http_referer_module</code></td>\n<td>防盗链</td>\n</tr>\n<tr>\n<td><code>http_rewrite_module  </code></td>\n<td><code>URL</code>  重写</td>\n</tr>\n<tr>\n<td><code>http_scgi_module </code></td>\n<td>转发请求到 <code>SCGI</code>  服务器</td>\n</tr>\n<tr>\n<td><code>http_ssi_module</code></td>\n<td>处理和⽀持 <code>SSI（Server Side Includes）</code></td>\n</tr>\n<tr>\n<td><code>http_split_clients_module</code></td>\n<td>根据客户端 <code>IP</code>  地址或者其他变量将客户端分配到组 中，⼀般⽤于 <code>A/B</code>  测试</td>\n</tr>\n<tr>\n<td><code>http_upstream_hash_module</code></td>\n<td>启⽤⼀致性哈希负载均衡</td>\n</tr>\n<tr>\n<td><code>http_upstream_ip_hash_module </code></td>\n<td>启⽤ <code>IP</code>  哈希负载均衡</td>\n</tr>\n<tr>\n<td><code>http_upstream_keepalive_module  </code></td>\n<td>启⽤⻓连接负载均衡</td>\n</tr>\n<tr>\n<td><code>http_upstream_least_conn_module </code></td>\n<td>启⽤最少连接负载均衡</td>\n</tr>\n<tr>\n<td><code>http_upstream_zone_module</code></td>\n<td>启⽤共享内存负载均衡</td>\n</tr>\n<tr>\n<td><code> http_userid_module</code></td>\n<td>为客户端设置⼀个唯⼀的 <code>ID（UID、cookie）</code></td>\n</tr>\n<tr>\n<td><code>http_uwsgi_module</code></td>\n<td>转发请求到 <code>uWSGI</code>  服务器，⼀般⽤于 <code>Python</code>  应用</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "note"
            ]
        }
    ]
}